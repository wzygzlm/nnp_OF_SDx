// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="a0_parseEvents,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z007sclg225-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.381000,HLS_SYN_LAT=58653,HLS_SYN_TPT=none,HLS_SYN_MEM=66,HLS_SYN_DSP=1,HLS_SYN_FF=3730,HLS_SYN_LUT=6499}" *)

module a0_parseEvents (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_eventSlice_AWVALID,
        m_axi_eventSlice_AWREADY,
        m_axi_eventSlice_AWADDR,
        m_axi_eventSlice_AWID,
        m_axi_eventSlice_AWLEN,
        m_axi_eventSlice_AWSIZE,
        m_axi_eventSlice_AWBURST,
        m_axi_eventSlice_AWLOCK,
        m_axi_eventSlice_AWCACHE,
        m_axi_eventSlice_AWPROT,
        m_axi_eventSlice_AWQOS,
        m_axi_eventSlice_AWREGION,
        m_axi_eventSlice_AWUSER,
        m_axi_eventSlice_WVALID,
        m_axi_eventSlice_WREADY,
        m_axi_eventSlice_WDATA,
        m_axi_eventSlice_WSTRB,
        m_axi_eventSlice_WLAST,
        m_axi_eventSlice_WID,
        m_axi_eventSlice_WUSER,
        m_axi_eventSlice_ARVALID,
        m_axi_eventSlice_ARREADY,
        m_axi_eventSlice_ARADDR,
        m_axi_eventSlice_ARID,
        m_axi_eventSlice_ARLEN,
        m_axi_eventSlice_ARSIZE,
        m_axi_eventSlice_ARBURST,
        m_axi_eventSlice_ARLOCK,
        m_axi_eventSlice_ARCACHE,
        m_axi_eventSlice_ARPROT,
        m_axi_eventSlice_ARQOS,
        m_axi_eventSlice_ARREGION,
        m_axi_eventSlice_ARUSER,
        m_axi_eventSlice_RVALID,
        m_axi_eventSlice_RREADY,
        m_axi_eventSlice_RDATA,
        m_axi_eventSlice_RLAST,
        m_axi_eventSlice_RID,
        m_axi_eventSlice_RUSER,
        m_axi_eventSlice_RRESP,
        m_axi_eventSlice_BVALID,
        m_axi_eventSlice_BREADY,
        m_axi_eventSlice_BRESP,
        m_axi_eventSlice_BID,
        m_axi_eventSlice_BUSER,
        data_dout,
        data_empty_n,
        data_read,
        eventsArraySize,
        eventSlice_offset
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_pp0_stage1 = 6'd8;
parameter    ap_ST_fsm_state26 = 6'd16;
parameter    ap_ST_fsm_state27 = 6'd32;
parameter    C_M_AXI_EVENTSLICE_ID_WIDTH = 1;
parameter    C_M_AXI_EVENTSLICE_ADDR_WIDTH = 32;
parameter    C_M_AXI_EVENTSLICE_DATA_WIDTH = 32;
parameter    C_M_AXI_EVENTSLICE_AWUSER_WIDTH = 1;
parameter    C_M_AXI_EVENTSLICE_ARUSER_WIDTH = 1;
parameter    C_M_AXI_EVENTSLICE_WUSER_WIDTH = 1;
parameter    C_M_AXI_EVENTSLICE_RUSER_WIDTH = 1;
parameter    C_M_AXI_EVENTSLICE_BUSER_WIDTH = 1;
parameter    C_M_AXI_EVENTSLICE_USER_VALUE = 0;
parameter    C_M_AXI_EVENTSLICE_PROT_VALUE = 0;
parameter    C_M_AXI_EVENTSLICE_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_M_AXI_EVENTSLICE_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_eventSlice_AWVALID;
input   m_axi_eventSlice_AWREADY;
output  [C_M_AXI_EVENTSLICE_ADDR_WIDTH - 1:0] m_axi_eventSlice_AWADDR;
output  [C_M_AXI_EVENTSLICE_ID_WIDTH - 1:0] m_axi_eventSlice_AWID;
output  [7:0] m_axi_eventSlice_AWLEN;
output  [2:0] m_axi_eventSlice_AWSIZE;
output  [1:0] m_axi_eventSlice_AWBURST;
output  [1:0] m_axi_eventSlice_AWLOCK;
output  [3:0] m_axi_eventSlice_AWCACHE;
output  [2:0] m_axi_eventSlice_AWPROT;
output  [3:0] m_axi_eventSlice_AWQOS;
output  [3:0] m_axi_eventSlice_AWREGION;
output  [C_M_AXI_EVENTSLICE_AWUSER_WIDTH - 1:0] m_axi_eventSlice_AWUSER;
output   m_axi_eventSlice_WVALID;
input   m_axi_eventSlice_WREADY;
output  [C_M_AXI_EVENTSLICE_DATA_WIDTH - 1:0] m_axi_eventSlice_WDATA;
output  [C_M_AXI_EVENTSLICE_WSTRB_WIDTH - 1:0] m_axi_eventSlice_WSTRB;
output   m_axi_eventSlice_WLAST;
output  [C_M_AXI_EVENTSLICE_ID_WIDTH - 1:0] m_axi_eventSlice_WID;
output  [C_M_AXI_EVENTSLICE_WUSER_WIDTH - 1:0] m_axi_eventSlice_WUSER;
output   m_axi_eventSlice_ARVALID;
input   m_axi_eventSlice_ARREADY;
output  [C_M_AXI_EVENTSLICE_ADDR_WIDTH - 1:0] m_axi_eventSlice_ARADDR;
output  [C_M_AXI_EVENTSLICE_ID_WIDTH - 1:0] m_axi_eventSlice_ARID;
output  [7:0] m_axi_eventSlice_ARLEN;
output  [2:0] m_axi_eventSlice_ARSIZE;
output  [1:0] m_axi_eventSlice_ARBURST;
output  [1:0] m_axi_eventSlice_ARLOCK;
output  [3:0] m_axi_eventSlice_ARCACHE;
output  [2:0] m_axi_eventSlice_ARPROT;
output  [3:0] m_axi_eventSlice_ARQOS;
output  [3:0] m_axi_eventSlice_ARREGION;
output  [C_M_AXI_EVENTSLICE_ARUSER_WIDTH - 1:0] m_axi_eventSlice_ARUSER;
input   m_axi_eventSlice_RVALID;
output   m_axi_eventSlice_RREADY;
input  [C_M_AXI_EVENTSLICE_DATA_WIDTH - 1:0] m_axi_eventSlice_RDATA;
input   m_axi_eventSlice_RLAST;
input  [C_M_AXI_EVENTSLICE_ID_WIDTH - 1:0] m_axi_eventSlice_RID;
input  [C_M_AXI_EVENTSLICE_RUSER_WIDTH - 1:0] m_axi_eventSlice_RUSER;
input  [1:0] m_axi_eventSlice_RRESP;
input   m_axi_eventSlice_BVALID;
output   m_axi_eventSlice_BREADY;
input  [1:0] m_axi_eventSlice_BRESP;
input  [C_M_AXI_EVENTSLICE_ID_WIDTH - 1:0] m_axi_eventSlice_BID;
input  [C_M_AXI_EVENTSLICE_BUSER_WIDTH - 1:0] m_axi_eventSlice_BUSER;
input  [31:0] data_dout;
input   data_empty_n;
output   data_read;
input  [31:0] eventsArraySize;
input  [31:0] eventSlice_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_read;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] glPLSlices_0_address0;
reg    glPLSlices_0_ce0;
reg    glPLSlices_0_we0;
reg   [7:0] glPLSlices_0_d0;
wire   [7:0] glPLSlices_0_q0;
reg    glPLSlices_0_ce1;
reg    glPLSlices_0_we1;
reg   [14:0] glPLSlices_1_address0;
reg    glPLSlices_1_ce0;
reg    glPLSlices_1_we0;
reg   [7:0] glPLSlices_1_d0;
wire   [7:0] glPLSlices_1_q0;
reg    glPLSlices_1_ce1;
reg    glPLSlices_1_we1;
reg   [14:0] glPLSlices_2_address0;
reg    glPLSlices_2_ce0;
reg    glPLSlices_2_we0;
reg   [7:0] glPLSlices_2_d0;
wire   [7:0] glPLSlices_2_q0;
reg    glPLSlices_2_ce1;
reg    glPLSlices_2_we1;
reg   [14:0] glPLSlices_3_address0;
reg    glPLSlices_3_ce0;
reg    glPLSlices_3_we0;
reg   [7:0] glPLSlices_3_d0;
wire   [7:0] glPLSlices_3_q0;
reg    glPLSlices_3_ce1;
reg    glPLSlices_3_we1;
reg    data_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_9_reg_463;
reg    eventSlice_AWVALID;
wire    eventSlice_AWREADY;
reg    eventSlice_WVALID;
wire    eventSlice_WREADY;
wire    eventSlice_ARREADY;
wire    eventSlice_RVALID;
wire   [7:0] eventSlice_RDATA;
wire    eventSlice_RLAST;
wire   [0:0] eventSlice_RID;
wire   [0:0] eventSlice_RUSER;
wire   [1:0] eventSlice_RRESP;
wire    eventSlice_BVALID;
reg    eventSlice_BREADY;
wire   [1:0] eventSlice_BRESP;
wire   [0:0] eventSlice_BID;
wire   [0:0] eventSlice_BUSER;
reg   [31:0] i_reg_190;
wire    ap_CS_fsm_state2;
wire    grp_resetCurrentSliceHW_fu_217_ap_idle;
wire    grp_resetCurrentSliceHW_fu_217_ap_ready;
wire    grp_resetCurrentSliceHW_fu_217_ap_done;
wire   [31:0] tmp_8_fu_305_p3;
reg   [31:0] tmp_8_reg_458;
wire   [0:0] tmp_9_fu_313_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state13_pp0_stage0_iter5;
wire    ap_block_state15_pp0_stage0_iter6;
wire    ap_block_state17_pp0_stage0_iter7;
wire    ap_block_state19_pp0_stage0_iter8;
wire    ap_block_state21_pp0_stage0_iter9;
wire    ap_block_state23_pp0_stage0_iter10;
wire    ap_block_state25_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
reg   [14:0] x_cast_reg_467;
reg    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state10_pp0_stage1_iter3;
wire    ap_block_state12_pp0_stage1_iter4;
wire    ap_block_state14_pp0_stage1_iter5;
wire    ap_block_state16_pp0_stage1_iter6;
wire    ap_block_state18_pp0_stage1_iter7;
wire    ap_block_state20_pp0_stage1_iter8;
wire    ap_block_state22_pp0_stage1_iter9;
wire    ap_block_state24_pp0_stage1_iter10;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] tmp_10_fu_328_p3;
reg   [0:0] tmp_10_reg_473;
reg   [0:0] tmp_10_reg_473_pp0_iter1_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter2_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter3_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter4_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter5_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter6_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter7_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter8_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter9_reg;
reg   [0:0] tmp_10_reg_473_pp0_iter10_reg;
reg   [9:0] tmp_11_reg_477;
reg   [9:0] tmp_11_reg_477_pp0_iter1_reg;
reg   [9:0] tmp_11_reg_477_pp0_iter2_reg;
reg   [9:0] tmp_11_reg_477_pp0_iter3_reg;
reg   [9:0] tmp_11_reg_477_pp0_iter4_reg;
reg   [9:0] tmp_11_reg_477_pp0_iter5_reg;
reg   [9:0] tmp_11_reg_477_pp0_iter6_reg;
reg   [9:0] tmp_11_reg_477_pp0_iter7_reg;
reg   [9:0] tmp_11_reg_477_pp0_iter8_reg;
reg   [9:0] tmp_11_reg_477_pp0_iter9_reg;
reg   [13:0] tmp_12_reg_482;
reg   [13:0] tmp_12_reg_482_pp0_iter1_reg;
reg   [13:0] tmp_12_reg_482_pp0_iter2_reg;
reg   [13:0] tmp_12_reg_482_pp0_iter3_reg;
reg   [13:0] tmp_12_reg_482_pp0_iter4_reg;
reg   [13:0] tmp_12_reg_482_pp0_iter5_reg;
reg   [13:0] tmp_12_reg_482_pp0_iter6_reg;
reg   [13:0] tmp_12_reg_482_pp0_iter7_reg;
reg   [13:0] tmp_12_reg_482_pp0_iter8_reg;
reg   [13:0] tmp_12_reg_482_pp0_iter9_reg;
wire   [31:0] i_2_fu_356_p2;
reg   [31:0] i_2_reg_487;
wire   [31:0] mul_fu_447_p2;
reg   [31:0] mul_reg_492;
reg   [10:0] tmp_13_reg_497;
reg   [10:0] tmp_13_reg_497_pp0_iter2_reg;
reg   [10:0] tmp_13_reg_497_pp0_iter3_reg;
reg   [10:0] tmp_13_reg_497_pp0_iter4_reg;
reg   [10:0] tmp_13_reg_497_pp0_iter5_reg;
reg   [10:0] tmp_13_reg_497_pp0_iter6_reg;
reg   [10:0] tmp_13_reg_497_pp0_iter7_reg;
reg   [10:0] tmp_13_reg_497_pp0_iter8_reg;
reg   [10:0] tmp_13_reg_497_pp0_iter9_reg;
reg   [10:0] tmp_13_reg_497_pp0_iter10_reg;
wire   [14:0] grp_fu_365_p2;
reg   [14:0] newIndex_i_reg_502;
reg   [14:0] glPLSlices_0_addr_reg_507;
reg   [14:0] glPLSlices_1_addr_reg_512;
reg   [14:0] glPLSlices_2_addr_reg_517;
reg   [14:0] glPLSlices_3_addr_reg_522;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
wire    grp_copyToPS_fu_202_ap_start;
wire    grp_copyToPS_fu_202_ap_done;
wire    grp_copyToPS_fu_202_ap_idle;
wire    grp_copyToPS_fu_202_ap_ready;
wire    grp_copyToPS_fu_202_m_axi_eventSlice_AWVALID;
wire   [31:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWADDR;
wire   [0:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWID;
wire   [31:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWLEN;
wire   [2:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWSIZE;
wire   [1:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWBURST;
wire   [1:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWLOCK;
wire   [3:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWCACHE;
wire   [2:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWPROT;
wire   [3:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWQOS;
wire   [3:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWREGION;
wire   [0:0] grp_copyToPS_fu_202_m_axi_eventSlice_AWUSER;
wire    grp_copyToPS_fu_202_m_axi_eventSlice_WVALID;
wire   [7:0] grp_copyToPS_fu_202_m_axi_eventSlice_WDATA;
wire   [0:0] grp_copyToPS_fu_202_m_axi_eventSlice_WSTRB;
wire    grp_copyToPS_fu_202_m_axi_eventSlice_WLAST;
wire   [0:0] grp_copyToPS_fu_202_m_axi_eventSlice_WID;
wire   [0:0] grp_copyToPS_fu_202_m_axi_eventSlice_WUSER;
wire    grp_copyToPS_fu_202_m_axi_eventSlice_ARVALID;
wire   [31:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARADDR;
wire   [0:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARID;
wire   [31:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARLEN;
wire   [2:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARSIZE;
wire   [1:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARBURST;
wire   [1:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARLOCK;
wire   [3:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARCACHE;
wire   [2:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARPROT;
wire   [3:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARQOS;
wire   [3:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARREGION;
wire   [0:0] grp_copyToPS_fu_202_m_axi_eventSlice_ARUSER;
wire    grp_copyToPS_fu_202_m_axi_eventSlice_RREADY;
wire    grp_copyToPS_fu_202_m_axi_eventSlice_BREADY;
wire   [14:0] grp_copyToPS_fu_202_glPLSlices_0_address0;
wire    grp_copyToPS_fu_202_glPLSlices_0_ce0;
wire   [14:0] grp_copyToPS_fu_202_glPLSlices_1_address0;
wire    grp_copyToPS_fu_202_glPLSlices_1_ce0;
wire   [14:0] grp_copyToPS_fu_202_glPLSlices_2_address0;
wire    grp_copyToPS_fu_202_glPLSlices_2_ce0;
wire   [14:0] grp_copyToPS_fu_202_glPLSlices_3_address0;
wire    grp_copyToPS_fu_202_glPLSlices_3_ce0;
wire    grp_resetCurrentSliceHW_fu_217_ap_start;
wire   [14:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_0_address0;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_0_ce0;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_0_we0;
wire   [7:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_0_d0;
wire   [14:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_0_address1;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_0_ce1;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_0_we1;
wire   [7:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_0_d1;
wire   [14:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_1_address0;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_1_ce0;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_1_we0;
wire   [7:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_1_d0;
wire   [14:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_1_address1;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_1_ce1;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_1_we1;
wire   [7:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_1_d1;
wire   [14:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_2_address0;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_2_ce0;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_2_we0;
wire   [7:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_2_d0;
wire   [14:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_2_address1;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_2_ce1;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_2_we1;
wire   [7:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_2_d1;
wire   [14:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_3_address0;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_3_ce0;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_3_we0;
wire   [7:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_3_d0;
wire   [14:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_3_address1;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_3_ce1;
wire    grp_resetCurrentSliceHW_fu_217_glPLSlices_3_we1;
wire   [7:0] grp_resetCurrentSliceHW_fu_217_glPLSlices_3_d1;
reg   [31:0] ap_phi_mux_i_phi_fu_194_p4;
wire    ap_block_pp0_stage0;
reg    grp_copyToPS_fu_202_ap_start_reg;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
reg    grp_resetCurrentSliceHW_fu_217_ap_start_reg;
wire  signed [31:0] tmp_69_cast_fu_408_p1;
wire  signed [14:0] arrayNo_i_fu_416_p1;
wire   [7:0] tmp_3_i_fu_437_p2;
wire   [31:0] tmp_fu_229_p2;
wire   [31:0] tmp_op_op9_fu_243_p2;
wire   [31:0] p_neg_fu_257_p2;
wire   [30:0] p_lshr_fu_263_p4;
wire   [0:0] tmp_4_fu_249_p3;
wire   [30:0] p_neg_t_fu_273_p2;
wire   [30:0] tmp_5_fu_279_p4;
wire   [0:0] tmp_3_fu_235_p3;
wire   [30:0] tmp_6_fu_289_p3;
wire   [30:0] tmp_7_fu_297_p3;
wire   [6:0] grp_fu_365_p1;
wire   [15:0] p_shl_cast_fu_379_p3;
wire   [15:0] p_shl3_cast_fu_386_p3;
wire   [15:0] newIndex1_i_cast_fu_399_p1;
wire   [15:0] tmp_s_fu_393_p2;
wire   [15:0] tmp_62_fu_402_p2;
wire   [15:0] tmp_1_fu_423_p5;
wire   [7:0] tmp_1_fu_423_p6;
wire   [14:0] mul_fu_447_p0;
wire   [16:0] mul_fu_447_p1;
reg    grp_fu_365_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [31:0] mul_fu_447_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 grp_copyToPS_fu_202_ap_start_reg = 1'b0;
#0 grp_resetCurrentSliceHW_fu_217_ap_start_reg = 1'b0;
end

a0_parseEvents_glPLSeOg #(
    .DataWidth( 8 ),
    .AddressRange( 32400 ),
    .AddressWidth( 15 ))
glPLSlices_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(glPLSlices_0_address0),
    .ce0(glPLSlices_0_ce0),
    .we0(glPLSlices_0_we0),
    .d0(glPLSlices_0_d0),
    .q0(glPLSlices_0_q0),
    .address1(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_address1),
    .ce1(glPLSlices_0_ce1),
    .we1(glPLSlices_0_we1),
    .d1(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_d1)
);

a0_parseEvents_glPLSeOg #(
    .DataWidth( 8 ),
    .AddressRange( 32400 ),
    .AddressWidth( 15 ))
glPLSlices_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(glPLSlices_1_address0),
    .ce0(glPLSlices_1_ce0),
    .we0(glPLSlices_1_we0),
    .d0(glPLSlices_1_d0),
    .q0(glPLSlices_1_q0),
    .address1(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_address1),
    .ce1(glPLSlices_1_ce1),
    .we1(glPLSlices_1_we1),
    .d1(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_d1)
);

a0_parseEvents_glPLSeOg #(
    .DataWidth( 8 ),
    .AddressRange( 32400 ),
    .AddressWidth( 15 ))
glPLSlices_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(glPLSlices_2_address0),
    .ce0(glPLSlices_2_ce0),
    .we0(glPLSlices_2_we0),
    .d0(glPLSlices_2_d0),
    .q0(glPLSlices_2_q0),
    .address1(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_address1),
    .ce1(glPLSlices_2_ce1),
    .we1(glPLSlices_2_we1),
    .d1(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_d1)
);

a0_parseEvents_glPLSeOg #(
    .DataWidth( 8 ),
    .AddressRange( 32400 ),
    .AddressWidth( 15 ))
glPLSlices_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(glPLSlices_3_address0),
    .ce0(glPLSlices_3_ce0),
    .we0(glPLSlices_3_we0),
    .d0(glPLSlices_3_d0),
    .q0(glPLSlices_3_q0),
    .address1(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_address1),
    .ce1(glPLSlices_3_ce1),
    .we1(glPLSlices_3_we1),
    .d1(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_d1)
);

a0_parseEvents_eventSlice_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_EVENTSLICE_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_EVENTSLICE_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_EVENTSLICE_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_EVENTSLICE_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_EVENTSLICE_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_EVENTSLICE_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_EVENTSLICE_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_EVENTSLICE_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_EVENTSLICE_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_EVENTSLICE_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_EVENTSLICE_CACHE_VALUE ))
parseEvents_eventSlice_m_axi_U(
    .AWVALID(m_axi_eventSlice_AWVALID),
    .AWREADY(m_axi_eventSlice_AWREADY),
    .AWADDR(m_axi_eventSlice_AWADDR),
    .AWID(m_axi_eventSlice_AWID),
    .AWLEN(m_axi_eventSlice_AWLEN),
    .AWSIZE(m_axi_eventSlice_AWSIZE),
    .AWBURST(m_axi_eventSlice_AWBURST),
    .AWLOCK(m_axi_eventSlice_AWLOCK),
    .AWCACHE(m_axi_eventSlice_AWCACHE),
    .AWPROT(m_axi_eventSlice_AWPROT),
    .AWQOS(m_axi_eventSlice_AWQOS),
    .AWREGION(m_axi_eventSlice_AWREGION),
    .AWUSER(m_axi_eventSlice_AWUSER),
    .WVALID(m_axi_eventSlice_WVALID),
    .WREADY(m_axi_eventSlice_WREADY),
    .WDATA(m_axi_eventSlice_WDATA),
    .WSTRB(m_axi_eventSlice_WSTRB),
    .WLAST(m_axi_eventSlice_WLAST),
    .WID(m_axi_eventSlice_WID),
    .WUSER(m_axi_eventSlice_WUSER),
    .ARVALID(m_axi_eventSlice_ARVALID),
    .ARREADY(m_axi_eventSlice_ARREADY),
    .ARADDR(m_axi_eventSlice_ARADDR),
    .ARID(m_axi_eventSlice_ARID),
    .ARLEN(m_axi_eventSlice_ARLEN),
    .ARSIZE(m_axi_eventSlice_ARSIZE),
    .ARBURST(m_axi_eventSlice_ARBURST),
    .ARLOCK(m_axi_eventSlice_ARLOCK),
    .ARCACHE(m_axi_eventSlice_ARCACHE),
    .ARPROT(m_axi_eventSlice_ARPROT),
    .ARQOS(m_axi_eventSlice_ARQOS),
    .ARREGION(m_axi_eventSlice_ARREGION),
    .ARUSER(m_axi_eventSlice_ARUSER),
    .RVALID(m_axi_eventSlice_RVALID),
    .RREADY(m_axi_eventSlice_RREADY),
    .RDATA(m_axi_eventSlice_RDATA),
    .RLAST(m_axi_eventSlice_RLAST),
    .RID(m_axi_eventSlice_RID),
    .RUSER(m_axi_eventSlice_RUSER),
    .RRESP(m_axi_eventSlice_RRESP),
    .BVALID(m_axi_eventSlice_BVALID),
    .BREADY(m_axi_eventSlice_BREADY),
    .BRESP(m_axi_eventSlice_BRESP),
    .BID(m_axi_eventSlice_BID),
    .BUSER(m_axi_eventSlice_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(eventSlice_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(eventSlice_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(eventSlice_RDATA),
    .I_RID(eventSlice_RID),
    .I_RUSER(eventSlice_RUSER),
    .I_RRESP(eventSlice_RRESP),
    .I_RLAST(eventSlice_RLAST),
    .I_AWVALID(eventSlice_AWVALID),
    .I_AWREADY(eventSlice_AWREADY),
    .I_AWADDR(grp_copyToPS_fu_202_m_axi_eventSlice_AWADDR),
    .I_AWID(grp_copyToPS_fu_202_m_axi_eventSlice_AWID),
    .I_AWLEN(grp_copyToPS_fu_202_m_axi_eventSlice_AWLEN),
    .I_AWSIZE(grp_copyToPS_fu_202_m_axi_eventSlice_AWSIZE),
    .I_AWLOCK(grp_copyToPS_fu_202_m_axi_eventSlice_AWLOCK),
    .I_AWCACHE(grp_copyToPS_fu_202_m_axi_eventSlice_AWCACHE),
    .I_AWQOS(grp_copyToPS_fu_202_m_axi_eventSlice_AWQOS),
    .I_AWPROT(grp_copyToPS_fu_202_m_axi_eventSlice_AWPROT),
    .I_AWUSER(grp_copyToPS_fu_202_m_axi_eventSlice_AWUSER),
    .I_AWBURST(grp_copyToPS_fu_202_m_axi_eventSlice_AWBURST),
    .I_AWREGION(grp_copyToPS_fu_202_m_axi_eventSlice_AWREGION),
    .I_WVALID(eventSlice_WVALID),
    .I_WREADY(eventSlice_WREADY),
    .I_WDATA(grp_copyToPS_fu_202_m_axi_eventSlice_WDATA),
    .I_WID(grp_copyToPS_fu_202_m_axi_eventSlice_WID),
    .I_WUSER(grp_copyToPS_fu_202_m_axi_eventSlice_WUSER),
    .I_WLAST(grp_copyToPS_fu_202_m_axi_eventSlice_WLAST),
    .I_WSTRB(grp_copyToPS_fu_202_m_axi_eventSlice_WSTRB),
    .I_BVALID(eventSlice_BVALID),
    .I_BREADY(eventSlice_BREADY),
    .I_BRESP(eventSlice_BRESP),
    .I_BID(eventSlice_BID),
    .I_BUSER(eventSlice_BUSER)
);

a0_copyToPS grp_copyToPS_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_copyToPS_fu_202_ap_start),
    .ap_done(grp_copyToPS_fu_202_ap_done),
    .ap_idle(grp_copyToPS_fu_202_ap_idle),
    .ap_ready(grp_copyToPS_fu_202_ap_ready),
    .m_axi_eventSlice_AWVALID(grp_copyToPS_fu_202_m_axi_eventSlice_AWVALID),
    .m_axi_eventSlice_AWREADY(eventSlice_AWREADY),
    .m_axi_eventSlice_AWADDR(grp_copyToPS_fu_202_m_axi_eventSlice_AWADDR),
    .m_axi_eventSlice_AWID(grp_copyToPS_fu_202_m_axi_eventSlice_AWID),
    .m_axi_eventSlice_AWLEN(grp_copyToPS_fu_202_m_axi_eventSlice_AWLEN),
    .m_axi_eventSlice_AWSIZE(grp_copyToPS_fu_202_m_axi_eventSlice_AWSIZE),
    .m_axi_eventSlice_AWBURST(grp_copyToPS_fu_202_m_axi_eventSlice_AWBURST),
    .m_axi_eventSlice_AWLOCK(grp_copyToPS_fu_202_m_axi_eventSlice_AWLOCK),
    .m_axi_eventSlice_AWCACHE(grp_copyToPS_fu_202_m_axi_eventSlice_AWCACHE),
    .m_axi_eventSlice_AWPROT(grp_copyToPS_fu_202_m_axi_eventSlice_AWPROT),
    .m_axi_eventSlice_AWQOS(grp_copyToPS_fu_202_m_axi_eventSlice_AWQOS),
    .m_axi_eventSlice_AWREGION(grp_copyToPS_fu_202_m_axi_eventSlice_AWREGION),
    .m_axi_eventSlice_AWUSER(grp_copyToPS_fu_202_m_axi_eventSlice_AWUSER),
    .m_axi_eventSlice_WVALID(grp_copyToPS_fu_202_m_axi_eventSlice_WVALID),
    .m_axi_eventSlice_WREADY(eventSlice_WREADY),
    .m_axi_eventSlice_WDATA(grp_copyToPS_fu_202_m_axi_eventSlice_WDATA),
    .m_axi_eventSlice_WSTRB(grp_copyToPS_fu_202_m_axi_eventSlice_WSTRB),
    .m_axi_eventSlice_WLAST(grp_copyToPS_fu_202_m_axi_eventSlice_WLAST),
    .m_axi_eventSlice_WID(grp_copyToPS_fu_202_m_axi_eventSlice_WID),
    .m_axi_eventSlice_WUSER(grp_copyToPS_fu_202_m_axi_eventSlice_WUSER),
    .m_axi_eventSlice_ARVALID(grp_copyToPS_fu_202_m_axi_eventSlice_ARVALID),
    .m_axi_eventSlice_ARREADY(1'b0),
    .m_axi_eventSlice_ARADDR(grp_copyToPS_fu_202_m_axi_eventSlice_ARADDR),
    .m_axi_eventSlice_ARID(grp_copyToPS_fu_202_m_axi_eventSlice_ARID),
    .m_axi_eventSlice_ARLEN(grp_copyToPS_fu_202_m_axi_eventSlice_ARLEN),
    .m_axi_eventSlice_ARSIZE(grp_copyToPS_fu_202_m_axi_eventSlice_ARSIZE),
    .m_axi_eventSlice_ARBURST(grp_copyToPS_fu_202_m_axi_eventSlice_ARBURST),
    .m_axi_eventSlice_ARLOCK(grp_copyToPS_fu_202_m_axi_eventSlice_ARLOCK),
    .m_axi_eventSlice_ARCACHE(grp_copyToPS_fu_202_m_axi_eventSlice_ARCACHE),
    .m_axi_eventSlice_ARPROT(grp_copyToPS_fu_202_m_axi_eventSlice_ARPROT),
    .m_axi_eventSlice_ARQOS(grp_copyToPS_fu_202_m_axi_eventSlice_ARQOS),
    .m_axi_eventSlice_ARREGION(grp_copyToPS_fu_202_m_axi_eventSlice_ARREGION),
    .m_axi_eventSlice_ARUSER(grp_copyToPS_fu_202_m_axi_eventSlice_ARUSER),
    .m_axi_eventSlice_RVALID(1'b0),
    .m_axi_eventSlice_RREADY(grp_copyToPS_fu_202_m_axi_eventSlice_RREADY),
    .m_axi_eventSlice_RDATA(8'd0),
    .m_axi_eventSlice_RLAST(1'b0),
    .m_axi_eventSlice_RID(1'd0),
    .m_axi_eventSlice_RUSER(1'd0),
    .m_axi_eventSlice_RRESP(2'd0),
    .m_axi_eventSlice_BVALID(eventSlice_BVALID),
    .m_axi_eventSlice_BREADY(grp_copyToPS_fu_202_m_axi_eventSlice_BREADY),
    .m_axi_eventSlice_BRESP(eventSlice_BRESP),
    .m_axi_eventSlice_BID(eventSlice_BID),
    .m_axi_eventSlice_BUSER(eventSlice_BUSER),
    .eventSlice_offset(eventSlice_offset),
    .glPLSlices_0_address0(grp_copyToPS_fu_202_glPLSlices_0_address0),
    .glPLSlices_0_ce0(grp_copyToPS_fu_202_glPLSlices_0_ce0),
    .glPLSlices_0_q0(glPLSlices_0_q0),
    .glPLSlices_1_address0(grp_copyToPS_fu_202_glPLSlices_1_address0),
    .glPLSlices_1_ce0(grp_copyToPS_fu_202_glPLSlices_1_ce0),
    .glPLSlices_1_q0(glPLSlices_1_q0),
    .glPLSlices_2_address0(grp_copyToPS_fu_202_glPLSlices_2_address0),
    .glPLSlices_2_ce0(grp_copyToPS_fu_202_glPLSlices_2_ce0),
    .glPLSlices_2_q0(glPLSlices_2_q0),
    .glPLSlices_3_address0(grp_copyToPS_fu_202_glPLSlices_3_address0),
    .glPLSlices_3_ce0(grp_copyToPS_fu_202_glPLSlices_3_ce0),
    .glPLSlices_3_q0(glPLSlices_3_q0)
);

a0_resetCurrentSliceHW grp_resetCurrentSliceHW_fu_217(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_resetCurrentSliceHW_fu_217_ap_start),
    .ap_done(grp_resetCurrentSliceHW_fu_217_ap_done),
    .ap_idle(grp_resetCurrentSliceHW_fu_217_ap_idle),
    .ap_ready(grp_resetCurrentSliceHW_fu_217_ap_ready),
    .glPLSlices_0_address0(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_address0),
    .glPLSlices_0_ce0(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_ce0),
    .glPLSlices_0_we0(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_we0),
    .glPLSlices_0_d0(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_d0),
    .glPLSlices_0_address1(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_address1),
    .glPLSlices_0_ce1(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_ce1),
    .glPLSlices_0_we1(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_we1),
    .glPLSlices_0_d1(grp_resetCurrentSliceHW_fu_217_glPLSlices_0_d1),
    .glPLSlices_1_address0(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_address0),
    .glPLSlices_1_ce0(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_ce0),
    .glPLSlices_1_we0(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_we0),
    .glPLSlices_1_d0(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_d0),
    .glPLSlices_1_address1(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_address1),
    .glPLSlices_1_ce1(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_ce1),
    .glPLSlices_1_we1(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_we1),
    .glPLSlices_1_d1(grp_resetCurrentSliceHW_fu_217_glPLSlices_1_d1),
    .glPLSlices_2_address0(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_address0),
    .glPLSlices_2_ce0(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_ce0),
    .glPLSlices_2_we0(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_we0),
    .glPLSlices_2_d0(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_d0),
    .glPLSlices_2_address1(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_address1),
    .glPLSlices_2_ce1(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_ce1),
    .glPLSlices_2_we1(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_we1),
    .glPLSlices_2_d1(grp_resetCurrentSliceHW_fu_217_glPLSlices_2_d1),
    .glPLSlices_3_address0(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_address0),
    .glPLSlices_3_ce0(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_ce0),
    .glPLSlices_3_we0(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_we0),
    .glPLSlices_3_d0(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_d0),
    .glPLSlices_3_address1(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_address1),
    .glPLSlices_3_ce1(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_ce1),
    .glPLSlices_3_we1(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_we1),
    .glPLSlices_3_d1(grp_resetCurrentSliceHW_fu_217_glPLSlices_3_d1)
);

a0_parseEvents_urem_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
parseEvents_urem_ibs_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_cast_reg_467),
    .din1(grp_fu_365_p1),
    .ce(grp_fu_365_ce),
    .dout(grp_fu_365_p2)
);

a0_parseEvents_mux_4dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 16 ),
    .dout_WIDTH( 8 ))
parseEvents_mux_4dEe_U19(
    .din0(glPLSlices_0_q0),
    .din1(glPLSlices_1_q0),
    .din2(glPLSlices_2_q0),
    .din3(glPLSlices_3_q0),
    .din4(tmp_1_fu_423_p5),
    .dout(tmp_1_fu_423_p6)
);

a0_parseEvents_mul_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
parseEvents_mul_mjbC_U20(
    .din0(mul_fu_447_p0),
    .din1(mul_fu_447_p1),
    .dout(mul_fu_447_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_resetCurrentSliceHW_fu_217_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if (((grp_resetCurrentSliceHW_fu_217_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_copyToPS_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            grp_copyToPS_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_copyToPS_fu_202_ap_ready == 1'b1)) begin
            grp_copyToPS_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_resetCurrentSliceHW_fu_217_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_resetCurrentSliceHW_fu_217_ap_start_reg <= 1'b1;
        end else if ((grp_resetCurrentSliceHW_fu_217_ap_ready == 1'b1)) begin
            grp_resetCurrentSliceHW_fu_217_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_reg_463 == 1'd0))) begin
        i_reg_190 <= i_2_reg_487;
    end else if (((grp_resetCurrentSliceHW_fu_217_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_190 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_reg_473_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        glPLSlices_0_addr_reg_507 <= tmp_69_cast_fu_408_p1;
        glPLSlices_1_addr_reg_512 <= tmp_69_cast_fu_408_p1;
        glPLSlices_2_addr_reg_517 <= tmp_69_cast_fu_408_p1;
        glPLSlices_3_addr_reg_522 <= tmp_69_cast_fu_408_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_reg_463 == 1'd0))) begin
        i_2_reg_487 <= i_2_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_reg_473 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_reg_492 <= mul_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_reg_473_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        newIndex_i_reg_502 <= grp_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_reg_463 == 1'd0))) begin
        tmp_10_reg_473 <= data_dout[32'd1];
        x_cast_reg_467 <= {{data_dout[31:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_10_reg_473_pp0_iter10_reg <= tmp_10_reg_473_pp0_iter9_reg;
        tmp_10_reg_473_pp0_iter1_reg <= tmp_10_reg_473;
        tmp_10_reg_473_pp0_iter2_reg <= tmp_10_reg_473_pp0_iter1_reg;
        tmp_10_reg_473_pp0_iter3_reg <= tmp_10_reg_473_pp0_iter2_reg;
        tmp_10_reg_473_pp0_iter4_reg <= tmp_10_reg_473_pp0_iter3_reg;
        tmp_10_reg_473_pp0_iter5_reg <= tmp_10_reg_473_pp0_iter4_reg;
        tmp_10_reg_473_pp0_iter6_reg <= tmp_10_reg_473_pp0_iter5_reg;
        tmp_10_reg_473_pp0_iter7_reg <= tmp_10_reg_473_pp0_iter6_reg;
        tmp_10_reg_473_pp0_iter8_reg <= tmp_10_reg_473_pp0_iter7_reg;
        tmp_10_reg_473_pp0_iter9_reg <= tmp_10_reg_473_pp0_iter8_reg;
        tmp_11_reg_477_pp0_iter1_reg <= tmp_11_reg_477;
        tmp_11_reg_477_pp0_iter2_reg <= tmp_11_reg_477_pp0_iter1_reg;
        tmp_11_reg_477_pp0_iter3_reg <= tmp_11_reg_477_pp0_iter2_reg;
        tmp_11_reg_477_pp0_iter4_reg <= tmp_11_reg_477_pp0_iter3_reg;
        tmp_11_reg_477_pp0_iter5_reg <= tmp_11_reg_477_pp0_iter4_reg;
        tmp_11_reg_477_pp0_iter6_reg <= tmp_11_reg_477_pp0_iter5_reg;
        tmp_11_reg_477_pp0_iter7_reg <= tmp_11_reg_477_pp0_iter6_reg;
        tmp_11_reg_477_pp0_iter8_reg <= tmp_11_reg_477_pp0_iter7_reg;
        tmp_11_reg_477_pp0_iter9_reg <= tmp_11_reg_477_pp0_iter8_reg;
        tmp_12_reg_482_pp0_iter1_reg <= tmp_12_reg_482;
        tmp_12_reg_482_pp0_iter2_reg <= tmp_12_reg_482_pp0_iter1_reg;
        tmp_12_reg_482_pp0_iter3_reg <= tmp_12_reg_482_pp0_iter2_reg;
        tmp_12_reg_482_pp0_iter4_reg <= tmp_12_reg_482_pp0_iter3_reg;
        tmp_12_reg_482_pp0_iter5_reg <= tmp_12_reg_482_pp0_iter4_reg;
        tmp_12_reg_482_pp0_iter6_reg <= tmp_12_reg_482_pp0_iter5_reg;
        tmp_12_reg_482_pp0_iter7_reg <= tmp_12_reg_482_pp0_iter6_reg;
        tmp_12_reg_482_pp0_iter8_reg <= tmp_12_reg_482_pp0_iter7_reg;
        tmp_12_reg_482_pp0_iter9_reg <= tmp_12_reg_482_pp0_iter8_reg;
        tmp_13_reg_497_pp0_iter10_reg <= tmp_13_reg_497_pp0_iter9_reg;
        tmp_13_reg_497_pp0_iter2_reg <= tmp_13_reg_497;
        tmp_13_reg_497_pp0_iter3_reg <= tmp_13_reg_497_pp0_iter2_reg;
        tmp_13_reg_497_pp0_iter4_reg <= tmp_13_reg_497_pp0_iter3_reg;
        tmp_13_reg_497_pp0_iter5_reg <= tmp_13_reg_497_pp0_iter4_reg;
        tmp_13_reg_497_pp0_iter6_reg <= tmp_13_reg_497_pp0_iter5_reg;
        tmp_13_reg_497_pp0_iter7_reg <= tmp_13_reg_497_pp0_iter6_reg;
        tmp_13_reg_497_pp0_iter8_reg <= tmp_13_reg_497_pp0_iter7_reg;
        tmp_13_reg_497_pp0_iter9_reg <= tmp_13_reg_497_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_fu_328_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_reg_463 == 1'd0))) begin
        tmp_11_reg_477 <= {{data_dout[11:2]}};
        tmp_12_reg_482 <= {{data_dout[15:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_reg_473 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_13_reg_497 <= {{mul_reg_492[31:21]}};
    end
end

always @ (posedge ap_clk) begin
    if (((grp_resetCurrentSliceHW_fu_217_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_8_reg_458[31 : 1] <= tmp_8_fu_305_p3[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_9_reg_463 <= tmp_9_fu_313_p2;
    end
end

always @ (*) begin
    if ((tmp_9_fu_313_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_copyToPS_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_reg_463 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_194_p4 = i_2_reg_487;
    end else begin
        ap_phi_mux_i_phi_fu_194_p4 = i_reg_190;
    end
end

always @ (*) begin
    if (((grp_copyToPS_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_reg_463 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_blk_n = data_empty_n;
    end else begin
        data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_reg_463 == 1'd0))) begin
        data_read = 1'b1;
    end else begin
        data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        eventSlice_AWVALID = grp_copyToPS_fu_202_m_axi_eventSlice_AWVALID;
    end else begin
        eventSlice_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        eventSlice_BREADY = grp_copyToPS_fu_202_m_axi_eventSlice_BREADY;
    end else begin
        eventSlice_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        eventSlice_WVALID = grp_copyToPS_fu_202_m_axi_eventSlice_WVALID;
    end else begin
        eventSlice_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_0_address0 = glPLSlices_0_addr_reg_507;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        glPLSlices_0_address0 = tmp_69_cast_fu_408_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_0_address0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        glPLSlices_0_address0 = grp_copyToPS_fu_202_glPLSlices_0_address0;
    end else begin
        glPLSlices_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlices_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_0_ce0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        glPLSlices_0_ce0 = grp_copyToPS_fu_202_glPLSlices_0_ce0;
    end else begin
        glPLSlices_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_0_ce1 = grp_resetCurrentSliceHW_fu_217_glPLSlices_0_ce1;
    end else begin
        glPLSlices_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_0_d0 = tmp_3_i_fu_437_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_0_d0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_0_d0;
    end else begin
        glPLSlices_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((arrayNo_i_fu_416_p1 == 15'd0) & (tmp_10_reg_473_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_0_we0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_0_we0;
    end else begin
        glPLSlices_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_0_we1 = grp_resetCurrentSliceHW_fu_217_glPLSlices_0_we1;
    end else begin
        glPLSlices_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_1_address0 = glPLSlices_1_addr_reg_512;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        glPLSlices_1_address0 = tmp_69_cast_fu_408_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_1_address0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        glPLSlices_1_address0 = grp_copyToPS_fu_202_glPLSlices_1_address0;
    end else begin
        glPLSlices_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlices_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_1_ce0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        glPLSlices_1_ce0 = grp_copyToPS_fu_202_glPLSlices_1_ce0;
    end else begin
        glPLSlices_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_1_ce1 = grp_resetCurrentSliceHW_fu_217_glPLSlices_1_ce1;
    end else begin
        glPLSlices_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_1_d0 = tmp_3_i_fu_437_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_1_d0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_1_d0;
    end else begin
        glPLSlices_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((arrayNo_i_fu_416_p1 == 15'd1) & (tmp_10_reg_473_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_1_we0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_1_we0;
    end else begin
        glPLSlices_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_1_we1 = grp_resetCurrentSliceHW_fu_217_glPLSlices_1_we1;
    end else begin
        glPLSlices_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_2_address0 = glPLSlices_2_addr_reg_517;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        glPLSlices_2_address0 = tmp_69_cast_fu_408_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_2_address0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        glPLSlices_2_address0 = grp_copyToPS_fu_202_glPLSlices_2_address0;
    end else begin
        glPLSlices_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlices_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_2_ce0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        glPLSlices_2_ce0 = grp_copyToPS_fu_202_glPLSlices_2_ce0;
    end else begin
        glPLSlices_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_2_ce1 = grp_resetCurrentSliceHW_fu_217_glPLSlices_2_ce1;
    end else begin
        glPLSlices_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_2_d0 = tmp_3_i_fu_437_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_2_d0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_2_d0;
    end else begin
        glPLSlices_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((arrayNo_i_fu_416_p1 == 15'd2) & (tmp_10_reg_473_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_2_we0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_2_we0;
    end else begin
        glPLSlices_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_2_we1 = grp_resetCurrentSliceHW_fu_217_glPLSlices_2_we1;
    end else begin
        glPLSlices_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_3_address0 = glPLSlices_3_addr_reg_522;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        glPLSlices_3_address0 = tmp_69_cast_fu_408_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_3_address0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        glPLSlices_3_address0 = grp_copyToPS_fu_202_glPLSlices_3_address0;
    end else begin
        glPLSlices_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        glPLSlices_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_3_ce0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        glPLSlices_3_ce0 = grp_copyToPS_fu_202_glPLSlices_3_ce0;
    end else begin
        glPLSlices_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_3_ce1 = grp_resetCurrentSliceHW_fu_217_glPLSlices_3_ce1;
    end else begin
        glPLSlices_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_3_d0 = tmp_3_i_fu_437_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_3_d0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_3_d0;
    end else begin
        glPLSlices_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((~(arrayNo_i_fu_416_p1 == 15'd2) & ~(arrayNo_i_fu_416_p1 == 15'd1) & ~(arrayNo_i_fu_416_p1 == 15'd0) & (tmp_10_reg_473_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_3_we0 = grp_resetCurrentSliceHW_fu_217_glPLSlices_3_we0;
    end else begin
        glPLSlices_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glPLSlices_3_we1 = grp_resetCurrentSliceHW_fu_217_glPLSlices_3_we1;
    end else begin
        glPLSlices_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_365_ce = 1'b1;
    end else begin
        grp_fu_365_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_resetCurrentSliceHW_fu_217_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_9_fu_313_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_9_fu_313_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_copyToPS_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_9_reg_463 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_9_reg_463 == 1'd0));
end

assign ap_block_state10_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = ((data_empty_n == 1'b0) & (tmp_9_reg_463 == 1'd0));
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign arrayNo_i_fu_416_p1 = $signed(tmp_13_reg_497_pp0_iter10_reg);

assign grp_copyToPS_fu_202_ap_start = grp_copyToPS_fu_202_ap_start_reg;

assign grp_fu_365_p1 = 15'd60;

assign grp_resetCurrentSliceHW_fu_217_ap_start = grp_resetCurrentSliceHW_fu_217_ap_start_reg;

assign i_2_fu_356_p2 = (i_reg_190 + 32'd2);

assign mul_fu_447_p0 = mul_fu_447_p00;

assign mul_fu_447_p00 = x_cast_reg_467;

assign mul_fu_447_p1 = 32'd34953;

assign newIndex1_i_cast_fu_399_p1 = newIndex_i_reg_502;

assign p_lshr_fu_263_p4 = {{p_neg_fu_257_p2[31:1]}};

assign p_neg_fu_257_p2 = (tmp_fu_229_p2 ^ 32'd4294967295);

assign p_neg_t_fu_273_p2 = (31'd0 - p_lshr_fu_263_p4);

assign p_shl3_cast_fu_386_p3 = {{tmp_12_reg_482_pp0_iter9_reg}, {2'd0}};

assign p_shl_cast_fu_379_p3 = {{tmp_11_reg_477_pp0_iter9_reg}, {6'd0}};

assign tmp_10_fu_328_p3 = data_dout[32'd1];

assign tmp_1_fu_423_p5 = $unsigned(arrayNo_i_fu_416_p1);

assign tmp_3_fu_235_p3 = eventsArraySize[32'd30];

assign tmp_3_i_fu_437_p2 = (tmp_1_fu_423_p6 + 8'd1);

assign tmp_4_fu_249_p3 = tmp_op_op9_fu_243_p2[32'd31];

assign tmp_5_fu_279_p4 = {{tmp_op_op9_fu_243_p2[31:1]}};

assign tmp_62_fu_402_p2 = (newIndex1_i_cast_fu_399_p1 + tmp_s_fu_393_p2);

assign tmp_69_cast_fu_408_p1 = $signed(tmp_62_fu_402_p2);

assign tmp_6_fu_289_p3 = ((tmp_4_fu_249_p3[0:0] === 1'b1) ? p_neg_t_fu_273_p2 : tmp_5_fu_279_p4);

assign tmp_7_fu_297_p3 = ((tmp_3_fu_235_p3[0:0] === 1'b1) ? 31'd0 : tmp_6_fu_289_p3);

assign tmp_8_fu_305_p3 = {{tmp_7_fu_297_p3}, {1'd0}};

assign tmp_9_fu_313_p2 = ((ap_phi_mux_i_phi_fu_194_p4 == tmp_8_reg_458) ? 1'b1 : 1'b0);

assign tmp_fu_229_p2 = eventsArraySize << 32'd1;

assign tmp_op_op9_fu_243_p2 = (tmp_fu_229_p2 | 32'd1);

assign tmp_s_fu_393_p2 = (p_shl_cast_fu_379_p3 - p_shl3_cast_fu_386_p3);

always @ (posedge ap_clk) begin
    tmp_8_reg_458[0] <= 1'b0;
end

endmodule //a0_parseEvents
