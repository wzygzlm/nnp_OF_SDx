// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_accumulateHW (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        x,
        y,
        pol,
        glPLSlices_0_address0,
        glPLSlices_0_ce0,
        glPLSlices_0_we0,
        glPLSlices_0_d0,
        glPLSlices_0_q0,
        glPLSlices_1_address0,
        glPLSlices_1_ce0,
        glPLSlices_1_we0,
        glPLSlices_1_d0,
        glPLSlices_1_q0,
        glPLSlices_2_address0,
        glPLSlices_2_ce0,
        glPLSlices_2_we0,
        glPLSlices_2_d0,
        glPLSlices_2_q0,
        glPLSlices_3_address0,
        glPLSlices_3_ce0,
        glPLSlices_3_we0,
        glPLSlices_3_d0,
        glPLSlices_3_q0,
        glPLSlices_4_address0,
        glPLSlices_4_ce0,
        glPLSlices_4_we0,
        glPLSlices_4_d0,
        glPLSlices_4_q0,
        glPLSlices_5_address0,
        glPLSlices_5_ce0,
        glPLSlices_5_we0,
        glPLSlices_5_d0,
        glPLSlices_5_q0,
        glPLSlices_6_address0,
        glPLSlices_6_ce0,
        glPLSlices_6_we0,
        glPLSlices_6_d0,
        glPLSlices_6_q0,
        glPLSlices_7_address0,
        glPLSlices_7_ce0,
        glPLSlices_7_we0,
        glPLSlices_7_d0,
        glPLSlices_7_q0,
        glPLSlices_8_address0,
        glPLSlices_8_ce0,
        glPLSlices_8_we0,
        glPLSlices_8_d0,
        glPLSlices_8_q0,
        glPLSlices_9_address0,
        glPLSlices_9_ce0,
        glPLSlices_9_we0,
        glPLSlices_9_d0,
        glPLSlices_9_q0,
        glPLSlices_10_address0,
        glPLSlices_10_ce0,
        glPLSlices_10_we0,
        glPLSlices_10_d0,
        glPLSlices_10_q0,
        glPLSlices_11_address0,
        glPLSlices_11_ce0,
        glPLSlices_11_we0,
        glPLSlices_11_d0,
        glPLSlices_11_q0,
        glPLSlices_12_address0,
        glPLSlices_12_ce0,
        glPLSlices_12_we0,
        glPLSlices_12_d0,
        glPLSlices_12_q0,
        glPLSlices_13_address0,
        glPLSlices_13_ce0,
        glPLSlices_13_we0,
        glPLSlices_13_d0,
        glPLSlices_13_q0,
        glPLSlices_14_address0,
        glPLSlices_14_ce0,
        glPLSlices_14_we0,
        glPLSlices_14_d0,
        glPLSlices_14_q0,
        glPLSlices_15_address0,
        glPLSlices_15_ce0,
        glPLSlices_15_we0,
        glPLSlices_15_d0,
        glPLSlices_15_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] x;
input  [15:0] y;
input   pol;
output  [12:0] glPLSlices_0_address0;
output   glPLSlices_0_ce0;
output   glPLSlices_0_we0;
output  [7:0] glPLSlices_0_d0;
input  [7:0] glPLSlices_0_q0;
output  [12:0] glPLSlices_1_address0;
output   glPLSlices_1_ce0;
output   glPLSlices_1_we0;
output  [7:0] glPLSlices_1_d0;
input  [7:0] glPLSlices_1_q0;
output  [12:0] glPLSlices_2_address0;
output   glPLSlices_2_ce0;
output   glPLSlices_2_we0;
output  [7:0] glPLSlices_2_d0;
input  [7:0] glPLSlices_2_q0;
output  [12:0] glPLSlices_3_address0;
output   glPLSlices_3_ce0;
output   glPLSlices_3_we0;
output  [7:0] glPLSlices_3_d0;
input  [7:0] glPLSlices_3_q0;
output  [12:0] glPLSlices_4_address0;
output   glPLSlices_4_ce0;
output   glPLSlices_4_we0;
output  [7:0] glPLSlices_4_d0;
input  [7:0] glPLSlices_4_q0;
output  [12:0] glPLSlices_5_address0;
output   glPLSlices_5_ce0;
output   glPLSlices_5_we0;
output  [7:0] glPLSlices_5_d0;
input  [7:0] glPLSlices_5_q0;
output  [12:0] glPLSlices_6_address0;
output   glPLSlices_6_ce0;
output   glPLSlices_6_we0;
output  [7:0] glPLSlices_6_d0;
input  [7:0] glPLSlices_6_q0;
output  [12:0] glPLSlices_7_address0;
output   glPLSlices_7_ce0;
output   glPLSlices_7_we0;
output  [7:0] glPLSlices_7_d0;
input  [7:0] glPLSlices_7_q0;
output  [12:0] glPLSlices_8_address0;
output   glPLSlices_8_ce0;
output   glPLSlices_8_we0;
output  [7:0] glPLSlices_8_d0;
input  [7:0] glPLSlices_8_q0;
output  [12:0] glPLSlices_9_address0;
output   glPLSlices_9_ce0;
output   glPLSlices_9_we0;
output  [7:0] glPLSlices_9_d0;
input  [7:0] glPLSlices_9_q0;
output  [12:0] glPLSlices_10_address0;
output   glPLSlices_10_ce0;
output   glPLSlices_10_we0;
output  [7:0] glPLSlices_10_d0;
input  [7:0] glPLSlices_10_q0;
output  [12:0] glPLSlices_11_address0;
output   glPLSlices_11_ce0;
output   glPLSlices_11_we0;
output  [7:0] glPLSlices_11_d0;
input  [7:0] glPLSlices_11_q0;
output  [12:0] glPLSlices_12_address0;
output   glPLSlices_12_ce0;
output   glPLSlices_12_we0;
output  [7:0] glPLSlices_12_d0;
input  [7:0] glPLSlices_12_q0;
output  [12:0] glPLSlices_13_address0;
output   glPLSlices_13_ce0;
output   glPLSlices_13_we0;
output  [7:0] glPLSlices_13_d0;
input  [7:0] glPLSlices_13_q0;
output  [12:0] glPLSlices_14_address0;
output   glPLSlices_14_ce0;
output   glPLSlices_14_we0;
output  [7:0] glPLSlices_14_d0;
input  [7:0] glPLSlices_14_q0;
output  [12:0] glPLSlices_15_address0;
output   glPLSlices_15_ce0;
output   glPLSlices_15_we0;
output  [7:0] glPLSlices_15_d0;
input  [7:0] glPLSlices_15_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] glPLSlices_0_address0;
reg glPLSlices_0_ce0;
reg glPLSlices_0_we0;
reg[12:0] glPLSlices_1_address0;
reg glPLSlices_1_ce0;
reg glPLSlices_1_we0;
reg[12:0] glPLSlices_2_address0;
reg glPLSlices_2_ce0;
reg glPLSlices_2_we0;
reg[12:0] glPLSlices_3_address0;
reg glPLSlices_3_ce0;
reg glPLSlices_3_we0;
reg[12:0] glPLSlices_4_address0;
reg glPLSlices_4_ce0;
reg glPLSlices_4_we0;
reg[12:0] glPLSlices_5_address0;
reg glPLSlices_5_ce0;
reg glPLSlices_5_we0;
reg[12:0] glPLSlices_6_address0;
reg glPLSlices_6_ce0;
reg glPLSlices_6_we0;
reg[12:0] glPLSlices_7_address0;
reg glPLSlices_7_ce0;
reg glPLSlices_7_we0;
reg[12:0] glPLSlices_8_address0;
reg glPLSlices_8_ce0;
reg glPLSlices_8_we0;
reg[12:0] glPLSlices_9_address0;
reg glPLSlices_9_ce0;
reg glPLSlices_9_we0;
reg[12:0] glPLSlices_10_address0;
reg glPLSlices_10_ce0;
reg glPLSlices_10_we0;
reg[12:0] glPLSlices_11_address0;
reg glPLSlices_11_ce0;
reg glPLSlices_11_we0;
reg[12:0] glPLSlices_12_address0;
reg glPLSlices_12_ce0;
reg glPLSlices_12_we0;
reg[12:0] glPLSlices_13_address0;
reg glPLSlices_13_ce0;
reg glPLSlices_13_we0;
reg[12:0] glPLSlices_14_address0;
reg glPLSlices_14_ce0;
reg glPLSlices_14_we0;
reg[12:0] glPLSlices_15_address0;
reg glPLSlices_15_ce0;
reg glPLSlices_15_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] pol_read_read_fu_92_p2;
reg   [0:0] pol_read_reg_446;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] pol_read_reg_446_pp0_iter1_reg;
reg   [0:0] pol_read_reg_446_pp0_iter2_reg;
reg   [0:0] pol_read_reg_446_pp0_iter3_reg;
reg   [0:0] pol_read_reg_446_pp0_iter4_reg;
reg   [0:0] pol_read_reg_446_pp0_iter5_reg;
reg   [0:0] pol_read_reg_446_pp0_iter6_reg;
reg   [0:0] pol_read_reg_446_pp0_iter7_reg;
reg   [0:0] pol_read_reg_446_pp0_iter8_reg;
reg   [0:0] pol_read_reg_446_pp0_iter9_reg;
wire   [14:0] tmp_17_fu_302_p1;
wire   [31:0] mul_fu_440_p2;
reg   [31:0] mul_reg_455;
reg   [15:0] y_read_reg_460;
reg   [15:0] y_read_reg_460_pp0_iter1_reg;
reg   [15:0] y_read_reg_460_pp0_iter2_reg;
reg   [15:0] y_read_reg_460_pp0_iter3_reg;
reg   [15:0] y_read_reg_460_pp0_iter4_reg;
reg   [15:0] y_read_reg_460_pp0_iter5_reg;
reg   [15:0] y_read_reg_460_pp0_iter6_reg;
reg   [15:0] y_read_reg_460_pp0_iter7_reg;
reg   [15:0] y_read_reg_460_pp0_iter8_reg;
reg   [12:0] tmp_18_reg_466;
reg   [12:0] tmp_18_reg_466_pp0_iter1_reg;
reg   [12:0] tmp_18_reg_466_pp0_iter2_reg;
reg   [12:0] tmp_18_reg_466_pp0_iter3_reg;
reg   [12:0] tmp_18_reg_466_pp0_iter4_reg;
reg   [12:0] tmp_18_reg_466_pp0_iter5_reg;
reg   [12:0] tmp_18_reg_466_pp0_iter6_reg;
reg   [12:0] tmp_18_reg_466_pp0_iter7_reg;
reg   [12:0] tmp_18_reg_466_pp0_iter8_reg;
wire   [13:0] grp_fu_310_p2;
reg   [13:0] newIndex_reg_471;
wire  signed [14:0] arrayNo_fu_345_p1;
reg  signed [14:0] arrayNo_reg_476;
reg   [12:0] glPLSlices_0_addr_reg_481;
reg   [12:0] glPLSlices_1_addr_reg_486;
reg   [12:0] glPLSlices_10_addr_reg_491;
reg   [12:0] glPLSlices_11_addr_reg_496;
reg   [12:0] glPLSlices_12_addr_reg_501;
reg   [12:0] glPLSlices_13_addr_reg_506;
reg   [12:0] glPLSlices_14_addr_reg_511;
reg   [12:0] glPLSlices_15_addr_reg_516;
reg   [12:0] glPLSlices_2_addr_reg_521;
reg   [12:0] glPLSlices_3_addr_reg_526;
reg   [12:0] glPLSlices_4_addr_reg_531;
reg   [12:0] glPLSlices_5_addr_reg_536;
reg   [12:0] glPLSlices_6_addr_reg_541;
reg   [12:0] glPLSlices_7_addr_reg_546;
reg   [12:0] glPLSlices_8_addr_reg_551;
reg   [12:0] glPLSlices_9_addr_reg_556;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage0_subdone;
reg   [15:0] ap_port_reg_y;
wire  signed [31:0] tmp_24_cast_fu_357_p1;
wire    ap_block_pp0_stage1;
wire   [7:0] tmp_3_fu_418_p2;
wire   [4:0] grp_fu_310_p1;
wire   [9:0] tmp_16_fu_328_p1;
wire   [13:0] p_shl_cast_fu_331_p3;
wire   [13:0] tmp_15_fu_325_p1;
wire   [13:0] tmp_19_fu_348_p1;
wire   [13:0] tmp_s_fu_339_p2;
wire   [13:0] tmp_20_fu_351_p2;
wire   [15:0] tmp_fu_380_p17;
wire   [7:0] tmp_fu_380_p18;
wire   [16:0] mul_fu_440_p0;
wire   [14:0] mul_fu_440_p1;
reg    grp_fu_310_ce;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to9;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to10;
wire    ap_enable_pp0;
wire   [31:0] mul_fu_440_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

a0_parseEvents_urem_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 14 ))
parseEvents_urem_bkb_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_17_fu_302_p1),
    .din1(grp_fu_310_p1),
    .ce(grp_fu_310_ce),
    .dout(grp_fu_310_p2)
);

a0_parseEvents_mux_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 16 ),
    .dout_WIDTH( 8 ))
parseEvents_mux_1cud_U18(
    .din0(glPLSlices_0_q0),
    .din1(glPLSlices_1_q0),
    .din2(glPLSlices_2_q0),
    .din3(glPLSlices_3_q0),
    .din4(glPLSlices_4_q0),
    .din5(glPLSlices_5_q0),
    .din6(glPLSlices_6_q0),
    .din7(glPLSlices_7_q0),
    .din8(glPLSlices_8_q0),
    .din9(glPLSlices_9_q0),
    .din10(glPLSlices_10_q0),
    .din11(glPLSlices_11_q0),
    .din12(glPLSlices_12_q0),
    .din13(glPLSlices_13_q0),
    .din14(glPLSlices_14_q0),
    .din15(glPLSlices_15_q0),
    .din16(tmp_fu_380_p17),
    .dout(tmp_fu_380_p18)
);

a0_parseEvents_mul_mdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
parseEvents_mul_mdEe_U19(
    .din0(mul_fu_440_p0),
    .din1(mul_fu_440_p1),
    .dout(mul_fu_440_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_port_reg_y <= y;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        arrayNo_reg_476 <= arrayNo_fu_345_p1;
        glPLSlices_0_addr_reg_481 <= tmp_24_cast_fu_357_p1;
        glPLSlices_10_addr_reg_491 <= tmp_24_cast_fu_357_p1;
        glPLSlices_11_addr_reg_496 <= tmp_24_cast_fu_357_p1;
        glPLSlices_12_addr_reg_501 <= tmp_24_cast_fu_357_p1;
        glPLSlices_13_addr_reg_506 <= tmp_24_cast_fu_357_p1;
        glPLSlices_14_addr_reg_511 <= tmp_24_cast_fu_357_p1;
        glPLSlices_15_addr_reg_516 <= tmp_24_cast_fu_357_p1;
        glPLSlices_1_addr_reg_486 <= tmp_24_cast_fu_357_p1;
        glPLSlices_2_addr_reg_521 <= tmp_24_cast_fu_357_p1;
        glPLSlices_3_addr_reg_526 <= tmp_24_cast_fu_357_p1;
        glPLSlices_4_addr_reg_531 <= tmp_24_cast_fu_357_p1;
        glPLSlices_5_addr_reg_536 <= tmp_24_cast_fu_357_p1;
        glPLSlices_6_addr_reg_541 <= tmp_24_cast_fu_357_p1;
        glPLSlices_7_addr_reg_546 <= tmp_24_cast_fu_357_p1;
        glPLSlices_8_addr_reg_551 <= tmp_24_cast_fu_357_p1;
        glPLSlices_9_addr_reg_556 <= tmp_24_cast_fu_357_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (pol_read_read_fu_92_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_reg_455 <= mul_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (pol_read_reg_446_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        newIndex_reg_471 <= grp_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pol_read_reg_446 <= pol;
        pol_read_reg_446_pp0_iter1_reg <= pol_read_reg_446;
        pol_read_reg_446_pp0_iter2_reg <= pol_read_reg_446_pp0_iter1_reg;
        pol_read_reg_446_pp0_iter3_reg <= pol_read_reg_446_pp0_iter2_reg;
        pol_read_reg_446_pp0_iter4_reg <= pol_read_reg_446_pp0_iter3_reg;
        pol_read_reg_446_pp0_iter5_reg <= pol_read_reg_446_pp0_iter4_reg;
        pol_read_reg_446_pp0_iter6_reg <= pol_read_reg_446_pp0_iter5_reg;
        pol_read_reg_446_pp0_iter7_reg <= pol_read_reg_446_pp0_iter6_reg;
        pol_read_reg_446_pp0_iter8_reg <= pol_read_reg_446_pp0_iter7_reg;
        pol_read_reg_446_pp0_iter9_reg <= pol_read_reg_446_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (pol_read_reg_446 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_18_reg_466 <= {{mul_reg_455[31:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_18_reg_466_pp0_iter1_reg <= tmp_18_reg_466;
        tmp_18_reg_466_pp0_iter2_reg <= tmp_18_reg_466_pp0_iter1_reg;
        tmp_18_reg_466_pp0_iter3_reg <= tmp_18_reg_466_pp0_iter2_reg;
        tmp_18_reg_466_pp0_iter4_reg <= tmp_18_reg_466_pp0_iter3_reg;
        tmp_18_reg_466_pp0_iter5_reg <= tmp_18_reg_466_pp0_iter4_reg;
        tmp_18_reg_466_pp0_iter6_reg <= tmp_18_reg_466_pp0_iter5_reg;
        tmp_18_reg_466_pp0_iter7_reg <= tmp_18_reg_466_pp0_iter6_reg;
        tmp_18_reg_466_pp0_iter8_reg <= tmp_18_reg_466_pp0_iter7_reg;
        y_read_reg_460 <= ap_port_reg_y;
        y_read_reg_460_pp0_iter1_reg <= y_read_reg_460;
        y_read_reg_460_pp0_iter2_reg <= y_read_reg_460_pp0_iter1_reg;
        y_read_reg_460_pp0_iter3_reg <= y_read_reg_460_pp0_iter2_reg;
        y_read_reg_460_pp0_iter4_reg <= y_read_reg_460_pp0_iter3_reg;
        y_read_reg_460_pp0_iter5_reg <= y_read_reg_460_pp0_iter4_reg;
        y_read_reg_460_pp0_iter6_reg <= y_read_reg_460_pp0_iter5_reg;
        y_read_reg_460_pp0_iter7_reg <= y_read_reg_460_pp0_iter6_reg;
        y_read_reg_460_pp0_iter8_reg <= y_read_reg_460_pp0_iter7_reg;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to9 = 1'b1;
    end else begin
        ap_idle_pp0_0to9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_0_address0 = glPLSlices_0_addr_reg_481;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_0_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_0_ce0 = 1'b1;
    end else begin
        glPLSlices_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd0) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_0_we0 = 1'b1;
    end else begin
        glPLSlices_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_10_address0 = glPLSlices_10_addr_reg_491;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_10_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_10_ce0 = 1'b1;
    end else begin
        glPLSlices_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd10) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_10_we0 = 1'b1;
    end else begin
        glPLSlices_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_11_address0 = glPLSlices_11_addr_reg_496;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_11_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_11_ce0 = 1'b1;
    end else begin
        glPLSlices_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd11) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_11_we0 = 1'b1;
    end else begin
        glPLSlices_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_12_address0 = glPLSlices_12_addr_reg_501;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_12_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_12_ce0 = 1'b1;
    end else begin
        glPLSlices_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd12) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_12_we0 = 1'b1;
    end else begin
        glPLSlices_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_13_address0 = glPLSlices_13_addr_reg_506;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_13_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_13_ce0 = 1'b1;
    end else begin
        glPLSlices_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd13) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_13_we0 = 1'b1;
    end else begin
        glPLSlices_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_14_address0 = glPLSlices_14_addr_reg_511;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_14_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_14_ce0 = 1'b1;
    end else begin
        glPLSlices_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd14) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_14_we0 = 1'b1;
    end else begin
        glPLSlices_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_15_address0 = glPLSlices_15_addr_reg_516;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_15_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_15_ce0 = 1'b1;
    end else begin
        glPLSlices_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo_reg_476 == 15'd14) & ~(arrayNo_reg_476 == 15'd13) & ~(arrayNo_reg_476 == 15'd12) & ~(arrayNo_reg_476 == 15'd11) & ~(arrayNo_reg_476 == 15'd10) & ~(arrayNo_reg_476 == 15'd9) & ~(arrayNo_reg_476 == 15'd8) & ~(arrayNo_reg_476 == 15'd7) & ~(arrayNo_reg_476 == 15'd6) & ~(arrayNo_reg_476 == 15'd5) & ~(arrayNo_reg_476 == 15'd4) & ~(arrayNo_reg_476 == 15'd3) & ~(arrayNo_reg_476 == 15'd2) & ~(arrayNo_reg_476 == 15'd1) & ~(arrayNo_reg_476 == 15'd0) & (1'b1 == ap_ce) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_15_we0 = 1'b1;
    end else begin
        glPLSlices_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_1_address0 = glPLSlices_1_addr_reg_486;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_1_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_1_ce0 = 1'b1;
    end else begin
        glPLSlices_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd1) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_1_we0 = 1'b1;
    end else begin
        glPLSlices_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_2_address0 = glPLSlices_2_addr_reg_521;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_2_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_2_ce0 = 1'b1;
    end else begin
        glPLSlices_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd2) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_2_we0 = 1'b1;
    end else begin
        glPLSlices_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_3_address0 = glPLSlices_3_addr_reg_526;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_3_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_3_ce0 = 1'b1;
    end else begin
        glPLSlices_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd3) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_3_we0 = 1'b1;
    end else begin
        glPLSlices_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_4_address0 = glPLSlices_4_addr_reg_531;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_4_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_4_ce0 = 1'b1;
    end else begin
        glPLSlices_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd4) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_4_we0 = 1'b1;
    end else begin
        glPLSlices_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_5_address0 = glPLSlices_5_addr_reg_536;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_5_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_5_ce0 = 1'b1;
    end else begin
        glPLSlices_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd5) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_5_we0 = 1'b1;
    end else begin
        glPLSlices_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_6_address0 = glPLSlices_6_addr_reg_541;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_6_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_6_ce0 = 1'b1;
    end else begin
        glPLSlices_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd6) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_6_we0 = 1'b1;
    end else begin
        glPLSlices_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_7_address0 = glPLSlices_7_addr_reg_546;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_7_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_7_ce0 = 1'b1;
    end else begin
        glPLSlices_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd7) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_7_we0 = 1'b1;
    end else begin
        glPLSlices_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_8_address0 = glPLSlices_8_addr_reg_551;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_8_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_8_ce0 = 1'b1;
    end else begin
        glPLSlices_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd8) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_8_we0 = 1'b1;
    end else begin
        glPLSlices_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_9_address0 = glPLSlices_9_addr_reg_556;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        glPLSlices_9_address0 = tmp_24_cast_fu_357_p1;
    end else begin
        glPLSlices_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        glPLSlices_9_ce0 = 1'b1;
    end else begin
        glPLSlices_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (arrayNo_reg_476 == 15'd9) & (pol_read_reg_446_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        glPLSlices_9_we0 = 1'b1;
    end else begin
        glPLSlices_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_fu_310_ce = 1'b1;
    end else begin
        grp_fu_310_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign arrayNo_fu_345_p1 = $signed(tmp_18_reg_466_pp0_iter8_reg);

assign glPLSlices_0_d0 = tmp_3_fu_418_p2;

assign glPLSlices_10_d0 = tmp_3_fu_418_p2;

assign glPLSlices_11_d0 = tmp_3_fu_418_p2;

assign glPLSlices_12_d0 = tmp_3_fu_418_p2;

assign glPLSlices_13_d0 = tmp_3_fu_418_p2;

assign glPLSlices_14_d0 = tmp_3_fu_418_p2;

assign glPLSlices_15_d0 = tmp_3_fu_418_p2;

assign glPLSlices_1_d0 = tmp_3_fu_418_p2;

assign glPLSlices_2_d0 = tmp_3_fu_418_p2;

assign glPLSlices_3_d0 = tmp_3_fu_418_p2;

assign glPLSlices_4_d0 = tmp_3_fu_418_p2;

assign glPLSlices_5_d0 = tmp_3_fu_418_p2;

assign glPLSlices_6_d0 = tmp_3_fu_418_p2;

assign glPLSlices_7_d0 = tmp_3_fu_418_p2;

assign glPLSlices_8_d0 = tmp_3_fu_418_p2;

assign glPLSlices_9_d0 = tmp_3_fu_418_p2;

assign grp_fu_310_p1 = 15'd15;

assign mul_fu_440_p0 = 32'd34953;

assign mul_fu_440_p1 = mul_fu_440_p10;

assign mul_fu_440_p10 = tmp_17_fu_302_p1;

assign p_shl_cast_fu_331_p3 = {{tmp_16_fu_328_p1}, {4'd0}};

assign pol_read_read_fu_92_p2 = pol;

assign tmp_15_fu_325_p1 = y_read_reg_460_pp0_iter8_reg[13:0];

assign tmp_16_fu_328_p1 = y_read_reg_460_pp0_iter8_reg[9:0];

assign tmp_17_fu_302_p1 = x[14:0];

assign tmp_19_fu_348_p1 = newIndex_reg_471[13:0];

assign tmp_20_fu_351_p2 = (tmp_19_fu_348_p1 + tmp_s_fu_339_p2);

assign tmp_24_cast_fu_357_p1 = $signed(tmp_20_fu_351_p2);

assign tmp_3_fu_418_p2 = (8'd1 + tmp_fu_380_p18);

assign tmp_fu_380_p17 = $unsigned(arrayNo_reg_476);

assign tmp_s_fu_339_p2 = (p_shl_cast_fu_331_p3 - tmp_15_fu_325_p1);

endmodule //a0_accumulateHW
