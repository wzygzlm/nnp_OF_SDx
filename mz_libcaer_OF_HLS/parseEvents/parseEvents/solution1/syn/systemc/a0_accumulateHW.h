// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_accumulateHW_HH_
#define _a0_accumulateHW_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "a0_parseEvents_urem_bkb.h"
#include "a0_parseEvents_mux_1cud.h"
#include "a0_parseEvents_mul_mdEe.h"

namespace ap_rtl {

struct a0_accumulateHW : public sc_module {
    // Port declarations 90
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<16> > x;
    sc_in< sc_lv<16> > y;
    sc_in< sc_logic > pol;
    sc_out< sc_lv<13> > glPLSlices_0_address0;
    sc_out< sc_logic > glPLSlices_0_ce0;
    sc_out< sc_logic > glPLSlices_0_we0;
    sc_out< sc_lv<8> > glPLSlices_0_d0;
    sc_in< sc_lv<8> > glPLSlices_0_q0;
    sc_out< sc_lv<13> > glPLSlices_1_address0;
    sc_out< sc_logic > glPLSlices_1_ce0;
    sc_out< sc_logic > glPLSlices_1_we0;
    sc_out< sc_lv<8> > glPLSlices_1_d0;
    sc_in< sc_lv<8> > glPLSlices_1_q0;
    sc_out< sc_lv<13> > glPLSlices_2_address0;
    sc_out< sc_logic > glPLSlices_2_ce0;
    sc_out< sc_logic > glPLSlices_2_we0;
    sc_out< sc_lv<8> > glPLSlices_2_d0;
    sc_in< sc_lv<8> > glPLSlices_2_q0;
    sc_out< sc_lv<13> > glPLSlices_3_address0;
    sc_out< sc_logic > glPLSlices_3_ce0;
    sc_out< sc_logic > glPLSlices_3_we0;
    sc_out< sc_lv<8> > glPLSlices_3_d0;
    sc_in< sc_lv<8> > glPLSlices_3_q0;
    sc_out< sc_lv<13> > glPLSlices_4_address0;
    sc_out< sc_logic > glPLSlices_4_ce0;
    sc_out< sc_logic > glPLSlices_4_we0;
    sc_out< sc_lv<8> > glPLSlices_4_d0;
    sc_in< sc_lv<8> > glPLSlices_4_q0;
    sc_out< sc_lv<13> > glPLSlices_5_address0;
    sc_out< sc_logic > glPLSlices_5_ce0;
    sc_out< sc_logic > glPLSlices_5_we0;
    sc_out< sc_lv<8> > glPLSlices_5_d0;
    sc_in< sc_lv<8> > glPLSlices_5_q0;
    sc_out< sc_lv<13> > glPLSlices_6_address0;
    sc_out< sc_logic > glPLSlices_6_ce0;
    sc_out< sc_logic > glPLSlices_6_we0;
    sc_out< sc_lv<8> > glPLSlices_6_d0;
    sc_in< sc_lv<8> > glPLSlices_6_q0;
    sc_out< sc_lv<13> > glPLSlices_7_address0;
    sc_out< sc_logic > glPLSlices_7_ce0;
    sc_out< sc_logic > glPLSlices_7_we0;
    sc_out< sc_lv<8> > glPLSlices_7_d0;
    sc_in< sc_lv<8> > glPLSlices_7_q0;
    sc_out< sc_lv<13> > glPLSlices_8_address0;
    sc_out< sc_logic > glPLSlices_8_ce0;
    sc_out< sc_logic > glPLSlices_8_we0;
    sc_out< sc_lv<8> > glPLSlices_8_d0;
    sc_in< sc_lv<8> > glPLSlices_8_q0;
    sc_out< sc_lv<13> > glPLSlices_9_address0;
    sc_out< sc_logic > glPLSlices_9_ce0;
    sc_out< sc_logic > glPLSlices_9_we0;
    sc_out< sc_lv<8> > glPLSlices_9_d0;
    sc_in< sc_lv<8> > glPLSlices_9_q0;
    sc_out< sc_lv<13> > glPLSlices_10_address0;
    sc_out< sc_logic > glPLSlices_10_ce0;
    sc_out< sc_logic > glPLSlices_10_we0;
    sc_out< sc_lv<8> > glPLSlices_10_d0;
    sc_in< sc_lv<8> > glPLSlices_10_q0;
    sc_out< sc_lv<13> > glPLSlices_11_address0;
    sc_out< sc_logic > glPLSlices_11_ce0;
    sc_out< sc_logic > glPLSlices_11_we0;
    sc_out< sc_lv<8> > glPLSlices_11_d0;
    sc_in< sc_lv<8> > glPLSlices_11_q0;
    sc_out< sc_lv<13> > glPLSlices_12_address0;
    sc_out< sc_logic > glPLSlices_12_ce0;
    sc_out< sc_logic > glPLSlices_12_we0;
    sc_out< sc_lv<8> > glPLSlices_12_d0;
    sc_in< sc_lv<8> > glPLSlices_12_q0;
    sc_out< sc_lv<13> > glPLSlices_13_address0;
    sc_out< sc_logic > glPLSlices_13_ce0;
    sc_out< sc_logic > glPLSlices_13_we0;
    sc_out< sc_lv<8> > glPLSlices_13_d0;
    sc_in< sc_lv<8> > glPLSlices_13_q0;
    sc_out< sc_lv<13> > glPLSlices_14_address0;
    sc_out< sc_logic > glPLSlices_14_ce0;
    sc_out< sc_logic > glPLSlices_14_we0;
    sc_out< sc_lv<8> > glPLSlices_14_d0;
    sc_in< sc_lv<8> > glPLSlices_14_q0;
    sc_out< sc_lv<13> > glPLSlices_15_address0;
    sc_out< sc_logic > glPLSlices_15_ce0;
    sc_out< sc_logic > glPLSlices_15_we0;
    sc_out< sc_lv<8> > glPLSlices_15_d0;
    sc_in< sc_lv<8> > glPLSlices_15_q0;


    // Module declarations
    a0_accumulateHW(sc_module_name name);
    SC_HAS_PROCESS(a0_accumulateHW);

    ~a0_accumulateHW();

    sc_trace_file* mVcdFile;

    a0_parseEvents_urem_bkb<1,19,15,5,14>* parseEvents_urem_bkb_U17;
    a0_parseEvents_mux_1cud<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,8>* parseEvents_mux_1cud_U18;
    a0_parseEvents_mul_mdEe<1,1,17,15,32>* parseEvents_mul_mdEe_U19;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter3;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter4;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter5;
    sc_signal< bool > ap_block_state14_pp0_stage1_iter6;
    sc_signal< bool > ap_block_state16_pp0_stage1_iter7;
    sc_signal< bool > ap_block_state18_pp0_stage1_iter8;
    sc_signal< bool > ap_block_state20_pp0_stage1_iter9;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > pol_read_read_fu_92_p2;
    sc_signal< sc_lv<1> > pol_read_reg_446;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter10;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter1_reg;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter2_reg;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter3_reg;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter4_reg;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter5_reg;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter6_reg;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter7_reg;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter8_reg;
    sc_signal< sc_lv<1> > pol_read_reg_446_pp0_iter9_reg;
    sc_signal< sc_lv<15> > tmp_17_fu_302_p1;
    sc_signal< sc_lv<32> > mul_fu_440_p2;
    sc_signal< sc_lv<32> > mul_reg_455;
    sc_signal< sc_lv<16> > y_read_reg_460;
    sc_signal< sc_lv<16> > y_read_reg_460_pp0_iter1_reg;
    sc_signal< sc_lv<16> > y_read_reg_460_pp0_iter2_reg;
    sc_signal< sc_lv<16> > y_read_reg_460_pp0_iter3_reg;
    sc_signal< sc_lv<16> > y_read_reg_460_pp0_iter4_reg;
    sc_signal< sc_lv<16> > y_read_reg_460_pp0_iter5_reg;
    sc_signal< sc_lv<16> > y_read_reg_460_pp0_iter6_reg;
    sc_signal< sc_lv<16> > y_read_reg_460_pp0_iter7_reg;
    sc_signal< sc_lv<16> > y_read_reg_460_pp0_iter8_reg;
    sc_signal< sc_lv<13> > tmp_18_reg_466;
    sc_signal< sc_lv<13> > tmp_18_reg_466_pp0_iter1_reg;
    sc_signal< sc_lv<13> > tmp_18_reg_466_pp0_iter2_reg;
    sc_signal< sc_lv<13> > tmp_18_reg_466_pp0_iter3_reg;
    sc_signal< sc_lv<13> > tmp_18_reg_466_pp0_iter4_reg;
    sc_signal< sc_lv<13> > tmp_18_reg_466_pp0_iter5_reg;
    sc_signal< sc_lv<13> > tmp_18_reg_466_pp0_iter6_reg;
    sc_signal< sc_lv<13> > tmp_18_reg_466_pp0_iter7_reg;
    sc_signal< sc_lv<13> > tmp_18_reg_466_pp0_iter8_reg;
    sc_signal< sc_lv<14> > grp_fu_310_p2;
    sc_signal< sc_lv<14> > newIndex_reg_471;
    sc_signal< sc_lv<15> > arrayNo_fu_345_p1;
    sc_signal< sc_lv<15> > arrayNo_reg_476;
    sc_signal< sc_lv<13> > glPLSlices_0_addr_reg_481;
    sc_signal< sc_lv<13> > glPLSlices_1_addr_reg_486;
    sc_signal< sc_lv<13> > glPLSlices_10_addr_reg_491;
    sc_signal< sc_lv<13> > glPLSlices_11_addr_reg_496;
    sc_signal< sc_lv<13> > glPLSlices_12_addr_reg_501;
    sc_signal< sc_lv<13> > glPLSlices_13_addr_reg_506;
    sc_signal< sc_lv<13> > glPLSlices_14_addr_reg_511;
    sc_signal< sc_lv<13> > glPLSlices_15_addr_reg_516;
    sc_signal< sc_lv<13> > glPLSlices_2_addr_reg_521;
    sc_signal< sc_lv<13> > glPLSlices_3_addr_reg_526;
    sc_signal< sc_lv<13> > glPLSlices_4_addr_reg_531;
    sc_signal< sc_lv<13> > glPLSlices_5_addr_reg_536;
    sc_signal< sc_lv<13> > glPLSlices_6_addr_reg_541;
    sc_signal< sc_lv<13> > glPLSlices_7_addr_reg_546;
    sc_signal< sc_lv<13> > glPLSlices_8_addr_reg_551;
    sc_signal< sc_lv<13> > glPLSlices_9_addr_reg_556;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<16> > ap_port_reg_y;
    sc_signal< sc_lv<32> > tmp_24_cast_fu_357_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<8> > tmp_3_fu_418_p2;
    sc_signal< sc_lv<5> > grp_fu_310_p1;
    sc_signal< sc_lv<10> > tmp_16_fu_328_p1;
    sc_signal< sc_lv<14> > p_shl_cast_fu_331_p3;
    sc_signal< sc_lv<14> > tmp_15_fu_325_p1;
    sc_signal< sc_lv<14> > tmp_19_fu_348_p1;
    sc_signal< sc_lv<14> > tmp_s_fu_339_p2;
    sc_signal< sc_lv<14> > tmp_20_fu_351_p2;
    sc_signal< sc_lv<16> > tmp_fu_380_p17;
    sc_signal< sc_lv<8> > tmp_fu_380_p18;
    sc_signal< sc_lv<17> > mul_fu_440_p0;
    sc_signal< sc_lv<15> > mul_fu_440_p1;
    sc_signal< sc_logic > grp_fu_310_ce;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to9;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0_1to10;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<32> > mul_fu_440_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_pp0_stage0;
    static const sc_lv<2> ap_ST_fsm_pp0_stage1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<15> ap_const_lv15_2;
    static const sc_lv<15> ap_const_lv15_3;
    static const sc_lv<15> ap_const_lv15_4;
    static const sc_lv<15> ap_const_lv15_5;
    static const sc_lv<15> ap_const_lv15_6;
    static const sc_lv<15> ap_const_lv15_7;
    static const sc_lv<15> ap_const_lv15_8;
    static const sc_lv<15> ap_const_lv15_9;
    static const sc_lv<15> ap_const_lv15_A;
    static const sc_lv<15> ap_const_lv15_B;
    static const sc_lv<15> ap_const_lv15_C;
    static const sc_lv<15> ap_const_lv15_D;
    static const sc_lv<15> ap_const_lv15_E;
    static const sc_lv<15> ap_const_lv15_F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_8889;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state10_pp0_stage1_iter4();
    void thread_ap_block_state11_pp0_stage0_iter5();
    void thread_ap_block_state12_pp0_stage1_iter5();
    void thread_ap_block_state13_pp0_stage0_iter6();
    void thread_ap_block_state14_pp0_stage1_iter6();
    void thread_ap_block_state15_pp0_stage0_iter7();
    void thread_ap_block_state16_pp0_stage1_iter7();
    void thread_ap_block_state17_pp0_stage0_iter8();
    void thread_ap_block_state18_pp0_stage1_iter8();
    void thread_ap_block_state19_pp0_stage0_iter9();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state20_pp0_stage1_iter9();
    void thread_ap_block_state21_pp0_stage0_iter10();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage1_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage1_iter2();
    void thread_ap_block_state7_pp0_stage0_iter3();
    void thread_ap_block_state8_pp0_stage1_iter3();
    void thread_ap_block_state9_pp0_stage0_iter4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to9();
    void thread_ap_idle_pp0_1to10();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_arrayNo_fu_345_p1();
    void thread_glPLSlices_0_address0();
    void thread_glPLSlices_0_ce0();
    void thread_glPLSlices_0_d0();
    void thread_glPLSlices_0_we0();
    void thread_glPLSlices_10_address0();
    void thread_glPLSlices_10_ce0();
    void thread_glPLSlices_10_d0();
    void thread_glPLSlices_10_we0();
    void thread_glPLSlices_11_address0();
    void thread_glPLSlices_11_ce0();
    void thread_glPLSlices_11_d0();
    void thread_glPLSlices_11_we0();
    void thread_glPLSlices_12_address0();
    void thread_glPLSlices_12_ce0();
    void thread_glPLSlices_12_d0();
    void thread_glPLSlices_12_we0();
    void thread_glPLSlices_13_address0();
    void thread_glPLSlices_13_ce0();
    void thread_glPLSlices_13_d0();
    void thread_glPLSlices_13_we0();
    void thread_glPLSlices_14_address0();
    void thread_glPLSlices_14_ce0();
    void thread_glPLSlices_14_d0();
    void thread_glPLSlices_14_we0();
    void thread_glPLSlices_15_address0();
    void thread_glPLSlices_15_ce0();
    void thread_glPLSlices_15_d0();
    void thread_glPLSlices_15_we0();
    void thread_glPLSlices_1_address0();
    void thread_glPLSlices_1_ce0();
    void thread_glPLSlices_1_d0();
    void thread_glPLSlices_1_we0();
    void thread_glPLSlices_2_address0();
    void thread_glPLSlices_2_ce0();
    void thread_glPLSlices_2_d0();
    void thread_glPLSlices_2_we0();
    void thread_glPLSlices_3_address0();
    void thread_glPLSlices_3_ce0();
    void thread_glPLSlices_3_d0();
    void thread_glPLSlices_3_we0();
    void thread_glPLSlices_4_address0();
    void thread_glPLSlices_4_ce0();
    void thread_glPLSlices_4_d0();
    void thread_glPLSlices_4_we0();
    void thread_glPLSlices_5_address0();
    void thread_glPLSlices_5_ce0();
    void thread_glPLSlices_5_d0();
    void thread_glPLSlices_5_we0();
    void thread_glPLSlices_6_address0();
    void thread_glPLSlices_6_ce0();
    void thread_glPLSlices_6_d0();
    void thread_glPLSlices_6_we0();
    void thread_glPLSlices_7_address0();
    void thread_glPLSlices_7_ce0();
    void thread_glPLSlices_7_d0();
    void thread_glPLSlices_7_we0();
    void thread_glPLSlices_8_address0();
    void thread_glPLSlices_8_ce0();
    void thread_glPLSlices_8_d0();
    void thread_glPLSlices_8_we0();
    void thread_glPLSlices_9_address0();
    void thread_glPLSlices_9_ce0();
    void thread_glPLSlices_9_d0();
    void thread_glPLSlices_9_we0();
    void thread_grp_fu_310_ce();
    void thread_grp_fu_310_p1();
    void thread_mul_fu_440_p0();
    void thread_mul_fu_440_p1();
    void thread_mul_fu_440_p10();
    void thread_p_shl_cast_fu_331_p3();
    void thread_pol_read_read_fu_92_p2();
    void thread_tmp_15_fu_325_p1();
    void thread_tmp_16_fu_328_p1();
    void thread_tmp_17_fu_302_p1();
    void thread_tmp_19_fu_348_p1();
    void thread_tmp_20_fu_351_p2();
    void thread_tmp_24_cast_fu_357_p1();
    void thread_tmp_3_fu_418_p2();
    void thread_tmp_fu_380_p17();
    void thread_tmp_s_fu_339_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
