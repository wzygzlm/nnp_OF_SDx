// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a0_resetCurrentSliceHW.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a0_resetCurrentSliceHW::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic a0_resetCurrentSliceHW::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state1 = "1";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state2 = "10";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state3 = "100";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state4 = "1000";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state5 = "10000";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state6 = "100000";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> a0_resetCurrentSliceHW::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_1 = "1";
const sc_lv<1> a0_resetCurrentSliceHW::ap_const_lv1_0 = "0";
const sc_lv<8> a0_resetCurrentSliceHW::ap_const_lv8_0 = "00000000";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_8 = "1000";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_2 = "10";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_3 = "11";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_4 = "100";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_5 = "101";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_6 = "110";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_7 = "111";
const sc_lv<8> a0_resetCurrentSliceHW::ap_const_lv8_B4 = "10110100";
const sc_lv<8> a0_resetCurrentSliceHW::ap_const_lv8_1 = "1";
const sc_lv<4> a0_resetCurrentSliceHW::ap_const_lv4_0 = "0000";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_1 = "1";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_2 = "10";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_3 = "11";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_4 = "100";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_5 = "101";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_6 = "110";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_7 = "111";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_8 = "1000";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_9 = "1001";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_A = "1010";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_B = "1011";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_C = "1100";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_D = "1101";
const sc_lv<14> a0_resetCurrentSliceHW::ap_const_lv14_E = "1110";
const sc_lv<32> a0_resetCurrentSliceHW::ap_const_lv32_9 = "1001";
const bool a0_resetCurrentSliceHW::ap_const_boolean_1 = true;

a0_resetCurrentSliceHW::a0_resetCurrentSliceHW(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_exitcond1_fu_2167_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_2156 );

    SC_METHOD(thread_glPLSlices_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_0_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_0_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_0_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_0_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_0_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_0_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_10_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_10_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_10_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_10_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_10_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_10_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_10_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_10_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_11_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_11_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_11_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_11_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_11_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_11_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_11_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_11_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_12_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_12_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_12_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_12_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_12_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_12_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_12_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_12_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_13_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_13_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_13_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_13_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_13_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_13_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_13_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_13_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_14_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_14_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_14_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_14_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_14_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_14_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_14_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_14_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_15_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_15_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_15_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_15_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_15_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_15_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_15_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_15_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_1_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_1_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_1_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_1_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_1_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_1_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_1_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_2_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_2_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_2_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_2_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_2_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_2_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_2_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_3_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_3_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_3_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_3_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_3_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_3_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_3_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_4_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_4_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_4_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_4_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_4_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_4_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_4_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_4_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_5_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_5_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_5_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_5_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_5_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_5_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_5_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_5_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_6_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_6_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_6_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_6_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_6_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_6_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_6_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_6_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_7_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_7_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_7_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_7_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_7_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_7_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_7_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_7_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_8_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_8_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_8_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_8_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_8_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_8_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_8_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_8_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_9_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_cast_fu_2205_p1 );
    sensitive << ( tmp_5_cast_fu_2256_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_cast_fu_2306_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_cast_fu_2356_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_cast_fu_2406_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_cast_fu_2456_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_2506_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_cast_fu_2556_p1 );

    SC_METHOD(thread_glPLSlices_9_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_cast_fu_2231_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_cast_fu_2281_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast_fu_2331_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_10_cast_fu_2381_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_fu_2431_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_2481_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_16_cast_fu_2531_p1 );

    SC_METHOD(thread_glPLSlices_9_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_9_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_9_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_9_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_9_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_9_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_i_1_fu_2173_p2);
    sensitive << ( i_reg_2156 );

    SC_METHOD(thread_p_shl_cast_fu_2191_p1);
    sensitive << ( tmp_2_fu_2183_p3 );

    SC_METHOD(thread_tmp_10_cast_fu_2381_p1);
    sensitive << ( tmp_s_fu_2376_p2 );

    SC_METHOD(thread_tmp_10_fu_2401_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_11_cast_fu_2406_p1);
    sensitive << ( tmp_10_fu_2401_p2 );

    SC_METHOD(thread_tmp_11_fu_2426_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_12_cast_fu_2431_p1);
    sensitive << ( tmp_11_fu_2426_p2 );

    SC_METHOD(thread_tmp_12_fu_2451_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_13_cast_fu_2456_p1);
    sensitive << ( tmp_12_fu_2451_p2 );

    SC_METHOD(thread_tmp_13_fu_2476_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_14_cast_fu_2481_p1);
    sensitive << ( tmp_13_fu_2476_p2 );

    SC_METHOD(thread_tmp_14_fu_2501_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_15_cast_fu_2506_p1);
    sensitive << ( tmp_14_fu_2501_p2 );

    SC_METHOD(thread_tmp_15_fu_2526_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_16_cast_fu_2531_p1);
    sensitive << ( tmp_15_fu_2526_p2 );

    SC_METHOD(thread_tmp_16_fu_2551_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_17_cast_fu_2556_p1);
    sensitive << ( tmp_16_fu_2551_p2 );

    SC_METHOD(thread_tmp_2_fu_2183_p3);
    sensitive << ( i_reg_2156 );

    SC_METHOD(thread_tmp_3_cast1_fu_2201_p1);
    sensitive << ( tmp_3_fu_2195_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_2205_p1);
    sensitive << ( tmp_3_fu_2195_p2 );

    SC_METHOD(thread_tmp_3_fu_2195_p2);
    sensitive << ( p_shl_cast_fu_2191_p1 );
    sensitive << ( tmp_cast_fu_2179_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_2231_p1);
    sensitive << ( tmp_4_fu_2225_p2 );

    SC_METHOD(thread_tmp_4_fu_2225_p2);
    sensitive << ( tmp_3_cast1_fu_2201_p1 );

    SC_METHOD(thread_tmp_5_cast_fu_2256_p1);
    sensitive << ( tmp_5_fu_2251_p2 );

    SC_METHOD(thread_tmp_5_fu_2251_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_6_cast_fu_2281_p1);
    sensitive << ( tmp_6_fu_2276_p2 );

    SC_METHOD(thread_tmp_6_fu_2276_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_7_cast_fu_2306_p1);
    sensitive << ( tmp_7_fu_2301_p2 );

    SC_METHOD(thread_tmp_7_fu_2301_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_8_cast_fu_2331_p1);
    sensitive << ( tmp_8_fu_2326_p2 );

    SC_METHOD(thread_tmp_8_fu_2326_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_9_cast_fu_2356_p1);
    sensitive << ( tmp_9_fu_2351_p2 );

    SC_METHOD(thread_tmp_9_fu_2351_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_tmp_cast_fu_2179_p1);
    sensitive << ( i_reg_2156 );

    SC_METHOD(thread_tmp_s_fu_2376_p2);
    sensitive << ( tmp_3_cast1_reg_2584 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_2167_p2 );

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a0_resetCurrentSliceHW_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, glPLSlices_0_address0, "(port)glPLSlices_0_address0");
    sc_trace(mVcdFile, glPLSlices_0_ce0, "(port)glPLSlices_0_ce0");
    sc_trace(mVcdFile, glPLSlices_0_we0, "(port)glPLSlices_0_we0");
    sc_trace(mVcdFile, glPLSlices_0_d0, "(port)glPLSlices_0_d0");
    sc_trace(mVcdFile, glPLSlices_0_address1, "(port)glPLSlices_0_address1");
    sc_trace(mVcdFile, glPLSlices_0_ce1, "(port)glPLSlices_0_ce1");
    sc_trace(mVcdFile, glPLSlices_0_we1, "(port)glPLSlices_0_we1");
    sc_trace(mVcdFile, glPLSlices_0_d1, "(port)glPLSlices_0_d1");
    sc_trace(mVcdFile, glPLSlices_1_address0, "(port)glPLSlices_1_address0");
    sc_trace(mVcdFile, glPLSlices_1_ce0, "(port)glPLSlices_1_ce0");
    sc_trace(mVcdFile, glPLSlices_1_we0, "(port)glPLSlices_1_we0");
    sc_trace(mVcdFile, glPLSlices_1_d0, "(port)glPLSlices_1_d0");
    sc_trace(mVcdFile, glPLSlices_1_address1, "(port)glPLSlices_1_address1");
    sc_trace(mVcdFile, glPLSlices_1_ce1, "(port)glPLSlices_1_ce1");
    sc_trace(mVcdFile, glPLSlices_1_we1, "(port)glPLSlices_1_we1");
    sc_trace(mVcdFile, glPLSlices_1_d1, "(port)glPLSlices_1_d1");
    sc_trace(mVcdFile, glPLSlices_2_address0, "(port)glPLSlices_2_address0");
    sc_trace(mVcdFile, glPLSlices_2_ce0, "(port)glPLSlices_2_ce0");
    sc_trace(mVcdFile, glPLSlices_2_we0, "(port)glPLSlices_2_we0");
    sc_trace(mVcdFile, glPLSlices_2_d0, "(port)glPLSlices_2_d0");
    sc_trace(mVcdFile, glPLSlices_2_address1, "(port)glPLSlices_2_address1");
    sc_trace(mVcdFile, glPLSlices_2_ce1, "(port)glPLSlices_2_ce1");
    sc_trace(mVcdFile, glPLSlices_2_we1, "(port)glPLSlices_2_we1");
    sc_trace(mVcdFile, glPLSlices_2_d1, "(port)glPLSlices_2_d1");
    sc_trace(mVcdFile, glPLSlices_3_address0, "(port)glPLSlices_3_address0");
    sc_trace(mVcdFile, glPLSlices_3_ce0, "(port)glPLSlices_3_ce0");
    sc_trace(mVcdFile, glPLSlices_3_we0, "(port)glPLSlices_3_we0");
    sc_trace(mVcdFile, glPLSlices_3_d0, "(port)glPLSlices_3_d0");
    sc_trace(mVcdFile, glPLSlices_3_address1, "(port)glPLSlices_3_address1");
    sc_trace(mVcdFile, glPLSlices_3_ce1, "(port)glPLSlices_3_ce1");
    sc_trace(mVcdFile, glPLSlices_3_we1, "(port)glPLSlices_3_we1");
    sc_trace(mVcdFile, glPLSlices_3_d1, "(port)glPLSlices_3_d1");
    sc_trace(mVcdFile, glPLSlices_4_address0, "(port)glPLSlices_4_address0");
    sc_trace(mVcdFile, glPLSlices_4_ce0, "(port)glPLSlices_4_ce0");
    sc_trace(mVcdFile, glPLSlices_4_we0, "(port)glPLSlices_4_we0");
    sc_trace(mVcdFile, glPLSlices_4_d0, "(port)glPLSlices_4_d0");
    sc_trace(mVcdFile, glPLSlices_4_address1, "(port)glPLSlices_4_address1");
    sc_trace(mVcdFile, glPLSlices_4_ce1, "(port)glPLSlices_4_ce1");
    sc_trace(mVcdFile, glPLSlices_4_we1, "(port)glPLSlices_4_we1");
    sc_trace(mVcdFile, glPLSlices_4_d1, "(port)glPLSlices_4_d1");
    sc_trace(mVcdFile, glPLSlices_5_address0, "(port)glPLSlices_5_address0");
    sc_trace(mVcdFile, glPLSlices_5_ce0, "(port)glPLSlices_5_ce0");
    sc_trace(mVcdFile, glPLSlices_5_we0, "(port)glPLSlices_5_we0");
    sc_trace(mVcdFile, glPLSlices_5_d0, "(port)glPLSlices_5_d0");
    sc_trace(mVcdFile, glPLSlices_5_address1, "(port)glPLSlices_5_address1");
    sc_trace(mVcdFile, glPLSlices_5_ce1, "(port)glPLSlices_5_ce1");
    sc_trace(mVcdFile, glPLSlices_5_we1, "(port)glPLSlices_5_we1");
    sc_trace(mVcdFile, glPLSlices_5_d1, "(port)glPLSlices_5_d1");
    sc_trace(mVcdFile, glPLSlices_6_address0, "(port)glPLSlices_6_address0");
    sc_trace(mVcdFile, glPLSlices_6_ce0, "(port)glPLSlices_6_ce0");
    sc_trace(mVcdFile, glPLSlices_6_we0, "(port)glPLSlices_6_we0");
    sc_trace(mVcdFile, glPLSlices_6_d0, "(port)glPLSlices_6_d0");
    sc_trace(mVcdFile, glPLSlices_6_address1, "(port)glPLSlices_6_address1");
    sc_trace(mVcdFile, glPLSlices_6_ce1, "(port)glPLSlices_6_ce1");
    sc_trace(mVcdFile, glPLSlices_6_we1, "(port)glPLSlices_6_we1");
    sc_trace(mVcdFile, glPLSlices_6_d1, "(port)glPLSlices_6_d1");
    sc_trace(mVcdFile, glPLSlices_7_address0, "(port)glPLSlices_7_address0");
    sc_trace(mVcdFile, glPLSlices_7_ce0, "(port)glPLSlices_7_ce0");
    sc_trace(mVcdFile, glPLSlices_7_we0, "(port)glPLSlices_7_we0");
    sc_trace(mVcdFile, glPLSlices_7_d0, "(port)glPLSlices_7_d0");
    sc_trace(mVcdFile, glPLSlices_7_address1, "(port)glPLSlices_7_address1");
    sc_trace(mVcdFile, glPLSlices_7_ce1, "(port)glPLSlices_7_ce1");
    sc_trace(mVcdFile, glPLSlices_7_we1, "(port)glPLSlices_7_we1");
    sc_trace(mVcdFile, glPLSlices_7_d1, "(port)glPLSlices_7_d1");
    sc_trace(mVcdFile, glPLSlices_8_address0, "(port)glPLSlices_8_address0");
    sc_trace(mVcdFile, glPLSlices_8_ce0, "(port)glPLSlices_8_ce0");
    sc_trace(mVcdFile, glPLSlices_8_we0, "(port)glPLSlices_8_we0");
    sc_trace(mVcdFile, glPLSlices_8_d0, "(port)glPLSlices_8_d0");
    sc_trace(mVcdFile, glPLSlices_8_address1, "(port)glPLSlices_8_address1");
    sc_trace(mVcdFile, glPLSlices_8_ce1, "(port)glPLSlices_8_ce1");
    sc_trace(mVcdFile, glPLSlices_8_we1, "(port)glPLSlices_8_we1");
    sc_trace(mVcdFile, glPLSlices_8_d1, "(port)glPLSlices_8_d1");
    sc_trace(mVcdFile, glPLSlices_9_address0, "(port)glPLSlices_9_address0");
    sc_trace(mVcdFile, glPLSlices_9_ce0, "(port)glPLSlices_9_ce0");
    sc_trace(mVcdFile, glPLSlices_9_we0, "(port)glPLSlices_9_we0");
    sc_trace(mVcdFile, glPLSlices_9_d0, "(port)glPLSlices_9_d0");
    sc_trace(mVcdFile, glPLSlices_9_address1, "(port)glPLSlices_9_address1");
    sc_trace(mVcdFile, glPLSlices_9_ce1, "(port)glPLSlices_9_ce1");
    sc_trace(mVcdFile, glPLSlices_9_we1, "(port)glPLSlices_9_we1");
    sc_trace(mVcdFile, glPLSlices_9_d1, "(port)glPLSlices_9_d1");
    sc_trace(mVcdFile, glPLSlices_10_address0, "(port)glPLSlices_10_address0");
    sc_trace(mVcdFile, glPLSlices_10_ce0, "(port)glPLSlices_10_ce0");
    sc_trace(mVcdFile, glPLSlices_10_we0, "(port)glPLSlices_10_we0");
    sc_trace(mVcdFile, glPLSlices_10_d0, "(port)glPLSlices_10_d0");
    sc_trace(mVcdFile, glPLSlices_10_address1, "(port)glPLSlices_10_address1");
    sc_trace(mVcdFile, glPLSlices_10_ce1, "(port)glPLSlices_10_ce1");
    sc_trace(mVcdFile, glPLSlices_10_we1, "(port)glPLSlices_10_we1");
    sc_trace(mVcdFile, glPLSlices_10_d1, "(port)glPLSlices_10_d1");
    sc_trace(mVcdFile, glPLSlices_11_address0, "(port)glPLSlices_11_address0");
    sc_trace(mVcdFile, glPLSlices_11_ce0, "(port)glPLSlices_11_ce0");
    sc_trace(mVcdFile, glPLSlices_11_we0, "(port)glPLSlices_11_we0");
    sc_trace(mVcdFile, glPLSlices_11_d0, "(port)glPLSlices_11_d0");
    sc_trace(mVcdFile, glPLSlices_11_address1, "(port)glPLSlices_11_address1");
    sc_trace(mVcdFile, glPLSlices_11_ce1, "(port)glPLSlices_11_ce1");
    sc_trace(mVcdFile, glPLSlices_11_we1, "(port)glPLSlices_11_we1");
    sc_trace(mVcdFile, glPLSlices_11_d1, "(port)glPLSlices_11_d1");
    sc_trace(mVcdFile, glPLSlices_12_address0, "(port)glPLSlices_12_address0");
    sc_trace(mVcdFile, glPLSlices_12_ce0, "(port)glPLSlices_12_ce0");
    sc_trace(mVcdFile, glPLSlices_12_we0, "(port)glPLSlices_12_we0");
    sc_trace(mVcdFile, glPLSlices_12_d0, "(port)glPLSlices_12_d0");
    sc_trace(mVcdFile, glPLSlices_12_address1, "(port)glPLSlices_12_address1");
    sc_trace(mVcdFile, glPLSlices_12_ce1, "(port)glPLSlices_12_ce1");
    sc_trace(mVcdFile, glPLSlices_12_we1, "(port)glPLSlices_12_we1");
    sc_trace(mVcdFile, glPLSlices_12_d1, "(port)glPLSlices_12_d1");
    sc_trace(mVcdFile, glPLSlices_13_address0, "(port)glPLSlices_13_address0");
    sc_trace(mVcdFile, glPLSlices_13_ce0, "(port)glPLSlices_13_ce0");
    sc_trace(mVcdFile, glPLSlices_13_we0, "(port)glPLSlices_13_we0");
    sc_trace(mVcdFile, glPLSlices_13_d0, "(port)glPLSlices_13_d0");
    sc_trace(mVcdFile, glPLSlices_13_address1, "(port)glPLSlices_13_address1");
    sc_trace(mVcdFile, glPLSlices_13_ce1, "(port)glPLSlices_13_ce1");
    sc_trace(mVcdFile, glPLSlices_13_we1, "(port)glPLSlices_13_we1");
    sc_trace(mVcdFile, glPLSlices_13_d1, "(port)glPLSlices_13_d1");
    sc_trace(mVcdFile, glPLSlices_14_address0, "(port)glPLSlices_14_address0");
    sc_trace(mVcdFile, glPLSlices_14_ce0, "(port)glPLSlices_14_ce0");
    sc_trace(mVcdFile, glPLSlices_14_we0, "(port)glPLSlices_14_we0");
    sc_trace(mVcdFile, glPLSlices_14_d0, "(port)glPLSlices_14_d0");
    sc_trace(mVcdFile, glPLSlices_14_address1, "(port)glPLSlices_14_address1");
    sc_trace(mVcdFile, glPLSlices_14_ce1, "(port)glPLSlices_14_ce1");
    sc_trace(mVcdFile, glPLSlices_14_we1, "(port)glPLSlices_14_we1");
    sc_trace(mVcdFile, glPLSlices_14_d1, "(port)glPLSlices_14_d1");
    sc_trace(mVcdFile, glPLSlices_15_address0, "(port)glPLSlices_15_address0");
    sc_trace(mVcdFile, glPLSlices_15_ce0, "(port)glPLSlices_15_ce0");
    sc_trace(mVcdFile, glPLSlices_15_we0, "(port)glPLSlices_15_we0");
    sc_trace(mVcdFile, glPLSlices_15_d0, "(port)glPLSlices_15_d0");
    sc_trace(mVcdFile, glPLSlices_15_address1, "(port)glPLSlices_15_address1");
    sc_trace(mVcdFile, glPLSlices_15_ce1, "(port)glPLSlices_15_ce1");
    sc_trace(mVcdFile, glPLSlices_15_we1, "(port)glPLSlices_15_we1");
    sc_trace(mVcdFile, glPLSlices_15_d1, "(port)glPLSlices_15_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_fu_2173_p2, "i_1_fu_2173_p2");
    sc_trace(mVcdFile, i_1_reg_2579, "i_1_reg_2579");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_3_cast1_fu_2201_p1, "tmp_3_cast1_fu_2201_p1");
    sc_trace(mVcdFile, tmp_3_cast1_reg_2584, "tmp_3_cast1_reg_2584");
    sc_trace(mVcdFile, exitcond1_fu_2167_p2, "exitcond1_fu_2167_p2");
    sc_trace(mVcdFile, i_reg_2156, "i_reg_2156");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_3_cast_fu_2205_p1, "tmp_3_cast_fu_2205_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_2231_p1, "tmp_4_cast_fu_2231_p1");
    sc_trace(mVcdFile, tmp_5_cast_fu_2256_p1, "tmp_5_cast_fu_2256_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_6_cast_fu_2281_p1, "tmp_6_cast_fu_2281_p1");
    sc_trace(mVcdFile, tmp_7_cast_fu_2306_p1, "tmp_7_cast_fu_2306_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_8_cast_fu_2331_p1, "tmp_8_cast_fu_2331_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_2356_p1, "tmp_9_cast_fu_2356_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_10_cast_fu_2381_p1, "tmp_10_cast_fu_2381_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_2406_p1, "tmp_11_cast_fu_2406_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_12_cast_fu_2431_p1, "tmp_12_cast_fu_2431_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_2456_p1, "tmp_13_cast_fu_2456_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_14_cast_fu_2481_p1, "tmp_14_cast_fu_2481_p1");
    sc_trace(mVcdFile, tmp_15_cast_fu_2506_p1, "tmp_15_cast_fu_2506_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_16_cast_fu_2531_p1, "tmp_16_cast_fu_2531_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_2556_p1, "tmp_17_cast_fu_2556_p1");
    sc_trace(mVcdFile, tmp_2_fu_2183_p3, "tmp_2_fu_2183_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_2191_p1, "p_shl_cast_fu_2191_p1");
    sc_trace(mVcdFile, tmp_cast_fu_2179_p1, "tmp_cast_fu_2179_p1");
    sc_trace(mVcdFile, tmp_3_fu_2195_p2, "tmp_3_fu_2195_p2");
    sc_trace(mVcdFile, tmp_4_fu_2225_p2, "tmp_4_fu_2225_p2");
    sc_trace(mVcdFile, tmp_5_fu_2251_p2, "tmp_5_fu_2251_p2");
    sc_trace(mVcdFile, tmp_6_fu_2276_p2, "tmp_6_fu_2276_p2");
    sc_trace(mVcdFile, tmp_7_fu_2301_p2, "tmp_7_fu_2301_p2");
    sc_trace(mVcdFile, tmp_8_fu_2326_p2, "tmp_8_fu_2326_p2");
    sc_trace(mVcdFile, tmp_9_fu_2351_p2, "tmp_9_fu_2351_p2");
    sc_trace(mVcdFile, tmp_s_fu_2376_p2, "tmp_s_fu_2376_p2");
    sc_trace(mVcdFile, tmp_10_fu_2401_p2, "tmp_10_fu_2401_p2");
    sc_trace(mVcdFile, tmp_11_fu_2426_p2, "tmp_11_fu_2426_p2");
    sc_trace(mVcdFile, tmp_12_fu_2451_p2, "tmp_12_fu_2451_p2");
    sc_trace(mVcdFile, tmp_13_fu_2476_p2, "tmp_13_fu_2476_p2");
    sc_trace(mVcdFile, tmp_14_fu_2501_p2, "tmp_14_fu_2501_p2");
    sc_trace(mVcdFile, tmp_15_fu_2526_p2, "tmp_15_fu_2526_p2");
    sc_trace(mVcdFile, tmp_16_fu_2551_p2, "tmp_16_fu_2551_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

a0_resetCurrentSliceHW::~a0_resetCurrentSliceHW() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void a0_resetCurrentSliceHW::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_reg_2156 = i_1_reg_2579.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_2156 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_2579 = i_1_fu_2173_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_3_cast1_reg_2584 = tmp_3_cast1_fu_2201_p1.read();
    }
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void a0_resetCurrentSliceHW::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void a0_resetCurrentSliceHW::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_exitcond1_fu_2167_p2() {
    exitcond1_fu_2167_p2 = (!i_reg_2156.read().is_01() || !ap_const_lv8_B4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_2156.read() == ap_const_lv8_B4);
}

void a0_resetCurrentSliceHW::thread_glPLSlices_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_0_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_0_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_0_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_0_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_0_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_0_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_0_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_0_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_0_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_0_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_0_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_0_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_0_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_0_d0() {
    glPLSlices_0_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_0_d1() {
    glPLSlices_0_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_0_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_0_we0 = ap_const_logic_1;
    } else {
        glPLSlices_0_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_0_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_0_we1 = ap_const_logic_1;
    } else {
        glPLSlices_0_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_10_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_10_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_10_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_10_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_10_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_10_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_10_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_10_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_10_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_10_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_10_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_10_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_10_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_10_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_10_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_10_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_10_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_10_d0() {
    glPLSlices_10_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_10_d1() {
    glPLSlices_10_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_10_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_10_we0 = ap_const_logic_1;
    } else {
        glPLSlices_10_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_10_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_10_we1 = ap_const_logic_1;
    } else {
        glPLSlices_10_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_11_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_11_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_11_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_11_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_11_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_11_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_11_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_11_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_11_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_11_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_11_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_11_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_11_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_11_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_11_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_11_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_11_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_11_d0() {
    glPLSlices_11_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_11_d1() {
    glPLSlices_11_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_11_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_11_we0 = ap_const_logic_1;
    } else {
        glPLSlices_11_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_11_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_11_we1 = ap_const_logic_1;
    } else {
        glPLSlices_11_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_12_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_12_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_12_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_12_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_12_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_12_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_12_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_12_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_12_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_12_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_12_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_12_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_12_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_12_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_12_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_12_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_12_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_12_d0() {
    glPLSlices_12_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_12_d1() {
    glPLSlices_12_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_12_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_12_we0 = ap_const_logic_1;
    } else {
        glPLSlices_12_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_12_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_12_we1 = ap_const_logic_1;
    } else {
        glPLSlices_12_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_13_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_13_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_13_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_13_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_13_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_13_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_13_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_13_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_13_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_13_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_13_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_13_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_13_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_13_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_13_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_13_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_13_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_13_d0() {
    glPLSlices_13_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_13_d1() {
    glPLSlices_13_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_13_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_13_we0 = ap_const_logic_1;
    } else {
        glPLSlices_13_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_13_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_13_we1 = ap_const_logic_1;
    } else {
        glPLSlices_13_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_14_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_14_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_14_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_14_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_14_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_14_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_14_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_14_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_14_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_14_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_14_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_14_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_14_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_14_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_14_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_14_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_14_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_14_d0() {
    glPLSlices_14_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_14_d1() {
    glPLSlices_14_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_14_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_14_we0 = ap_const_logic_1;
    } else {
        glPLSlices_14_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_14_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_14_we1 = ap_const_logic_1;
    } else {
        glPLSlices_14_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_15_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_15_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_15_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_15_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_15_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_15_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_15_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_15_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_15_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_15_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_15_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_15_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_15_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_15_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_15_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_15_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_15_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_15_d0() {
    glPLSlices_15_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_15_d1() {
    glPLSlices_15_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_15_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_15_we0 = ap_const_logic_1;
    } else {
        glPLSlices_15_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_15_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_15_we1 = ap_const_logic_1;
    } else {
        glPLSlices_15_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_1_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_1_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_1_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_1_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_1_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_1_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_1_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_1_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_1_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_1_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_1_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_1_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_1_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_1_d0() {
    glPLSlices_1_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_1_d1() {
    glPLSlices_1_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_1_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_1_we0 = ap_const_logic_1;
    } else {
        glPLSlices_1_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_1_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_1_we1 = ap_const_logic_1;
    } else {
        glPLSlices_1_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_2_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_2_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_2_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_2_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_2_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_2_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_2_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_2_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_2_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_2_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_2_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_2_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_2_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_2_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_2_d0() {
    glPLSlices_2_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_2_d1() {
    glPLSlices_2_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_2_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_2_we0 = ap_const_logic_1;
    } else {
        glPLSlices_2_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_2_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_2_we1 = ap_const_logic_1;
    } else {
        glPLSlices_2_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_3_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_3_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_3_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_3_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_3_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_3_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_3_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_3_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_3_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_3_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_3_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_3_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_3_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_3_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_3_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_3_d0() {
    glPLSlices_3_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_3_d1() {
    glPLSlices_3_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_3_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_3_we0 = ap_const_logic_1;
    } else {
        glPLSlices_3_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_3_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_3_we1 = ap_const_logic_1;
    } else {
        glPLSlices_3_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_4_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_4_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_4_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_4_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_4_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_4_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_4_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_4_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_4_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_4_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_4_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_4_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_4_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_4_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_4_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_4_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_4_d0() {
    glPLSlices_4_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_4_d1() {
    glPLSlices_4_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_4_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_4_we0 = ap_const_logic_1;
    } else {
        glPLSlices_4_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_4_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_4_we1 = ap_const_logic_1;
    } else {
        glPLSlices_4_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_5_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_5_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_5_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_5_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_5_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_5_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_5_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_5_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_5_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_5_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_5_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_5_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_5_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_5_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_5_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_5_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_5_d0() {
    glPLSlices_5_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_5_d1() {
    glPLSlices_5_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_5_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_5_we0 = ap_const_logic_1;
    } else {
        glPLSlices_5_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_5_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_5_we1 = ap_const_logic_1;
    } else {
        glPLSlices_5_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_6_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_6_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_6_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_6_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_6_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_6_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_6_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_6_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_6_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_6_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_6_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_6_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_6_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_6_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_6_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_6_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_6_d0() {
    glPLSlices_6_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_6_d1() {
    glPLSlices_6_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_6_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_6_we0 = ap_const_logic_1;
    } else {
        glPLSlices_6_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_6_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_6_we1 = ap_const_logic_1;
    } else {
        glPLSlices_6_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_7_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_7_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_7_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_7_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_7_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_7_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_7_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_7_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_7_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_7_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_7_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_7_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_7_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_7_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_7_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_7_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_7_d0() {
    glPLSlices_7_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_7_d1() {
    glPLSlices_7_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_7_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_7_we0 = ap_const_logic_1;
    } else {
        glPLSlices_7_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_7_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_7_we1 = ap_const_logic_1;
    } else {
        glPLSlices_7_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_8_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_8_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_8_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_8_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_8_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_8_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_8_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_8_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_8_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_8_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_8_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_8_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_8_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_8_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_8_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_8_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_8_d0() {
    glPLSlices_8_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_8_d1() {
    glPLSlices_8_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_8_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_8_we0 = ap_const_logic_1;
    } else {
        glPLSlices_8_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_8_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_8_we1 = ap_const_logic_1;
    } else {
        glPLSlices_8_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_9_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_17_cast_fu_2556_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_15_cast_fu_2506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_13_cast_fu_2456_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_11_cast_fu_2406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_9_cast_fu_2356_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_7_cast_fu_2306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_5_cast_fu_2256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_3_cast_fu_2205_p1.read());
    } else {
        glPLSlices_9_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_9_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_9_address1 =  (sc_lv<13>) (tmp_16_cast_fu_2531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        glPLSlices_9_address1 =  (sc_lv<13>) (tmp_14_cast_fu_2481_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        glPLSlices_9_address1 =  (sc_lv<13>) (tmp_12_cast_fu_2431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        glPLSlices_9_address1 =  (sc_lv<13>) (tmp_10_cast_fu_2381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        glPLSlices_9_address1 =  (sc_lv<13>) (tmp_8_cast_fu_2331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        glPLSlices_9_address1 =  (sc_lv<13>) (tmp_6_cast_fu_2281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_9_address1 =  (sc_lv<13>) (tmp_4_cast_fu_2231_p1.read());
    } else {
        glPLSlices_9_address1 = "XXXXXXXXXXXXX";
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_9_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_9_ce0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_9_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_9_ce1 = ap_const_logic_1;
    } else {
        glPLSlices_9_ce1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_9_d0() {
    glPLSlices_9_d0 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_9_d1() {
    glPLSlices_9_d1 = ap_const_lv8_0;
}

void a0_resetCurrentSliceHW::thread_glPLSlices_9_we0() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_9_we0 = ap_const_logic_1;
    } else {
        glPLSlices_9_we0 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_glPLSlices_9_we1() {
    if (((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        glPLSlices_9_we1 = ap_const_logic_1;
    } else {
        glPLSlices_9_we1 = ap_const_logic_0;
    }
}

void a0_resetCurrentSliceHW::thread_i_1_fu_2173_p2() {
    i_1_fu_2173_p2 = (!i_reg_2156.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_2156.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void a0_resetCurrentSliceHW::thread_p_shl_cast_fu_2191_p1() {
    p_shl_cast_fu_2191_p1 = esl_zext<13,12>(tmp_2_fu_2183_p3.read());
}

void a0_resetCurrentSliceHW::thread_tmp_10_cast_fu_2381_p1() {
    tmp_10_cast_fu_2381_p1 = esl_sext<32,14>(tmp_s_fu_2376_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_10_fu_2401_p2() {
    tmp_10_fu_2401_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_8.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_8));
}

void a0_resetCurrentSliceHW::thread_tmp_11_cast_fu_2406_p1() {
    tmp_11_cast_fu_2406_p1 = esl_sext<32,14>(tmp_10_fu_2401_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_11_fu_2426_p2() {
    tmp_11_fu_2426_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_9.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_9));
}

void a0_resetCurrentSliceHW::thread_tmp_12_cast_fu_2431_p1() {
    tmp_12_cast_fu_2431_p1 = esl_sext<32,14>(tmp_11_fu_2426_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_12_fu_2451_p2() {
    tmp_12_fu_2451_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_A.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_A));
}

void a0_resetCurrentSliceHW::thread_tmp_13_cast_fu_2456_p1() {
    tmp_13_cast_fu_2456_p1 = esl_sext<32,14>(tmp_12_fu_2451_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_13_fu_2476_p2() {
    tmp_13_fu_2476_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_B.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_B));
}

void a0_resetCurrentSliceHW::thread_tmp_14_cast_fu_2481_p1() {
    tmp_14_cast_fu_2481_p1 = esl_sext<32,14>(tmp_13_fu_2476_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_14_fu_2501_p2() {
    tmp_14_fu_2501_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_C.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_C));
}

void a0_resetCurrentSliceHW::thread_tmp_15_cast_fu_2506_p1() {
    tmp_15_cast_fu_2506_p1 = esl_sext<32,14>(tmp_14_fu_2501_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_15_fu_2526_p2() {
    tmp_15_fu_2526_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_D.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_D));
}

void a0_resetCurrentSliceHW::thread_tmp_16_cast_fu_2531_p1() {
    tmp_16_cast_fu_2531_p1 = esl_sext<32,14>(tmp_15_fu_2526_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_16_fu_2551_p2() {
    tmp_16_fu_2551_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_E.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_E));
}

void a0_resetCurrentSliceHW::thread_tmp_17_cast_fu_2556_p1() {
    tmp_17_cast_fu_2556_p1 = esl_sext<32,14>(tmp_16_fu_2551_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_2_fu_2183_p3() {
    tmp_2_fu_2183_p3 = esl_concat<8,4>(i_reg_2156.read(), ap_const_lv4_0);
}

void a0_resetCurrentSliceHW::thread_tmp_3_cast1_fu_2201_p1() {
    tmp_3_cast1_fu_2201_p1 = esl_sext<14,13>(tmp_3_fu_2195_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_3_cast_fu_2205_p1() {
    tmp_3_cast_fu_2205_p1 = esl_sext<32,13>(tmp_3_fu_2195_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_3_fu_2195_p2() {
    tmp_3_fu_2195_p2 = (!p_shl_cast_fu_2191_p1.read().is_01() || !tmp_cast_fu_2179_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl_cast_fu_2191_p1.read()) - sc_biguint<13>(tmp_cast_fu_2179_p1.read()));
}

void a0_resetCurrentSliceHW::thread_tmp_4_cast_fu_2231_p1() {
    tmp_4_cast_fu_2231_p1 = esl_sext<32,14>(tmp_4_fu_2225_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_4_fu_2225_p2() {
    tmp_4_fu_2225_p2 = (!tmp_3_cast1_fu_2201_p1.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_fu_2201_p1.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void a0_resetCurrentSliceHW::thread_tmp_5_cast_fu_2256_p1() {
    tmp_5_cast_fu_2256_p1 = esl_sext<32,14>(tmp_5_fu_2251_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_5_fu_2251_p2() {
    tmp_5_fu_2251_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_2.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_2));
}

void a0_resetCurrentSliceHW::thread_tmp_6_cast_fu_2281_p1() {
    tmp_6_cast_fu_2281_p1 = esl_sext<32,14>(tmp_6_fu_2276_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_6_fu_2276_p2() {
    tmp_6_fu_2276_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_3.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_3));
}

void a0_resetCurrentSliceHW::thread_tmp_7_cast_fu_2306_p1() {
    tmp_7_cast_fu_2306_p1 = esl_sext<32,14>(tmp_7_fu_2301_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_7_fu_2301_p2() {
    tmp_7_fu_2301_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_4.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_4));
}

void a0_resetCurrentSliceHW::thread_tmp_8_cast_fu_2331_p1() {
    tmp_8_cast_fu_2331_p1 = esl_sext<32,14>(tmp_8_fu_2326_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_8_fu_2326_p2() {
    tmp_8_fu_2326_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_5.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_5));
}

void a0_resetCurrentSliceHW::thread_tmp_9_cast_fu_2356_p1() {
    tmp_9_cast_fu_2356_p1 = esl_sext<32,14>(tmp_9_fu_2351_p2.read());
}

void a0_resetCurrentSliceHW::thread_tmp_9_fu_2351_p2() {
    tmp_9_fu_2351_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_6.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_6));
}

void a0_resetCurrentSliceHW::thread_tmp_cast_fu_2179_p1() {
    tmp_cast_fu_2179_p1 = esl_zext<13,8>(i_reg_2156.read());
}

void a0_resetCurrentSliceHW::thread_tmp_s_fu_2376_p2() {
    tmp_s_fu_2376_p2 = (!tmp_3_cast1_reg_2584.read().is_01() || !ap_const_lv14_7.is_01())? sc_lv<14>(): (sc_bigint<14>(tmp_3_cast1_reg_2584.read()) + sc_biguint<14>(ap_const_lv14_7));
}

void a0_resetCurrentSliceHW::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_2167_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

