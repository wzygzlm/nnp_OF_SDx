// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a0_accumulateHW.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a0_accumulateHW::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic a0_accumulateHW::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> a0_accumulateHW::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<2> a0_accumulateHW::ap_ST_fsm_pp0_stage1 = "10";
const bool a0_accumulateHW::ap_const_boolean_1 = true;
const sc_lv<32> a0_accumulateHW::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool a0_accumulateHW::ap_const_boolean_0 = false;
const sc_lv<32> a0_accumulateHW::ap_const_lv32_1 = "1";
const sc_lv<1> a0_accumulateHW::ap_const_lv1_1 = "1";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_0 = "000000000000000";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_1 = "1";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_2 = "10";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_3 = "11";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_4 = "100";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_5 = "101";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_6 = "110";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_7 = "111";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_8 = "1000";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_9 = "1001";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_A = "1010";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_B = "1011";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_C = "1100";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_D = "1101";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_E = "1110";
const sc_lv<15> a0_accumulateHW::ap_const_lv15_F = "1111";
const sc_lv<32> a0_accumulateHW::ap_const_lv32_13 = "10011";
const sc_lv<32> a0_accumulateHW::ap_const_lv32_1F = "11111";
const sc_lv<4> a0_accumulateHW::ap_const_lv4_0 = "0000";
const sc_lv<8> a0_accumulateHW::ap_const_lv8_1 = "1";
const sc_lv<32> a0_accumulateHW::ap_const_lv32_8889 = "1000100010001001";

a0_accumulateHW::a0_accumulateHW(sc_module_name name) : sc_module(name), mVcdFile(0) {
    parseEvents_urem_bkb_U17 = new a0_parseEvents_urem_bkb<1,19,15,5,14>("parseEvents_urem_bkb_U17");
    parseEvents_urem_bkb_U17->clk(ap_clk);
    parseEvents_urem_bkb_U17->reset(ap_rst);
    parseEvents_urem_bkb_U17->din0(tmp_17_fu_302_p1);
    parseEvents_urem_bkb_U17->din1(grp_fu_310_p1);
    parseEvents_urem_bkb_U17->ce(grp_fu_310_ce);
    parseEvents_urem_bkb_U17->dout(grp_fu_310_p2);
    parseEvents_mux_1cud_U18 = new a0_parseEvents_mux_1cud<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,8>("parseEvents_mux_1cud_U18");
    parseEvents_mux_1cud_U18->din0(glPLSlices_0_q0);
    parseEvents_mux_1cud_U18->din1(glPLSlices_1_q0);
    parseEvents_mux_1cud_U18->din2(glPLSlices_2_q0);
    parseEvents_mux_1cud_U18->din3(glPLSlices_3_q0);
    parseEvents_mux_1cud_U18->din4(glPLSlices_4_q0);
    parseEvents_mux_1cud_U18->din5(glPLSlices_5_q0);
    parseEvents_mux_1cud_U18->din6(glPLSlices_6_q0);
    parseEvents_mux_1cud_U18->din7(glPLSlices_7_q0);
    parseEvents_mux_1cud_U18->din8(glPLSlices_8_q0);
    parseEvents_mux_1cud_U18->din9(glPLSlices_9_q0);
    parseEvents_mux_1cud_U18->din10(glPLSlices_10_q0);
    parseEvents_mux_1cud_U18->din11(glPLSlices_11_q0);
    parseEvents_mux_1cud_U18->din12(glPLSlices_12_q0);
    parseEvents_mux_1cud_U18->din13(glPLSlices_13_q0);
    parseEvents_mux_1cud_U18->din14(glPLSlices_14_q0);
    parseEvents_mux_1cud_U18->din15(glPLSlices_15_q0);
    parseEvents_mux_1cud_U18->din16(tmp_fu_380_p17);
    parseEvents_mux_1cud_U18->dout(tmp_fu_380_p18);
    parseEvents_mul_mdEe_U19 = new a0_parseEvents_mul_mdEe<1,1,17,15,32>("parseEvents_mul_mdEe_U19");
    parseEvents_mul_mdEe_U19->din0(mul_fu_440_p0);
    parseEvents_mul_mdEe_U19->din1(mul_fu_440_p1);
    parseEvents_mul_mdEe_U19->dout(mul_fu_440_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_state10_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state12_pp0_stage1_iter5);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state14_pp0_stage1_iter6);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state16_pp0_stage1_iter7);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state18_pp0_stage1_iter8);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state20_pp0_stage1_iter9);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state2_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter4);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0_reg );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_METHOD(thread_ap_idle_pp0_0to9);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_idle_pp0_1to10);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to9 );

    SC_METHOD(thread_arrayNo_fu_345_p1);
    sensitive << ( tmp_18_reg_466_pp0_iter8_reg );

    SC_METHOD(thread_glPLSlices_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_0_addr_reg_481 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_0_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_0_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_10_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_10_addr_reg_491 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_10_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_10_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_10_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_11_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_11_addr_reg_496 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_11_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_11_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_11_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_12_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_12_addr_reg_501 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_12_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_12_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_12_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_13_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_13_addr_reg_506 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_13_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_13_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_13_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_14_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_14_addr_reg_511 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_14_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_14_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_14_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_15_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_15_addr_reg_516 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_15_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_15_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_15_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_1_addr_reg_486 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_1_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_2_addr_reg_521 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_2_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_3_addr_reg_526 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_3_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_3_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_4_addr_reg_531 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_4_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_4_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_5_addr_reg_536 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_5_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_5_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_6_addr_reg_541 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_6_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_6_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_7_addr_reg_546 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_7_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_7_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_8_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_8_addr_reg_551 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_8_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_8_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_8_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_glPLSlices_9_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( glPLSlices_9_addr_reg_556 );
    sensitive << ( tmp_24_cast_fu_357_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_glPLSlices_9_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_glPLSlices_9_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_3_fu_418_p2 );

    SC_METHOD(thread_glPLSlices_9_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( pol_read_reg_446_pp0_iter9_reg );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_grp_fu_310_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_310_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mul_fu_440_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mul_fu_440_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_fu_440_p10 );

    SC_METHOD(thread_mul_fu_440_p10);
    sensitive << ( tmp_17_fu_302_p1 );

    SC_METHOD(thread_p_shl_cast_fu_331_p3);
    sensitive << ( tmp_16_fu_328_p1 );

    SC_METHOD(thread_pol_read_read_fu_92_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_ce );
    sensitive << ( pol );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_15_fu_325_p1);
    sensitive << ( y_read_reg_460_pp0_iter8_reg );

    SC_METHOD(thread_tmp_16_fu_328_p1);
    sensitive << ( y_read_reg_460_pp0_iter8_reg );

    SC_METHOD(thread_tmp_17_fu_302_p1);
    sensitive << ( x );

    SC_METHOD(thread_tmp_19_fu_348_p1);
    sensitive << ( newIndex_reg_471 );

    SC_METHOD(thread_tmp_20_fu_351_p2);
    sensitive << ( tmp_19_fu_348_p1 );
    sensitive << ( tmp_s_fu_339_p2 );

    SC_METHOD(thread_tmp_24_cast_fu_357_p1);
    sensitive << ( tmp_20_fu_351_p2 );

    SC_METHOD(thread_tmp_3_fu_418_p2);
    sensitive << ( tmp_fu_380_p18 );

    SC_METHOD(thread_tmp_fu_380_p17);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( arrayNo_reg_476 );

    SC_METHOD(thread_tmp_s_fu_339_p2);
    sensitive << ( p_shl_cast_fu_331_p3 );
    sensitive << ( tmp_15_fu_325_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );
    sensitive << ( ap_idle_pp0_1to10 );

    ap_CS_fsm = "01";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a0_accumulateHW_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, pol, "(port)pol");
    sc_trace(mVcdFile, glPLSlices_0_address0, "(port)glPLSlices_0_address0");
    sc_trace(mVcdFile, glPLSlices_0_ce0, "(port)glPLSlices_0_ce0");
    sc_trace(mVcdFile, glPLSlices_0_we0, "(port)glPLSlices_0_we0");
    sc_trace(mVcdFile, glPLSlices_0_d0, "(port)glPLSlices_0_d0");
    sc_trace(mVcdFile, glPLSlices_0_q0, "(port)glPLSlices_0_q0");
    sc_trace(mVcdFile, glPLSlices_1_address0, "(port)glPLSlices_1_address0");
    sc_trace(mVcdFile, glPLSlices_1_ce0, "(port)glPLSlices_1_ce0");
    sc_trace(mVcdFile, glPLSlices_1_we0, "(port)glPLSlices_1_we0");
    sc_trace(mVcdFile, glPLSlices_1_d0, "(port)glPLSlices_1_d0");
    sc_trace(mVcdFile, glPLSlices_1_q0, "(port)glPLSlices_1_q0");
    sc_trace(mVcdFile, glPLSlices_2_address0, "(port)glPLSlices_2_address0");
    sc_trace(mVcdFile, glPLSlices_2_ce0, "(port)glPLSlices_2_ce0");
    sc_trace(mVcdFile, glPLSlices_2_we0, "(port)glPLSlices_2_we0");
    sc_trace(mVcdFile, glPLSlices_2_d0, "(port)glPLSlices_2_d0");
    sc_trace(mVcdFile, glPLSlices_2_q0, "(port)glPLSlices_2_q0");
    sc_trace(mVcdFile, glPLSlices_3_address0, "(port)glPLSlices_3_address0");
    sc_trace(mVcdFile, glPLSlices_3_ce0, "(port)glPLSlices_3_ce0");
    sc_trace(mVcdFile, glPLSlices_3_we0, "(port)glPLSlices_3_we0");
    sc_trace(mVcdFile, glPLSlices_3_d0, "(port)glPLSlices_3_d0");
    sc_trace(mVcdFile, glPLSlices_3_q0, "(port)glPLSlices_3_q0");
    sc_trace(mVcdFile, glPLSlices_4_address0, "(port)glPLSlices_4_address0");
    sc_trace(mVcdFile, glPLSlices_4_ce0, "(port)glPLSlices_4_ce0");
    sc_trace(mVcdFile, glPLSlices_4_we0, "(port)glPLSlices_4_we0");
    sc_trace(mVcdFile, glPLSlices_4_d0, "(port)glPLSlices_4_d0");
    sc_trace(mVcdFile, glPLSlices_4_q0, "(port)glPLSlices_4_q0");
    sc_trace(mVcdFile, glPLSlices_5_address0, "(port)glPLSlices_5_address0");
    sc_trace(mVcdFile, glPLSlices_5_ce0, "(port)glPLSlices_5_ce0");
    sc_trace(mVcdFile, glPLSlices_5_we0, "(port)glPLSlices_5_we0");
    sc_trace(mVcdFile, glPLSlices_5_d0, "(port)glPLSlices_5_d0");
    sc_trace(mVcdFile, glPLSlices_5_q0, "(port)glPLSlices_5_q0");
    sc_trace(mVcdFile, glPLSlices_6_address0, "(port)glPLSlices_6_address0");
    sc_trace(mVcdFile, glPLSlices_6_ce0, "(port)glPLSlices_6_ce0");
    sc_trace(mVcdFile, glPLSlices_6_we0, "(port)glPLSlices_6_we0");
    sc_trace(mVcdFile, glPLSlices_6_d0, "(port)glPLSlices_6_d0");
    sc_trace(mVcdFile, glPLSlices_6_q0, "(port)glPLSlices_6_q0");
    sc_trace(mVcdFile, glPLSlices_7_address0, "(port)glPLSlices_7_address0");
    sc_trace(mVcdFile, glPLSlices_7_ce0, "(port)glPLSlices_7_ce0");
    sc_trace(mVcdFile, glPLSlices_7_we0, "(port)glPLSlices_7_we0");
    sc_trace(mVcdFile, glPLSlices_7_d0, "(port)glPLSlices_7_d0");
    sc_trace(mVcdFile, glPLSlices_7_q0, "(port)glPLSlices_7_q0");
    sc_trace(mVcdFile, glPLSlices_8_address0, "(port)glPLSlices_8_address0");
    sc_trace(mVcdFile, glPLSlices_8_ce0, "(port)glPLSlices_8_ce0");
    sc_trace(mVcdFile, glPLSlices_8_we0, "(port)glPLSlices_8_we0");
    sc_trace(mVcdFile, glPLSlices_8_d0, "(port)glPLSlices_8_d0");
    sc_trace(mVcdFile, glPLSlices_8_q0, "(port)glPLSlices_8_q0");
    sc_trace(mVcdFile, glPLSlices_9_address0, "(port)glPLSlices_9_address0");
    sc_trace(mVcdFile, glPLSlices_9_ce0, "(port)glPLSlices_9_ce0");
    sc_trace(mVcdFile, glPLSlices_9_we0, "(port)glPLSlices_9_we0");
    sc_trace(mVcdFile, glPLSlices_9_d0, "(port)glPLSlices_9_d0");
    sc_trace(mVcdFile, glPLSlices_9_q0, "(port)glPLSlices_9_q0");
    sc_trace(mVcdFile, glPLSlices_10_address0, "(port)glPLSlices_10_address0");
    sc_trace(mVcdFile, glPLSlices_10_ce0, "(port)glPLSlices_10_ce0");
    sc_trace(mVcdFile, glPLSlices_10_we0, "(port)glPLSlices_10_we0");
    sc_trace(mVcdFile, glPLSlices_10_d0, "(port)glPLSlices_10_d0");
    sc_trace(mVcdFile, glPLSlices_10_q0, "(port)glPLSlices_10_q0");
    sc_trace(mVcdFile, glPLSlices_11_address0, "(port)glPLSlices_11_address0");
    sc_trace(mVcdFile, glPLSlices_11_ce0, "(port)glPLSlices_11_ce0");
    sc_trace(mVcdFile, glPLSlices_11_we0, "(port)glPLSlices_11_we0");
    sc_trace(mVcdFile, glPLSlices_11_d0, "(port)glPLSlices_11_d0");
    sc_trace(mVcdFile, glPLSlices_11_q0, "(port)glPLSlices_11_q0");
    sc_trace(mVcdFile, glPLSlices_12_address0, "(port)glPLSlices_12_address0");
    sc_trace(mVcdFile, glPLSlices_12_ce0, "(port)glPLSlices_12_ce0");
    sc_trace(mVcdFile, glPLSlices_12_we0, "(port)glPLSlices_12_we0");
    sc_trace(mVcdFile, glPLSlices_12_d0, "(port)glPLSlices_12_d0");
    sc_trace(mVcdFile, glPLSlices_12_q0, "(port)glPLSlices_12_q0");
    sc_trace(mVcdFile, glPLSlices_13_address0, "(port)glPLSlices_13_address0");
    sc_trace(mVcdFile, glPLSlices_13_ce0, "(port)glPLSlices_13_ce0");
    sc_trace(mVcdFile, glPLSlices_13_we0, "(port)glPLSlices_13_we0");
    sc_trace(mVcdFile, glPLSlices_13_d0, "(port)glPLSlices_13_d0");
    sc_trace(mVcdFile, glPLSlices_13_q0, "(port)glPLSlices_13_q0");
    sc_trace(mVcdFile, glPLSlices_14_address0, "(port)glPLSlices_14_address0");
    sc_trace(mVcdFile, glPLSlices_14_ce0, "(port)glPLSlices_14_ce0");
    sc_trace(mVcdFile, glPLSlices_14_we0, "(port)glPLSlices_14_we0");
    sc_trace(mVcdFile, glPLSlices_14_d0, "(port)glPLSlices_14_d0");
    sc_trace(mVcdFile, glPLSlices_14_q0, "(port)glPLSlices_14_q0");
    sc_trace(mVcdFile, glPLSlices_15_address0, "(port)glPLSlices_15_address0");
    sc_trace(mVcdFile, glPLSlices_15_ce0, "(port)glPLSlices_15_ce0");
    sc_trace(mVcdFile, glPLSlices_15_we0, "(port)glPLSlices_15_we0");
    sc_trace(mVcdFile, glPLSlices_15_d0, "(port)glPLSlices_15_d0");
    sc_trace(mVcdFile, glPLSlices_15_q0, "(port)glPLSlices_15_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage1_iter0, "ap_block_state2_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter1, "ap_block_state4_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter2, "ap_block_state6_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter3, "ap_block_state8_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage1_iter4, "ap_block_state10_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage1_iter5, "ap_block_state12_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage1_iter6, "ap_block_state14_pp0_stage1_iter6");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage1_iter7, "ap_block_state16_pp0_stage1_iter7");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage1_iter8, "ap_block_state18_pp0_stage1_iter8");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage1_iter9, "ap_block_state20_pp0_stage1_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, pol_read_read_fu_92_p2, "pol_read_read_fu_92_p2");
    sc_trace(mVcdFile, pol_read_reg_446, "pol_read_reg_446");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter3, "ap_block_state7_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter4, "ap_block_state9_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter5, "ap_block_state11_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter6, "ap_block_state13_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter7, "ap_block_state15_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter8, "ap_block_state17_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter9, "ap_block_state19_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter10, "ap_block_state21_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter1_reg, "pol_read_reg_446_pp0_iter1_reg");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter2_reg, "pol_read_reg_446_pp0_iter2_reg");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter3_reg, "pol_read_reg_446_pp0_iter3_reg");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter4_reg, "pol_read_reg_446_pp0_iter4_reg");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter5_reg, "pol_read_reg_446_pp0_iter5_reg");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter6_reg, "pol_read_reg_446_pp0_iter6_reg");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter7_reg, "pol_read_reg_446_pp0_iter7_reg");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter8_reg, "pol_read_reg_446_pp0_iter8_reg");
    sc_trace(mVcdFile, pol_read_reg_446_pp0_iter9_reg, "pol_read_reg_446_pp0_iter9_reg");
    sc_trace(mVcdFile, tmp_17_fu_302_p1, "tmp_17_fu_302_p1");
    sc_trace(mVcdFile, mul_fu_440_p2, "mul_fu_440_p2");
    sc_trace(mVcdFile, mul_reg_455, "mul_reg_455");
    sc_trace(mVcdFile, y_read_reg_460, "y_read_reg_460");
    sc_trace(mVcdFile, y_read_reg_460_pp0_iter1_reg, "y_read_reg_460_pp0_iter1_reg");
    sc_trace(mVcdFile, y_read_reg_460_pp0_iter2_reg, "y_read_reg_460_pp0_iter2_reg");
    sc_trace(mVcdFile, y_read_reg_460_pp0_iter3_reg, "y_read_reg_460_pp0_iter3_reg");
    sc_trace(mVcdFile, y_read_reg_460_pp0_iter4_reg, "y_read_reg_460_pp0_iter4_reg");
    sc_trace(mVcdFile, y_read_reg_460_pp0_iter5_reg, "y_read_reg_460_pp0_iter5_reg");
    sc_trace(mVcdFile, y_read_reg_460_pp0_iter6_reg, "y_read_reg_460_pp0_iter6_reg");
    sc_trace(mVcdFile, y_read_reg_460_pp0_iter7_reg, "y_read_reg_460_pp0_iter7_reg");
    sc_trace(mVcdFile, y_read_reg_460_pp0_iter8_reg, "y_read_reg_460_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_18_reg_466, "tmp_18_reg_466");
    sc_trace(mVcdFile, tmp_18_reg_466_pp0_iter1_reg, "tmp_18_reg_466_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_18_reg_466_pp0_iter2_reg, "tmp_18_reg_466_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_18_reg_466_pp0_iter3_reg, "tmp_18_reg_466_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_18_reg_466_pp0_iter4_reg, "tmp_18_reg_466_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_18_reg_466_pp0_iter5_reg, "tmp_18_reg_466_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_18_reg_466_pp0_iter6_reg, "tmp_18_reg_466_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_18_reg_466_pp0_iter7_reg, "tmp_18_reg_466_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_18_reg_466_pp0_iter8_reg, "tmp_18_reg_466_pp0_iter8_reg");
    sc_trace(mVcdFile, grp_fu_310_p2, "grp_fu_310_p2");
    sc_trace(mVcdFile, newIndex_reg_471, "newIndex_reg_471");
    sc_trace(mVcdFile, arrayNo_fu_345_p1, "arrayNo_fu_345_p1");
    sc_trace(mVcdFile, arrayNo_reg_476, "arrayNo_reg_476");
    sc_trace(mVcdFile, glPLSlices_0_addr_reg_481, "glPLSlices_0_addr_reg_481");
    sc_trace(mVcdFile, glPLSlices_1_addr_reg_486, "glPLSlices_1_addr_reg_486");
    sc_trace(mVcdFile, glPLSlices_10_addr_reg_491, "glPLSlices_10_addr_reg_491");
    sc_trace(mVcdFile, glPLSlices_11_addr_reg_496, "glPLSlices_11_addr_reg_496");
    sc_trace(mVcdFile, glPLSlices_12_addr_reg_501, "glPLSlices_12_addr_reg_501");
    sc_trace(mVcdFile, glPLSlices_13_addr_reg_506, "glPLSlices_13_addr_reg_506");
    sc_trace(mVcdFile, glPLSlices_14_addr_reg_511, "glPLSlices_14_addr_reg_511");
    sc_trace(mVcdFile, glPLSlices_15_addr_reg_516, "glPLSlices_15_addr_reg_516");
    sc_trace(mVcdFile, glPLSlices_2_addr_reg_521, "glPLSlices_2_addr_reg_521");
    sc_trace(mVcdFile, glPLSlices_3_addr_reg_526, "glPLSlices_3_addr_reg_526");
    sc_trace(mVcdFile, glPLSlices_4_addr_reg_531, "glPLSlices_4_addr_reg_531");
    sc_trace(mVcdFile, glPLSlices_5_addr_reg_536, "glPLSlices_5_addr_reg_536");
    sc_trace(mVcdFile, glPLSlices_6_addr_reg_541, "glPLSlices_6_addr_reg_541");
    sc_trace(mVcdFile, glPLSlices_7_addr_reg_546, "glPLSlices_7_addr_reg_546");
    sc_trace(mVcdFile, glPLSlices_8_addr_reg_551, "glPLSlices_8_addr_reg_551");
    sc_trace(mVcdFile, glPLSlices_9_addr_reg_556, "glPLSlices_9_addr_reg_556");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0_reg, "ap_enable_reg_pp0_iter0_reg");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_port_reg_y, "ap_port_reg_y");
    sc_trace(mVcdFile, tmp_24_cast_fu_357_p1, "tmp_24_cast_fu_357_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_3_fu_418_p2, "tmp_3_fu_418_p2");
    sc_trace(mVcdFile, grp_fu_310_p1, "grp_fu_310_p1");
    sc_trace(mVcdFile, tmp_16_fu_328_p1, "tmp_16_fu_328_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_331_p3, "p_shl_cast_fu_331_p3");
    sc_trace(mVcdFile, tmp_15_fu_325_p1, "tmp_15_fu_325_p1");
    sc_trace(mVcdFile, tmp_19_fu_348_p1, "tmp_19_fu_348_p1");
    sc_trace(mVcdFile, tmp_s_fu_339_p2, "tmp_s_fu_339_p2");
    sc_trace(mVcdFile, tmp_20_fu_351_p2, "tmp_20_fu_351_p2");
    sc_trace(mVcdFile, tmp_fu_380_p17, "tmp_fu_380_p17");
    sc_trace(mVcdFile, tmp_fu_380_p18, "tmp_fu_380_p18");
    sc_trace(mVcdFile, mul_fu_440_p0, "mul_fu_440_p0");
    sc_trace(mVcdFile, mul_fu_440_p1, "mul_fu_440_p1");
    sc_trace(mVcdFile, grp_fu_310_ce, "grp_fu_310_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to9, "ap_idle_pp0_0to9");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0_1to10, "ap_idle_pp0_1to10");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, mul_fu_440_p10, "mul_fu_440_p10");
#endif

    }
}

a0_accumulateHW::~a0_accumulateHW() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete parseEvents_urem_bkb_U17;
    delete parseEvents_mux_1cud_U18;
    delete parseEvents_mul_mdEe_U19;
}

void a0_accumulateHW::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) {
            ap_enable_reg_pp0_iter0_reg = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter9.read(), ap_const_logic_0) && 
                    esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter10 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_port_reg_y = y.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1))) {
        arrayNo_reg_476 = arrayNo_fu_345_p1.read();
        glPLSlices_0_addr_reg_481 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_10_addr_reg_491 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_11_addr_reg_496 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_12_addr_reg_501 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_13_addr_reg_506 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_14_addr_reg_511 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_15_addr_reg_516 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_1_addr_reg_486 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_2_addr_reg_521 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_3_addr_reg_526 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_4_addr_reg_531 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_5_addr_reg_536 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_6_addr_reg_541 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_7_addr_reg_546 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_8_addr_reg_551 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
        glPLSlices_9_addr_reg_556 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(pol_read_read_fu_92_p2.read(), ap_const_lv1_1))) {
        mul_reg_455 = mul_fu_440_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter8_reg.read(), ap_const_lv1_1))) {
        newIndex_reg_471 = grp_fu_310_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        pol_read_reg_446 =  (sc_lv<1>) (pol.read());
        pol_read_reg_446_pp0_iter1_reg = pol_read_reg_446.read();
        pol_read_reg_446_pp0_iter2_reg = pol_read_reg_446_pp0_iter1_reg.read();
        pol_read_reg_446_pp0_iter3_reg = pol_read_reg_446_pp0_iter2_reg.read();
        pol_read_reg_446_pp0_iter4_reg = pol_read_reg_446_pp0_iter3_reg.read();
        pol_read_reg_446_pp0_iter5_reg = pol_read_reg_446_pp0_iter4_reg.read();
        pol_read_reg_446_pp0_iter6_reg = pol_read_reg_446_pp0_iter5_reg.read();
        pol_read_reg_446_pp0_iter7_reg = pol_read_reg_446_pp0_iter6_reg.read();
        pol_read_reg_446_pp0_iter8_reg = pol_read_reg_446_pp0_iter7_reg.read();
        pol_read_reg_446_pp0_iter9_reg = pol_read_reg_446_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(pol_read_reg_446.read(), ap_const_lv1_1))) {
        tmp_18_reg_466 = mul_reg_455.read().range(31, 19);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        tmp_18_reg_466_pp0_iter1_reg = tmp_18_reg_466.read();
        tmp_18_reg_466_pp0_iter2_reg = tmp_18_reg_466_pp0_iter1_reg.read();
        tmp_18_reg_466_pp0_iter3_reg = tmp_18_reg_466_pp0_iter2_reg.read();
        tmp_18_reg_466_pp0_iter4_reg = tmp_18_reg_466_pp0_iter3_reg.read();
        tmp_18_reg_466_pp0_iter5_reg = tmp_18_reg_466_pp0_iter4_reg.read();
        tmp_18_reg_466_pp0_iter6_reg = tmp_18_reg_466_pp0_iter5_reg.read();
        tmp_18_reg_466_pp0_iter7_reg = tmp_18_reg_466_pp0_iter6_reg.read();
        tmp_18_reg_466_pp0_iter8_reg = tmp_18_reg_466_pp0_iter7_reg.read();
        y_read_reg_460 = ap_port_reg_y.read();
        y_read_reg_460_pp0_iter1_reg = y_read_reg_460.read();
        y_read_reg_460_pp0_iter2_reg = y_read_reg_460_pp0_iter1_reg.read();
        y_read_reg_460_pp0_iter3_reg = y_read_reg_460_pp0_iter2_reg.read();
        y_read_reg_460_pp0_iter4_reg = y_read_reg_460_pp0_iter3_reg.read();
        y_read_reg_460_pp0_iter5_reg = y_read_reg_460_pp0_iter4_reg.read();
        y_read_reg_460_pp0_iter6_reg = y_read_reg_460_pp0_iter5_reg.read();
        y_read_reg_460_pp0_iter7_reg = y_read_reg_460_pp0_iter6_reg.read();
        y_read_reg_460_pp0_iter8_reg = y_read_reg_460_pp0_iter7_reg.read();
    }
}

void a0_accumulateHW::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void a0_accumulateHW::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[1];
}

void a0_accumulateHW::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()));
}

void a0_accumulateHW::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())));
}

void a0_accumulateHW::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0);
}

void a0_accumulateHW::thread_ap_block_state10_pp0_stage1_iter4() {
    ap_block_state10_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state11_pp0_stage0_iter5() {
    ap_block_state11_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state12_pp0_stage1_iter5() {
    ap_block_state12_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state13_pp0_stage0_iter6() {
    ap_block_state13_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state14_pp0_stage1_iter6() {
    ap_block_state14_pp0_stage1_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state15_pp0_stage0_iter7() {
    ap_block_state15_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state16_pp0_stage1_iter7() {
    ap_block_state16_pp0_stage1_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state17_pp0_stage0_iter8() {
    ap_block_state17_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state18_pp0_stage1_iter8() {
    ap_block_state18_pp0_stage1_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state19_pp0_stage0_iter9() {
    ap_block_state19_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0);
}

void a0_accumulateHW::thread_ap_block_state20_pp0_stage1_iter9() {
    ap_block_state20_pp0_stage1_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state21_pp0_stage0_iter10() {
    ap_block_state21_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state2_pp0_stage1_iter0() {
    ap_block_state2_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state4_pp0_stage1_iter1() {
    ap_block_state4_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state6_pp0_stage1_iter2() {
    ap_block_state6_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state7_pp0_stage0_iter3() {
    ap_block_state7_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state8_pp0_stage1_iter3() {
    ap_block_state8_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_block_state9_pp0_stage0_iter4() {
    ap_block_state9_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_accumulateHW::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void a0_accumulateHW::thread_ap_enable_reg_pp0_iter0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) {
        ap_enable_reg_pp0_iter0 = ap_start.read();
    } else {
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg.read();
    }
}

void a0_accumulateHW::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_ap_idle_pp0_0to9() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()))) {
        ap_idle_pp0_0to9 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to9 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_ap_idle_pp0_1to10() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()))) {
        ap_idle_pp0_1to10 = ap_const_logic_1;
    } else {
        ap_idle_pp0_1to10 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to9.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_arrayNo_fu_345_p1() {
    arrayNo_fu_345_p1 = esl_sext<15,13>(tmp_18_reg_466_pp0_iter8_reg.read());
}

void a0_accumulateHW::thread_glPLSlices_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_0_address0 = glPLSlices_0_addr_reg_481.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_0_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_0_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_0_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_0_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_0_d0() {
    glPLSlices_0_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_0))) {
        glPLSlices_0_we0 = ap_const_logic_1;
    } else {
        glPLSlices_0_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_10_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_10_address0 = glPLSlices_10_addr_reg_491.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_10_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_10_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_10_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_10_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_10_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_10_d0() {
    glPLSlices_10_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_10_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_A))) {
        glPLSlices_10_we0 = ap_const_logic_1;
    } else {
        glPLSlices_10_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_11_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_11_address0 = glPLSlices_11_addr_reg_496.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_11_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_11_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_11_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_11_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_11_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_11_d0() {
    glPLSlices_11_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_11_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_B))) {
        glPLSlices_11_we0 = ap_const_logic_1;
    } else {
        glPLSlices_11_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_12_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_12_address0 = glPLSlices_12_addr_reg_501.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_12_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_12_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_12_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_12_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_12_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_12_d0() {
    glPLSlices_12_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_12_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_C))) {
        glPLSlices_12_we0 = ap_const_logic_1;
    } else {
        glPLSlices_12_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_13_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_13_address0 = glPLSlices_13_addr_reg_506.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_13_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_13_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_13_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_13_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_13_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_13_d0() {
    glPLSlices_13_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_13_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_D))) {
        glPLSlices_13_we0 = ap_const_logic_1;
    } else {
        glPLSlices_13_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_14_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_14_address0 = glPLSlices_14_addr_reg_511.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_14_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_14_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_14_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_14_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_14_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_14_d0() {
    glPLSlices_14_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_14_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_E))) {
        glPLSlices_14_we0 = ap_const_logic_1;
    } else {
        glPLSlices_14_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_15_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_15_address0 = glPLSlices_15_addr_reg_516.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_15_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_15_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_15_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_15_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_15_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_15_d0() {
    glPLSlices_15_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_15_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_0) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_1) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_2) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_3) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_4) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_5) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_6) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_7) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_8) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_9) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_A) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_B) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_C) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_D) && 
         !esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_E))) {
        glPLSlices_15_we0 = ap_const_logic_1;
    } else {
        glPLSlices_15_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_1_address0 = glPLSlices_1_addr_reg_486.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_1_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_1_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_1_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_1_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_1_d0() {
    glPLSlices_1_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_1))) {
        glPLSlices_1_we0 = ap_const_logic_1;
    } else {
        glPLSlices_1_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_2_address0 = glPLSlices_2_addr_reg_521.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_2_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_2_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_2_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_2_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_2_d0() {
    glPLSlices_2_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_2))) {
        glPLSlices_2_we0 = ap_const_logic_1;
    } else {
        glPLSlices_2_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_3_address0 = glPLSlices_3_addr_reg_526.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_3_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_3_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_3_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_3_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_3_d0() {
    glPLSlices_3_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_3))) {
        glPLSlices_3_we0 = ap_const_logic_1;
    } else {
        glPLSlices_3_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_4_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_4_address0 = glPLSlices_4_addr_reg_531.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_4_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_4_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_4_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_4_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_4_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_4_d0() {
    glPLSlices_4_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_4))) {
        glPLSlices_4_we0 = ap_const_logic_1;
    } else {
        glPLSlices_4_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_5_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_5_address0 = glPLSlices_5_addr_reg_536.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_5_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_5_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_5_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_5_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_5_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_5_d0() {
    glPLSlices_5_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_5))) {
        glPLSlices_5_we0 = ap_const_logic_1;
    } else {
        glPLSlices_5_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_6_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_6_address0 = glPLSlices_6_addr_reg_541.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_6_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_6_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_6_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_6_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_6_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_6_d0() {
    glPLSlices_6_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_6))) {
        glPLSlices_6_we0 = ap_const_logic_1;
    } else {
        glPLSlices_6_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_7_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_7_address0 = glPLSlices_7_addr_reg_546.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_7_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_7_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_7_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_7_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_7_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_7_d0() {
    glPLSlices_7_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_7))) {
        glPLSlices_7_we0 = ap_const_logic_1;
    } else {
        glPLSlices_7_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_8_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_8_address0 = glPLSlices_8_addr_reg_551.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_8_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_8_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_8_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_8_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_8_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_8_d0() {
    glPLSlices_8_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_8_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_8))) {
        glPLSlices_8_we0 = ap_const_logic_1;
    } else {
        glPLSlices_8_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_9_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        glPLSlices_9_address0 = glPLSlices_9_addr_reg_556.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        glPLSlices_9_address0 =  (sc_lv<13>) (tmp_24_cast_fu_357_p1.read());
    } else {
        glPLSlices_9_address0 = "XXXXXXXXXXXXX";
    }
}

void a0_accumulateHW::thread_glPLSlices_9_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        glPLSlices_9_ce0 = ap_const_logic_1;
    } else {
        glPLSlices_9_ce0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_glPLSlices_9_d0() {
    glPLSlices_9_d0 = tmp_3_fu_418_p2.read();
}

void a0_accumulateHW::thread_glPLSlices_9_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(pol_read_reg_446_pp0_iter9_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,15,15>(arrayNo_reg_476.read(), ap_const_lv15_9))) {
        glPLSlices_9_we0 = ap_const_logic_1;
    } else {
        glPLSlices_9_we0 = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_grp_fu_310_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()) && 
         ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
           esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
          (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
           esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))))) {
        grp_fu_310_ce = ap_const_logic_1;
    } else {
        grp_fu_310_ce = ap_const_logic_0;
    }
}

void a0_accumulateHW::thread_grp_fu_310_p1() {
    grp_fu_310_p1 =  (sc_lv<5>) (ap_const_lv15_F);
}

void a0_accumulateHW::thread_mul_fu_440_p0() {
    mul_fu_440_p0 =  (sc_lv<17>) (ap_const_lv32_8889);
}

void a0_accumulateHW::thread_mul_fu_440_p1() {
    mul_fu_440_p1 =  (sc_lv<15>) (mul_fu_440_p10.read());
}

void a0_accumulateHW::thread_mul_fu_440_p10() {
    mul_fu_440_p10 = esl_zext<32,15>(tmp_17_fu_302_p1.read());
}

void a0_accumulateHW::thread_p_shl_cast_fu_331_p3() {
    p_shl_cast_fu_331_p3 = esl_concat<10,4>(tmp_16_fu_328_p1.read(), ap_const_lv4_0);
}

void a0_accumulateHW::thread_pol_read_read_fu_92_p2() {
    pol_read_read_fu_92_p2 =  (sc_lv<1>) (pol.read());
}

void a0_accumulateHW::thread_tmp_15_fu_325_p1() {
    tmp_15_fu_325_p1 = y_read_reg_460_pp0_iter8_reg.read().range(14-1, 0);
}

void a0_accumulateHW::thread_tmp_16_fu_328_p1() {
    tmp_16_fu_328_p1 = y_read_reg_460_pp0_iter8_reg.read().range(10-1, 0);
}

void a0_accumulateHW::thread_tmp_17_fu_302_p1() {
    tmp_17_fu_302_p1 = x.read().range(15-1, 0);
}

void a0_accumulateHW::thread_tmp_19_fu_348_p1() {
    tmp_19_fu_348_p1 = newIndex_reg_471.read().range(14-1, 0);
}

void a0_accumulateHW::thread_tmp_20_fu_351_p2() {
    tmp_20_fu_351_p2 = (!tmp_19_fu_348_p1.read().is_01() || !tmp_s_fu_339_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_19_fu_348_p1.read()) + sc_biguint<14>(tmp_s_fu_339_p2.read()));
}

void a0_accumulateHW::thread_tmp_24_cast_fu_357_p1() {
    tmp_24_cast_fu_357_p1 = esl_sext<32,14>(tmp_20_fu_351_p2.read());
}

void a0_accumulateHW::thread_tmp_3_fu_418_p2() {
    tmp_3_fu_418_p2 = (!ap_const_lv8_1.is_01() || !tmp_fu_380_p18.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(tmp_fu_380_p18.read()));
}

void a0_accumulateHW::thread_tmp_fu_380_p17() {
    tmp_fu_380_p17 = esl_zext<16,15>(arrayNo_reg_476.read());
}

void a0_accumulateHW::thread_tmp_s_fu_339_p2() {
    tmp_s_fu_339_p2 = (!p_shl_cast_fu_331_p3.read().is_01() || !tmp_15_fu_325_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl_cast_fu_331_p3.read()) - sc_biguint<14>(tmp_15_fu_325_p1.read()));
}

void a0_accumulateHW::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_idle_pp0_1to10.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

}

