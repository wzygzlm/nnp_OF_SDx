// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a0_parseEvents.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a0_parseEvents::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic a0_parseEvents::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> a0_parseEvents::ap_ST_fsm_state1 = "1";
const sc_lv<6> a0_parseEvents::ap_ST_fsm_state2 = "10";
const sc_lv<6> a0_parseEvents::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<6> a0_parseEvents::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<6> a0_parseEvents::ap_ST_fsm_state7 = "10000";
const sc_lv<6> a0_parseEvents::ap_ST_fsm_state8 = "100000";
const sc_lv<32> a0_parseEvents::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool a0_parseEvents::ap_const_boolean_1 = true;
const sc_lv<32> a0_parseEvents::ap_const_lv32_3 = "11";
const bool a0_parseEvents::ap_const_boolean_0 = false;
const sc_lv<1> a0_parseEvents::ap_const_lv1_0 = "0";
const int a0_parseEvents::C_M_AXI_EVENTSLICE_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int a0_parseEvents::C_M_AXI_EVENTSLICE_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int a0_parseEvents::C_M_AXI_EVENTSLICE_CACHE_VALUE = "11";
const int a0_parseEvents::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> a0_parseEvents::ap_const_lv32_1 = "1";
const sc_lv<32> a0_parseEvents::ap_const_lv32_2 = "10";
const sc_lv<1> a0_parseEvents::ap_const_lv1_1 = "1";
const sc_lv<32> a0_parseEvents::ap_const_lv32_4 = "100";
const sc_lv<32> a0_parseEvents::ap_const_lv32_5 = "101";
const sc_lv<32> a0_parseEvents::ap_const_lv32_1E = "11110";
const sc_lv<32> a0_parseEvents::ap_const_lv32_1F = "11111";
const sc_lv<32> a0_parseEvents::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<31> a0_parseEvents::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> a0_parseEvents::ap_const_lv32_11 = "10001";
const sc_lv<32> a0_parseEvents::ap_const_lv32_B = "1011";
const sc_lv<8> a0_parseEvents::ap_const_lv8_0 = "00000000";
const sc_lv<32> a0_parseEvents::ap_const_lv32_F = "1111";
const sc_lv<4> a0_parseEvents::ap_const_lv4_0 = "0000";
const sc_lv<8> a0_parseEvents::ap_const_lv8_1 = "1";
const sc_lv<3> a0_parseEvents::ap_const_lv3_0 = "000";
const sc_lv<2> a0_parseEvents::ap_const_lv2_0 = "00";

a0_parseEvents::a0_parseEvents(sc_module_name name) : sc_module(name), mVcdFile(0) {
    glPLSlices_U = new a0_parseEvents_glPLScud("glPLSlices_U");
    glPLSlices_U->clk(ap_clk);
    glPLSlices_U->reset(ap_rst_n_inv);
    glPLSlices_U->address0(glPLSlices_address0);
    glPLSlices_U->ce0(glPLSlices_ce0);
    glPLSlices_U->we0(glPLSlices_we0);
    glPLSlices_U->d0(glPLSlices_d0);
    glPLSlices_U->q0(glPLSlices_q0);
    glPLSlices_U->address1(grp_resetCurrentSliceHW_fu_144_glPLSlices_address1);
    glPLSlices_U->ce1(glPLSlices_ce1);
    glPLSlices_U->we1(glPLSlices_we1);
    glPLSlices_U->d1(grp_resetCurrentSliceHW_fu_144_glPLSlices_d1);
    parseEvents_eventSlice_m_axi_U = new a0_parseEvents_eventSlice_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_EVENTSLICE_ID_WIDTH,C_M_AXI_EVENTSLICE_ADDR_WIDTH,C_M_AXI_EVENTSLICE_DATA_WIDTH,C_M_AXI_EVENTSLICE_AWUSER_WIDTH,C_M_AXI_EVENTSLICE_ARUSER_WIDTH,C_M_AXI_EVENTSLICE_WUSER_WIDTH,C_M_AXI_EVENTSLICE_RUSER_WIDTH,C_M_AXI_EVENTSLICE_BUSER_WIDTH,C_M_AXI_EVENTSLICE_USER_VALUE,C_M_AXI_EVENTSLICE_PROT_VALUE,C_M_AXI_EVENTSLICE_CACHE_VALUE>("parseEvents_eventSlice_m_axi_U");
    parseEvents_eventSlice_m_axi_U->AWVALID(m_axi_eventSlice_AWVALID);
    parseEvents_eventSlice_m_axi_U->AWREADY(m_axi_eventSlice_AWREADY);
    parseEvents_eventSlice_m_axi_U->AWADDR(m_axi_eventSlice_AWADDR);
    parseEvents_eventSlice_m_axi_U->AWID(m_axi_eventSlice_AWID);
    parseEvents_eventSlice_m_axi_U->AWLEN(m_axi_eventSlice_AWLEN);
    parseEvents_eventSlice_m_axi_U->AWSIZE(m_axi_eventSlice_AWSIZE);
    parseEvents_eventSlice_m_axi_U->AWBURST(m_axi_eventSlice_AWBURST);
    parseEvents_eventSlice_m_axi_U->AWLOCK(m_axi_eventSlice_AWLOCK);
    parseEvents_eventSlice_m_axi_U->AWCACHE(m_axi_eventSlice_AWCACHE);
    parseEvents_eventSlice_m_axi_U->AWPROT(m_axi_eventSlice_AWPROT);
    parseEvents_eventSlice_m_axi_U->AWQOS(m_axi_eventSlice_AWQOS);
    parseEvents_eventSlice_m_axi_U->AWREGION(m_axi_eventSlice_AWREGION);
    parseEvents_eventSlice_m_axi_U->AWUSER(m_axi_eventSlice_AWUSER);
    parseEvents_eventSlice_m_axi_U->WVALID(m_axi_eventSlice_WVALID);
    parseEvents_eventSlice_m_axi_U->WREADY(m_axi_eventSlice_WREADY);
    parseEvents_eventSlice_m_axi_U->WDATA(m_axi_eventSlice_WDATA);
    parseEvents_eventSlice_m_axi_U->WSTRB(m_axi_eventSlice_WSTRB);
    parseEvents_eventSlice_m_axi_U->WLAST(m_axi_eventSlice_WLAST);
    parseEvents_eventSlice_m_axi_U->WID(m_axi_eventSlice_WID);
    parseEvents_eventSlice_m_axi_U->WUSER(m_axi_eventSlice_WUSER);
    parseEvents_eventSlice_m_axi_U->ARVALID(m_axi_eventSlice_ARVALID);
    parseEvents_eventSlice_m_axi_U->ARREADY(m_axi_eventSlice_ARREADY);
    parseEvents_eventSlice_m_axi_U->ARADDR(m_axi_eventSlice_ARADDR);
    parseEvents_eventSlice_m_axi_U->ARID(m_axi_eventSlice_ARID);
    parseEvents_eventSlice_m_axi_U->ARLEN(m_axi_eventSlice_ARLEN);
    parseEvents_eventSlice_m_axi_U->ARSIZE(m_axi_eventSlice_ARSIZE);
    parseEvents_eventSlice_m_axi_U->ARBURST(m_axi_eventSlice_ARBURST);
    parseEvents_eventSlice_m_axi_U->ARLOCK(m_axi_eventSlice_ARLOCK);
    parseEvents_eventSlice_m_axi_U->ARCACHE(m_axi_eventSlice_ARCACHE);
    parseEvents_eventSlice_m_axi_U->ARPROT(m_axi_eventSlice_ARPROT);
    parseEvents_eventSlice_m_axi_U->ARQOS(m_axi_eventSlice_ARQOS);
    parseEvents_eventSlice_m_axi_U->ARREGION(m_axi_eventSlice_ARREGION);
    parseEvents_eventSlice_m_axi_U->ARUSER(m_axi_eventSlice_ARUSER);
    parseEvents_eventSlice_m_axi_U->RVALID(m_axi_eventSlice_RVALID);
    parseEvents_eventSlice_m_axi_U->RREADY(m_axi_eventSlice_RREADY);
    parseEvents_eventSlice_m_axi_U->RDATA(m_axi_eventSlice_RDATA);
    parseEvents_eventSlice_m_axi_U->RLAST(m_axi_eventSlice_RLAST);
    parseEvents_eventSlice_m_axi_U->RID(m_axi_eventSlice_RID);
    parseEvents_eventSlice_m_axi_U->RUSER(m_axi_eventSlice_RUSER);
    parseEvents_eventSlice_m_axi_U->RRESP(m_axi_eventSlice_RRESP);
    parseEvents_eventSlice_m_axi_U->BVALID(m_axi_eventSlice_BVALID);
    parseEvents_eventSlice_m_axi_U->BREADY(m_axi_eventSlice_BREADY);
    parseEvents_eventSlice_m_axi_U->BRESP(m_axi_eventSlice_BRESP);
    parseEvents_eventSlice_m_axi_U->BID(m_axi_eventSlice_BID);
    parseEvents_eventSlice_m_axi_U->BUSER(m_axi_eventSlice_BUSER);
    parseEvents_eventSlice_m_axi_U->ACLK(ap_clk);
    parseEvents_eventSlice_m_axi_U->ARESET(ap_rst_n_inv);
    parseEvents_eventSlice_m_axi_U->ACLK_EN(ap_var_for_const0);
    parseEvents_eventSlice_m_axi_U->I_ARVALID(ap_var_for_const1);
    parseEvents_eventSlice_m_axi_U->I_ARREADY(eventSlice_ARREADY);
    parseEvents_eventSlice_m_axi_U->I_ARADDR(ap_var_for_const2);
    parseEvents_eventSlice_m_axi_U->I_ARID(ap_var_for_const3);
    parseEvents_eventSlice_m_axi_U->I_ARLEN(ap_var_for_const2);
    parseEvents_eventSlice_m_axi_U->I_ARSIZE(ap_var_for_const4);
    parseEvents_eventSlice_m_axi_U->I_ARLOCK(ap_var_for_const5);
    parseEvents_eventSlice_m_axi_U->I_ARCACHE(ap_var_for_const6);
    parseEvents_eventSlice_m_axi_U->I_ARQOS(ap_var_for_const6);
    parseEvents_eventSlice_m_axi_U->I_ARPROT(ap_var_for_const4);
    parseEvents_eventSlice_m_axi_U->I_ARUSER(ap_var_for_const3);
    parseEvents_eventSlice_m_axi_U->I_ARBURST(ap_var_for_const5);
    parseEvents_eventSlice_m_axi_U->I_ARREGION(ap_var_for_const6);
    parseEvents_eventSlice_m_axi_U->I_RVALID(eventSlice_RVALID);
    parseEvents_eventSlice_m_axi_U->I_RREADY(ap_var_for_const1);
    parseEvents_eventSlice_m_axi_U->I_RDATA(eventSlice_RDATA);
    parseEvents_eventSlice_m_axi_U->I_RID(eventSlice_RID);
    parseEvents_eventSlice_m_axi_U->I_RUSER(eventSlice_RUSER);
    parseEvents_eventSlice_m_axi_U->I_RRESP(eventSlice_RRESP);
    parseEvents_eventSlice_m_axi_U->I_RLAST(eventSlice_RLAST);
    parseEvents_eventSlice_m_axi_U->I_AWVALID(eventSlice_AWVALID);
    parseEvents_eventSlice_m_axi_U->I_AWREADY(eventSlice_AWREADY);
    parseEvents_eventSlice_m_axi_U->I_AWADDR(grp_copyToPS_fu_150_m_axi_eventSlice_AWADDR);
    parseEvents_eventSlice_m_axi_U->I_AWID(grp_copyToPS_fu_150_m_axi_eventSlice_AWID);
    parseEvents_eventSlice_m_axi_U->I_AWLEN(grp_copyToPS_fu_150_m_axi_eventSlice_AWLEN);
    parseEvents_eventSlice_m_axi_U->I_AWSIZE(grp_copyToPS_fu_150_m_axi_eventSlice_AWSIZE);
    parseEvents_eventSlice_m_axi_U->I_AWLOCK(grp_copyToPS_fu_150_m_axi_eventSlice_AWLOCK);
    parseEvents_eventSlice_m_axi_U->I_AWCACHE(grp_copyToPS_fu_150_m_axi_eventSlice_AWCACHE);
    parseEvents_eventSlice_m_axi_U->I_AWQOS(grp_copyToPS_fu_150_m_axi_eventSlice_AWQOS);
    parseEvents_eventSlice_m_axi_U->I_AWPROT(grp_copyToPS_fu_150_m_axi_eventSlice_AWPROT);
    parseEvents_eventSlice_m_axi_U->I_AWUSER(grp_copyToPS_fu_150_m_axi_eventSlice_AWUSER);
    parseEvents_eventSlice_m_axi_U->I_AWBURST(grp_copyToPS_fu_150_m_axi_eventSlice_AWBURST);
    parseEvents_eventSlice_m_axi_U->I_AWREGION(grp_copyToPS_fu_150_m_axi_eventSlice_AWREGION);
    parseEvents_eventSlice_m_axi_U->I_WVALID(eventSlice_WVALID);
    parseEvents_eventSlice_m_axi_U->I_WREADY(eventSlice_WREADY);
    parseEvents_eventSlice_m_axi_U->I_WDATA(grp_copyToPS_fu_150_m_axi_eventSlice_WDATA);
    parseEvents_eventSlice_m_axi_U->I_WID(grp_copyToPS_fu_150_m_axi_eventSlice_WID);
    parseEvents_eventSlice_m_axi_U->I_WUSER(grp_copyToPS_fu_150_m_axi_eventSlice_WUSER);
    parseEvents_eventSlice_m_axi_U->I_WLAST(grp_copyToPS_fu_150_m_axi_eventSlice_WLAST);
    parseEvents_eventSlice_m_axi_U->I_WSTRB(grp_copyToPS_fu_150_m_axi_eventSlice_WSTRB);
    parseEvents_eventSlice_m_axi_U->I_BVALID(eventSlice_BVALID);
    parseEvents_eventSlice_m_axi_U->I_BREADY(eventSlice_BREADY);
    parseEvents_eventSlice_m_axi_U->I_BRESP(eventSlice_BRESP);
    parseEvents_eventSlice_m_axi_U->I_BID(eventSlice_BID);
    parseEvents_eventSlice_m_axi_U->I_BUSER(eventSlice_BUSER);
    grp_resetCurrentSliceHW_fu_144 = new a0_resetCurrentSliceHW("grp_resetCurrentSliceHW_fu_144");
    grp_resetCurrentSliceHW_fu_144->ap_clk(ap_clk);
    grp_resetCurrentSliceHW_fu_144->ap_rst(ap_rst_n_inv);
    grp_resetCurrentSliceHW_fu_144->ap_start(grp_resetCurrentSliceHW_fu_144_ap_start);
    grp_resetCurrentSliceHW_fu_144->ap_done(grp_resetCurrentSliceHW_fu_144_ap_done);
    grp_resetCurrentSliceHW_fu_144->ap_idle(grp_resetCurrentSliceHW_fu_144_ap_idle);
    grp_resetCurrentSliceHW_fu_144->ap_ready(grp_resetCurrentSliceHW_fu_144_ap_ready);
    grp_resetCurrentSliceHW_fu_144->glPLSlices_address0(grp_resetCurrentSliceHW_fu_144_glPLSlices_address0);
    grp_resetCurrentSliceHW_fu_144->glPLSlices_ce0(grp_resetCurrentSliceHW_fu_144_glPLSlices_ce0);
    grp_resetCurrentSliceHW_fu_144->glPLSlices_we0(grp_resetCurrentSliceHW_fu_144_glPLSlices_we0);
    grp_resetCurrentSliceHW_fu_144->glPLSlices_d0(grp_resetCurrentSliceHW_fu_144_glPLSlices_d0);
    grp_resetCurrentSliceHW_fu_144->glPLSlices_address1(grp_resetCurrentSliceHW_fu_144_glPLSlices_address1);
    grp_resetCurrentSliceHW_fu_144->glPLSlices_ce1(grp_resetCurrentSliceHW_fu_144_glPLSlices_ce1);
    grp_resetCurrentSliceHW_fu_144->glPLSlices_we1(grp_resetCurrentSliceHW_fu_144_glPLSlices_we1);
    grp_resetCurrentSliceHW_fu_144->glPLSlices_d1(grp_resetCurrentSliceHW_fu_144_glPLSlices_d1);
    grp_copyToPS_fu_150 = new a0_copyToPS("grp_copyToPS_fu_150");
    grp_copyToPS_fu_150->ap_clk(ap_clk);
    grp_copyToPS_fu_150->ap_rst(ap_rst_n_inv);
    grp_copyToPS_fu_150->ap_start(grp_copyToPS_fu_150_ap_start);
    grp_copyToPS_fu_150->ap_done(grp_copyToPS_fu_150_ap_done);
    grp_copyToPS_fu_150->ap_idle(grp_copyToPS_fu_150_ap_idle);
    grp_copyToPS_fu_150->ap_ready(grp_copyToPS_fu_150_ap_ready);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWVALID(grp_copyToPS_fu_150_m_axi_eventSlice_AWVALID);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWREADY(eventSlice_AWREADY);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWADDR(grp_copyToPS_fu_150_m_axi_eventSlice_AWADDR);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWID(grp_copyToPS_fu_150_m_axi_eventSlice_AWID);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWLEN(grp_copyToPS_fu_150_m_axi_eventSlice_AWLEN);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWSIZE(grp_copyToPS_fu_150_m_axi_eventSlice_AWSIZE);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWBURST(grp_copyToPS_fu_150_m_axi_eventSlice_AWBURST);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWLOCK(grp_copyToPS_fu_150_m_axi_eventSlice_AWLOCK);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWCACHE(grp_copyToPS_fu_150_m_axi_eventSlice_AWCACHE);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWPROT(grp_copyToPS_fu_150_m_axi_eventSlice_AWPROT);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWQOS(grp_copyToPS_fu_150_m_axi_eventSlice_AWQOS);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWREGION(grp_copyToPS_fu_150_m_axi_eventSlice_AWREGION);
    grp_copyToPS_fu_150->m_axi_eventSlice_AWUSER(grp_copyToPS_fu_150_m_axi_eventSlice_AWUSER);
    grp_copyToPS_fu_150->m_axi_eventSlice_WVALID(grp_copyToPS_fu_150_m_axi_eventSlice_WVALID);
    grp_copyToPS_fu_150->m_axi_eventSlice_WREADY(eventSlice_WREADY);
    grp_copyToPS_fu_150->m_axi_eventSlice_WDATA(grp_copyToPS_fu_150_m_axi_eventSlice_WDATA);
    grp_copyToPS_fu_150->m_axi_eventSlice_WSTRB(grp_copyToPS_fu_150_m_axi_eventSlice_WSTRB);
    grp_copyToPS_fu_150->m_axi_eventSlice_WLAST(grp_copyToPS_fu_150_m_axi_eventSlice_WLAST);
    grp_copyToPS_fu_150->m_axi_eventSlice_WID(grp_copyToPS_fu_150_m_axi_eventSlice_WID);
    grp_copyToPS_fu_150->m_axi_eventSlice_WUSER(grp_copyToPS_fu_150_m_axi_eventSlice_WUSER);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARVALID(grp_copyToPS_fu_150_m_axi_eventSlice_ARVALID);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARREADY(ap_var_for_const1);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARADDR(grp_copyToPS_fu_150_m_axi_eventSlice_ARADDR);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARID(grp_copyToPS_fu_150_m_axi_eventSlice_ARID);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARLEN(grp_copyToPS_fu_150_m_axi_eventSlice_ARLEN);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARSIZE(grp_copyToPS_fu_150_m_axi_eventSlice_ARSIZE);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARBURST(grp_copyToPS_fu_150_m_axi_eventSlice_ARBURST);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARLOCK(grp_copyToPS_fu_150_m_axi_eventSlice_ARLOCK);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARCACHE(grp_copyToPS_fu_150_m_axi_eventSlice_ARCACHE);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARPROT(grp_copyToPS_fu_150_m_axi_eventSlice_ARPROT);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARQOS(grp_copyToPS_fu_150_m_axi_eventSlice_ARQOS);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARREGION(grp_copyToPS_fu_150_m_axi_eventSlice_ARREGION);
    grp_copyToPS_fu_150->m_axi_eventSlice_ARUSER(grp_copyToPS_fu_150_m_axi_eventSlice_ARUSER);
    grp_copyToPS_fu_150->m_axi_eventSlice_RVALID(ap_var_for_const1);
    grp_copyToPS_fu_150->m_axi_eventSlice_RREADY(grp_copyToPS_fu_150_m_axi_eventSlice_RREADY);
    grp_copyToPS_fu_150->m_axi_eventSlice_RDATA(ap_var_for_const7);
    grp_copyToPS_fu_150->m_axi_eventSlice_RLAST(ap_var_for_const1);
    grp_copyToPS_fu_150->m_axi_eventSlice_RID(ap_var_for_const3);
    grp_copyToPS_fu_150->m_axi_eventSlice_RUSER(ap_var_for_const3);
    grp_copyToPS_fu_150->m_axi_eventSlice_RRESP(ap_var_for_const5);
    grp_copyToPS_fu_150->m_axi_eventSlice_BVALID(eventSlice_BVALID);
    grp_copyToPS_fu_150->m_axi_eventSlice_BREADY(grp_copyToPS_fu_150_m_axi_eventSlice_BREADY);
    grp_copyToPS_fu_150->m_axi_eventSlice_BRESP(eventSlice_BRESP);
    grp_copyToPS_fu_150->m_axi_eventSlice_BID(eventSlice_BID);
    grp_copyToPS_fu_150->m_axi_eventSlice_BUSER(eventSlice_BUSER);
    grp_copyToPS_fu_150->eventSlice_offset(eventSlice_offset);
    grp_copyToPS_fu_150->glPLSlices_address0(grp_copyToPS_fu_150_glPLSlices_address0);
    grp_copyToPS_fu_150->glPLSlices_ce0(grp_copyToPS_fu_150_glPLSlices_ce0);
    grp_copyToPS_fu_150->glPLSlices_q0(glPLSlices_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( data_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_reg_343 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( data_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_reg_343 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);
    sensitive << ( data_empty_n );
    sensitive << ( tmp_8_reg_343 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( tmp_8_fu_243_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_copyToPS_fu_150_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_136_p4);
    sensitive << ( tmp_8_reg_343 );
    sensitive << ( i_reg_132 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_2_reg_358 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_copyToPS_fu_150_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data_blk_n);
    sensitive << ( data_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_8_reg_343 );

    SC_METHOD(thread_data_read);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_reg_343 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_eventSlice_AWVALID);
    sensitive << ( grp_copyToPS_fu_150_m_axi_eventSlice_AWVALID );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_eventSlice_BREADY);
    sensitive << ( grp_copyToPS_fu_150_m_axi_eventSlice_BREADY );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_eventSlice_WVALID);
    sensitive << ( grp_copyToPS_fu_150_m_axi_eventSlice_WVALID );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( glPLSlices_addr_reg_363 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_resetCurrentSliceHW_fu_144_glPLSlices_address0 );
    sensitive << ( grp_copyToPS_fu_150_glPLSlices_address0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_250_cast_fu_321_p1 );

    SC_METHOD(thread_glPLSlices_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_resetCurrentSliceHW_fu_144_glPLSlices_ce0 );
    sensitive << ( grp_copyToPS_fu_150_glPLSlices_ce0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_glPLSlices_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_resetCurrentSliceHW_fu_144_glPLSlices_ce1 );

    SC_METHOD(thread_glPLSlices_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_resetCurrentSliceHW_fu_144_glPLSlices_d0 );
    sensitive << ( tmp_3_i_fu_326_p2 );

    SC_METHOD(thread_glPLSlices_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_9_reg_354 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_resetCurrentSliceHW_fu_144_glPLSlices_we0 );

    SC_METHOD(thread_glPLSlices_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_resetCurrentSliceHW_fu_144_glPLSlices_we1 );

    SC_METHOD(thread_grp_copyToPS_fu_150_ap_start);
    sensitive << ( grp_copyToPS_fu_150_ap_start_reg );

    SC_METHOD(thread_grp_resetCurrentSliceHW_fu_144_ap_start);
    sensitive << ( grp_resetCurrentSliceHW_fu_144_ap_start_reg );

    SC_METHOD(thread_i_2_fu_256_p2);
    sensitive << ( i_reg_132 );

    SC_METHOD(thread_p_lshr_fu_193_p4);
    sensitive << ( p_neg_fu_187_p2 );

    SC_METHOD(thread_p_neg_fu_187_p2);
    sensitive << ( tmp_fu_159_p2 );

    SC_METHOD(thread_p_neg_t_fu_203_p2);
    sensitive << ( p_lshr_fu_193_p4 );

    SC_METHOD(thread_p_shl3_cast_fu_301_p3);
    sensitive << ( tmp_12_fu_292_p4 );

    SC_METHOD(thread_p_shl_cast_fu_284_p3);
    sensitive << ( tmp_11_fu_275_p4 );

    SC_METHOD(thread_tmp_10_fu_262_p4);
    sensitive << ( data_read_reg_347 );

    SC_METHOD(thread_tmp_11_fu_275_p4);
    sensitive << ( data_read_reg_347 );

    SC_METHOD(thread_tmp_12_fu_292_p4);
    sensitive << ( data_read_reg_347 );

    SC_METHOD(thread_tmp_1_fu_165_p3);
    sensitive << ( eventsArraySize );

    SC_METHOD(thread_tmp_242_fu_315_p2);
    sensitive << ( tmp_i1_cast_fu_271_p1 );
    sensitive << ( tmp_s_fu_309_p2 );

    SC_METHOD(thread_tmp_250_cast_fu_321_p1);
    sensitive << ( tmp_242_fu_315_p2 );

    SC_METHOD(thread_tmp_3_fu_179_p3);
    sensitive << ( tmp_op_op9_fu_173_p2 );

    SC_METHOD(thread_tmp_3_i_fu_326_p2);
    sensitive << ( glPLSlices_q0 );

    SC_METHOD(thread_tmp_4_fu_209_p4);
    sensitive << ( tmp_op_op9_fu_173_p2 );

    SC_METHOD(thread_tmp_5_fu_219_p3);
    sensitive << ( tmp_3_fu_179_p3 );
    sensitive << ( p_neg_t_fu_203_p2 );
    sensitive << ( tmp_4_fu_209_p4 );

    SC_METHOD(thread_tmp_6_fu_227_p3);
    sensitive << ( tmp_1_fu_165_p3 );
    sensitive << ( tmp_5_fu_219_p3 );

    SC_METHOD(thread_tmp_7_fu_235_p3);
    sensitive << ( tmp_6_fu_227_p3 );

    SC_METHOD(thread_tmp_8_fu_243_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_7_reg_338 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_phi_fu_136_p4 );

    SC_METHOD(thread_tmp_fu_159_p2);
    sensitive << ( eventsArraySize );

    SC_METHOD(thread_tmp_i1_cast_fu_271_p1);
    sensitive << ( tmp_10_fu_262_p4 );

    SC_METHOD(thread_tmp_op_op9_fu_173_p2);
    sensitive << ( tmp_fu_159_p2 );

    SC_METHOD(thread_tmp_s_fu_309_p2);
    sensitive << ( p_shl_cast_fu_284_p3 );
    sensitive << ( p_shl3_cast_fu_301_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_resetCurrentSliceHW_fu_144_ap_done );
    sensitive << ( tmp_8_fu_243_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( grp_copyToPS_fu_150_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    grp_resetCurrentSliceHW_fu_144_ap_start_reg = SC_LOGIC_0;
    grp_copyToPS_fu_150_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a0_parseEvents_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_eventSlice_AWVALID, "(port)m_axi_eventSlice_AWVALID");
    sc_trace(mVcdFile, m_axi_eventSlice_AWREADY, "(port)m_axi_eventSlice_AWREADY");
    sc_trace(mVcdFile, m_axi_eventSlice_AWADDR, "(port)m_axi_eventSlice_AWADDR");
    sc_trace(mVcdFile, m_axi_eventSlice_AWID, "(port)m_axi_eventSlice_AWID");
    sc_trace(mVcdFile, m_axi_eventSlice_AWLEN, "(port)m_axi_eventSlice_AWLEN");
    sc_trace(mVcdFile, m_axi_eventSlice_AWSIZE, "(port)m_axi_eventSlice_AWSIZE");
    sc_trace(mVcdFile, m_axi_eventSlice_AWBURST, "(port)m_axi_eventSlice_AWBURST");
    sc_trace(mVcdFile, m_axi_eventSlice_AWLOCK, "(port)m_axi_eventSlice_AWLOCK");
    sc_trace(mVcdFile, m_axi_eventSlice_AWCACHE, "(port)m_axi_eventSlice_AWCACHE");
    sc_trace(mVcdFile, m_axi_eventSlice_AWPROT, "(port)m_axi_eventSlice_AWPROT");
    sc_trace(mVcdFile, m_axi_eventSlice_AWQOS, "(port)m_axi_eventSlice_AWQOS");
    sc_trace(mVcdFile, m_axi_eventSlice_AWREGION, "(port)m_axi_eventSlice_AWREGION");
    sc_trace(mVcdFile, m_axi_eventSlice_AWUSER, "(port)m_axi_eventSlice_AWUSER");
    sc_trace(mVcdFile, m_axi_eventSlice_WVALID, "(port)m_axi_eventSlice_WVALID");
    sc_trace(mVcdFile, m_axi_eventSlice_WREADY, "(port)m_axi_eventSlice_WREADY");
    sc_trace(mVcdFile, m_axi_eventSlice_WDATA, "(port)m_axi_eventSlice_WDATA");
    sc_trace(mVcdFile, m_axi_eventSlice_WSTRB, "(port)m_axi_eventSlice_WSTRB");
    sc_trace(mVcdFile, m_axi_eventSlice_WLAST, "(port)m_axi_eventSlice_WLAST");
    sc_trace(mVcdFile, m_axi_eventSlice_WID, "(port)m_axi_eventSlice_WID");
    sc_trace(mVcdFile, m_axi_eventSlice_WUSER, "(port)m_axi_eventSlice_WUSER");
    sc_trace(mVcdFile, m_axi_eventSlice_ARVALID, "(port)m_axi_eventSlice_ARVALID");
    sc_trace(mVcdFile, m_axi_eventSlice_ARREADY, "(port)m_axi_eventSlice_ARREADY");
    sc_trace(mVcdFile, m_axi_eventSlice_ARADDR, "(port)m_axi_eventSlice_ARADDR");
    sc_trace(mVcdFile, m_axi_eventSlice_ARID, "(port)m_axi_eventSlice_ARID");
    sc_trace(mVcdFile, m_axi_eventSlice_ARLEN, "(port)m_axi_eventSlice_ARLEN");
    sc_trace(mVcdFile, m_axi_eventSlice_ARSIZE, "(port)m_axi_eventSlice_ARSIZE");
    sc_trace(mVcdFile, m_axi_eventSlice_ARBURST, "(port)m_axi_eventSlice_ARBURST");
    sc_trace(mVcdFile, m_axi_eventSlice_ARLOCK, "(port)m_axi_eventSlice_ARLOCK");
    sc_trace(mVcdFile, m_axi_eventSlice_ARCACHE, "(port)m_axi_eventSlice_ARCACHE");
    sc_trace(mVcdFile, m_axi_eventSlice_ARPROT, "(port)m_axi_eventSlice_ARPROT");
    sc_trace(mVcdFile, m_axi_eventSlice_ARQOS, "(port)m_axi_eventSlice_ARQOS");
    sc_trace(mVcdFile, m_axi_eventSlice_ARREGION, "(port)m_axi_eventSlice_ARREGION");
    sc_trace(mVcdFile, m_axi_eventSlice_ARUSER, "(port)m_axi_eventSlice_ARUSER");
    sc_trace(mVcdFile, m_axi_eventSlice_RVALID, "(port)m_axi_eventSlice_RVALID");
    sc_trace(mVcdFile, m_axi_eventSlice_RREADY, "(port)m_axi_eventSlice_RREADY");
    sc_trace(mVcdFile, m_axi_eventSlice_RDATA, "(port)m_axi_eventSlice_RDATA");
    sc_trace(mVcdFile, m_axi_eventSlice_RLAST, "(port)m_axi_eventSlice_RLAST");
    sc_trace(mVcdFile, m_axi_eventSlice_RID, "(port)m_axi_eventSlice_RID");
    sc_trace(mVcdFile, m_axi_eventSlice_RUSER, "(port)m_axi_eventSlice_RUSER");
    sc_trace(mVcdFile, m_axi_eventSlice_RRESP, "(port)m_axi_eventSlice_RRESP");
    sc_trace(mVcdFile, m_axi_eventSlice_BVALID, "(port)m_axi_eventSlice_BVALID");
    sc_trace(mVcdFile, m_axi_eventSlice_BREADY, "(port)m_axi_eventSlice_BREADY");
    sc_trace(mVcdFile, m_axi_eventSlice_BRESP, "(port)m_axi_eventSlice_BRESP");
    sc_trace(mVcdFile, m_axi_eventSlice_BID, "(port)m_axi_eventSlice_BID");
    sc_trace(mVcdFile, m_axi_eventSlice_BUSER, "(port)m_axi_eventSlice_BUSER");
    sc_trace(mVcdFile, data_dout, "(port)data_dout");
    sc_trace(mVcdFile, data_empty_n, "(port)data_empty_n");
    sc_trace(mVcdFile, data_read, "(port)data_read");
    sc_trace(mVcdFile, eventsArraySize, "(port)eventsArraySize");
    sc_trace(mVcdFile, eventSlice_offset, "(port)eventSlice_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, glPLSlices_address0, "glPLSlices_address0");
    sc_trace(mVcdFile, glPLSlices_ce0, "glPLSlices_ce0");
    sc_trace(mVcdFile, glPLSlices_we0, "glPLSlices_we0");
    sc_trace(mVcdFile, glPLSlices_d0, "glPLSlices_d0");
    sc_trace(mVcdFile, glPLSlices_q0, "glPLSlices_q0");
    sc_trace(mVcdFile, glPLSlices_ce1, "glPLSlices_ce1");
    sc_trace(mVcdFile, glPLSlices_we1, "glPLSlices_we1");
    sc_trace(mVcdFile, data_blk_n, "data_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_8_reg_343, "tmp_8_reg_343");
    sc_trace(mVcdFile, eventSlice_AWVALID, "eventSlice_AWVALID");
    sc_trace(mVcdFile, eventSlice_AWREADY, "eventSlice_AWREADY");
    sc_trace(mVcdFile, eventSlice_WVALID, "eventSlice_WVALID");
    sc_trace(mVcdFile, eventSlice_WREADY, "eventSlice_WREADY");
    sc_trace(mVcdFile, eventSlice_ARREADY, "eventSlice_ARREADY");
    sc_trace(mVcdFile, eventSlice_RVALID, "eventSlice_RVALID");
    sc_trace(mVcdFile, eventSlice_RDATA, "eventSlice_RDATA");
    sc_trace(mVcdFile, eventSlice_RLAST, "eventSlice_RLAST");
    sc_trace(mVcdFile, eventSlice_RID, "eventSlice_RID");
    sc_trace(mVcdFile, eventSlice_RUSER, "eventSlice_RUSER");
    sc_trace(mVcdFile, eventSlice_RRESP, "eventSlice_RRESP");
    sc_trace(mVcdFile, eventSlice_BVALID, "eventSlice_BVALID");
    sc_trace(mVcdFile, eventSlice_BREADY, "eventSlice_BREADY");
    sc_trace(mVcdFile, eventSlice_BRESP, "eventSlice_BRESP");
    sc_trace(mVcdFile, eventSlice_BID, "eventSlice_BID");
    sc_trace(mVcdFile, eventSlice_BUSER, "eventSlice_BUSER");
    sc_trace(mVcdFile, i_reg_132, "i_reg_132");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_ap_idle, "grp_resetCurrentSliceHW_fu_144_ap_idle");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_ap_ready, "grp_resetCurrentSliceHW_fu_144_ap_ready");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_ap_done, "grp_resetCurrentSliceHW_fu_144_ap_done");
    sc_trace(mVcdFile, tmp_7_fu_235_p3, "tmp_7_fu_235_p3");
    sc_trace(mVcdFile, tmp_7_reg_338, "tmp_7_reg_338");
    sc_trace(mVcdFile, tmp_8_fu_243_p2, "tmp_8_fu_243_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, data_read_reg_347, "data_read_reg_347");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_9_reg_354, "tmp_9_reg_354");
    sc_trace(mVcdFile, i_2_fu_256_p2, "i_2_fu_256_p2");
    sc_trace(mVcdFile, i_2_reg_358, "i_2_reg_358");
    sc_trace(mVcdFile, glPLSlices_addr_reg_363, "glPLSlices_addr_reg_363");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_ap_start, "grp_resetCurrentSliceHW_fu_144_ap_start");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_glPLSlices_address0, "grp_resetCurrentSliceHW_fu_144_glPLSlices_address0");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_glPLSlices_ce0, "grp_resetCurrentSliceHW_fu_144_glPLSlices_ce0");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_glPLSlices_we0, "grp_resetCurrentSliceHW_fu_144_glPLSlices_we0");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_glPLSlices_d0, "grp_resetCurrentSliceHW_fu_144_glPLSlices_d0");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_glPLSlices_address1, "grp_resetCurrentSliceHW_fu_144_glPLSlices_address1");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_glPLSlices_ce1, "grp_resetCurrentSliceHW_fu_144_glPLSlices_ce1");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_glPLSlices_we1, "grp_resetCurrentSliceHW_fu_144_glPLSlices_we1");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_glPLSlices_d1, "grp_resetCurrentSliceHW_fu_144_glPLSlices_d1");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_ap_start, "grp_copyToPS_fu_150_ap_start");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_ap_done, "grp_copyToPS_fu_150_ap_done");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_ap_idle, "grp_copyToPS_fu_150_ap_idle");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_ap_ready, "grp_copyToPS_fu_150_ap_ready");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWVALID, "grp_copyToPS_fu_150_m_axi_eventSlice_AWVALID");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWADDR, "grp_copyToPS_fu_150_m_axi_eventSlice_AWADDR");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWID, "grp_copyToPS_fu_150_m_axi_eventSlice_AWID");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWLEN, "grp_copyToPS_fu_150_m_axi_eventSlice_AWLEN");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWSIZE, "grp_copyToPS_fu_150_m_axi_eventSlice_AWSIZE");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWBURST, "grp_copyToPS_fu_150_m_axi_eventSlice_AWBURST");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWLOCK, "grp_copyToPS_fu_150_m_axi_eventSlice_AWLOCK");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWCACHE, "grp_copyToPS_fu_150_m_axi_eventSlice_AWCACHE");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWPROT, "grp_copyToPS_fu_150_m_axi_eventSlice_AWPROT");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWQOS, "grp_copyToPS_fu_150_m_axi_eventSlice_AWQOS");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWREGION, "grp_copyToPS_fu_150_m_axi_eventSlice_AWREGION");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_AWUSER, "grp_copyToPS_fu_150_m_axi_eventSlice_AWUSER");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_WVALID, "grp_copyToPS_fu_150_m_axi_eventSlice_WVALID");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_WDATA, "grp_copyToPS_fu_150_m_axi_eventSlice_WDATA");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_WSTRB, "grp_copyToPS_fu_150_m_axi_eventSlice_WSTRB");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_WLAST, "grp_copyToPS_fu_150_m_axi_eventSlice_WLAST");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_WID, "grp_copyToPS_fu_150_m_axi_eventSlice_WID");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_WUSER, "grp_copyToPS_fu_150_m_axi_eventSlice_WUSER");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARVALID, "grp_copyToPS_fu_150_m_axi_eventSlice_ARVALID");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARADDR, "grp_copyToPS_fu_150_m_axi_eventSlice_ARADDR");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARID, "grp_copyToPS_fu_150_m_axi_eventSlice_ARID");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARLEN, "grp_copyToPS_fu_150_m_axi_eventSlice_ARLEN");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARSIZE, "grp_copyToPS_fu_150_m_axi_eventSlice_ARSIZE");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARBURST, "grp_copyToPS_fu_150_m_axi_eventSlice_ARBURST");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARLOCK, "grp_copyToPS_fu_150_m_axi_eventSlice_ARLOCK");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARCACHE, "grp_copyToPS_fu_150_m_axi_eventSlice_ARCACHE");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARPROT, "grp_copyToPS_fu_150_m_axi_eventSlice_ARPROT");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARQOS, "grp_copyToPS_fu_150_m_axi_eventSlice_ARQOS");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARREGION, "grp_copyToPS_fu_150_m_axi_eventSlice_ARREGION");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_ARUSER, "grp_copyToPS_fu_150_m_axi_eventSlice_ARUSER");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_RREADY, "grp_copyToPS_fu_150_m_axi_eventSlice_RREADY");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_m_axi_eventSlice_BREADY, "grp_copyToPS_fu_150_m_axi_eventSlice_BREADY");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_glPLSlices_address0, "grp_copyToPS_fu_150_glPLSlices_address0");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_glPLSlices_ce0, "grp_copyToPS_fu_150_glPLSlices_ce0");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_136_p4, "ap_phi_mux_i_phi_fu_136_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, grp_resetCurrentSliceHW_fu_144_ap_start_reg, "grp_resetCurrentSliceHW_fu_144_ap_start_reg");
    sc_trace(mVcdFile, grp_copyToPS_fu_150_ap_start_reg, "grp_copyToPS_fu_150_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_250_cast_fu_321_p1, "tmp_250_cast_fu_321_p1");
    sc_trace(mVcdFile, tmp_3_i_fu_326_p2, "tmp_3_i_fu_326_p2");
    sc_trace(mVcdFile, tmp_fu_159_p2, "tmp_fu_159_p2");
    sc_trace(mVcdFile, tmp_op_op9_fu_173_p2, "tmp_op_op9_fu_173_p2");
    sc_trace(mVcdFile, p_neg_fu_187_p2, "p_neg_fu_187_p2");
    sc_trace(mVcdFile, p_lshr_fu_193_p4, "p_lshr_fu_193_p4");
    sc_trace(mVcdFile, tmp_3_fu_179_p3, "tmp_3_fu_179_p3");
    sc_trace(mVcdFile, p_neg_t_fu_203_p2, "p_neg_t_fu_203_p2");
    sc_trace(mVcdFile, tmp_4_fu_209_p4, "tmp_4_fu_209_p4");
    sc_trace(mVcdFile, tmp_1_fu_165_p3, "tmp_1_fu_165_p3");
    sc_trace(mVcdFile, tmp_5_fu_219_p3, "tmp_5_fu_219_p3");
    sc_trace(mVcdFile, tmp_6_fu_227_p3, "tmp_6_fu_227_p3");
    sc_trace(mVcdFile, tmp_10_fu_262_p4, "tmp_10_fu_262_p4");
    sc_trace(mVcdFile, tmp_11_fu_275_p4, "tmp_11_fu_275_p4");
    sc_trace(mVcdFile, tmp_12_fu_292_p4, "tmp_12_fu_292_p4");
    sc_trace(mVcdFile, p_shl_cast_fu_284_p3, "p_shl_cast_fu_284_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_301_p3, "p_shl3_cast_fu_301_p3");
    sc_trace(mVcdFile, tmp_i1_cast_fu_271_p1, "tmp_i1_cast_fu_271_p1");
    sc_trace(mVcdFile, tmp_s_fu_309_p2, "tmp_s_fu_309_p2");
    sc_trace(mVcdFile, tmp_242_fu_315_p2, "tmp_242_fu_315_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("a0_parseEvents.hdltvin.dat");
    mHdltvoutHandle.open("a0_parseEvents.hdltvout.dat");
}

a0_parseEvents::~a0_parseEvents() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete glPLSlices_U;
    delete parseEvents_eventSlice_m_axi_U;
    delete grp_resetCurrentSliceHW_fu_144;
    delete grp_copyToPS_fu_150;
}

void a0_parseEvents::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void a0_parseEvents::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void a0_parseEvents::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void a0_parseEvents::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void a0_parseEvents::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv8_0;
}

void a0_parseEvents::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void a0_parseEvents::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void a0_parseEvents::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void a0_parseEvents::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(grp_resetCurrentSliceHW_fu_144_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(grp_resetCurrentSliceHW_fu_144_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_copyToPS_fu_150_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_copyToPS_fu_150_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_copyToPS_fu_150_ap_ready.read())) {
            grp_copyToPS_fu_150_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_resetCurrentSliceHW_fu_144_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_resetCurrentSliceHW_fu_144_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_resetCurrentSliceHW_fu_144_ap_ready.read())) {
            grp_resetCurrentSliceHW_fu_144_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1))) {
        i_reg_132 = i_2_reg_358.read();
    } else if ((esl_seteq<1,1,1>(grp_resetCurrentSliceHW_fu_144_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_reg_132 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        data_read_reg_347 = data_dout.read();
        tmp_9_reg_354 = data_dout.read().range(1, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_9_reg_354.read(), ap_const_lv1_1))) {
        glPLSlices_addr_reg_363 =  (sc_lv<17>) (tmp_250_cast_fu_321_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        i_2_reg_358 = i_2_fu_256_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_resetCurrentSliceHW_fu_144_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_7_reg_338 = tmp_7_fu_235_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_8_reg_343 = tmp_8_fu_243_p2.read();
    }
}

void a0_parseEvents::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void a0_parseEvents::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void a0_parseEvents::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void a0_parseEvents::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void a0_parseEvents::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void a0_parseEvents::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[5];
}

void a0_parseEvents::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_parseEvents::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_parseEvents::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_parseEvents::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_parseEvents::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_empty_n.read()));
}

void a0_parseEvents::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_empty_n.read()));
}

void a0_parseEvents::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_parseEvents::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = (esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_empty_n.read()));
}

void a0_parseEvents::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_parseEvents::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_parseEvents::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(tmp_8_fu_243_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_ap_done() {
    if ((esl_seteq<1,1,1>(grp_copyToPS_fu_150_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void a0_parseEvents::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_ap_phi_mux_i_phi_fu_136_p4() {
    if ((esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_136_p4 = i_2_reg_358.read();
    } else {
        ap_phi_mux_i_phi_fu_136_p4 = i_reg_132.read();
    }
}

void a0_parseEvents::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(grp_copyToPS_fu_150_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void a0_parseEvents::thread_data_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0))) {
        data_blk_n = data_empty_n.read();
    } else {
        data_blk_n = ap_const_logic_1;
    }
}

void a0_parseEvents::thread_data_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_8_reg_343.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        data_read = ap_const_logic_1;
    } else {
        data_read = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_eventSlice_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        eventSlice_AWVALID = grp_copyToPS_fu_150_m_axi_eventSlice_AWVALID.read();
    } else {
        eventSlice_AWVALID = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_eventSlice_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        eventSlice_BREADY = grp_copyToPS_fu_150_m_axi_eventSlice_BREADY.read();
    } else {
        eventSlice_BREADY = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_eventSlice_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        eventSlice_WVALID = grp_copyToPS_fu_150_m_axi_eventSlice_WVALID.read();
    } else {
        eventSlice_WVALID = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_glPLSlices_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1))) {
        glPLSlices_address0 = glPLSlices_addr_reg_363.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        glPLSlices_address0 =  (sc_lv<17>) (tmp_250_cast_fu_321_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_address0 = grp_copyToPS_fu_150_glPLSlices_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_address0 = grp_resetCurrentSliceHW_fu_144_glPLSlices_address0.read();
    } else {
        glPLSlices_address0 = "XXXXXXXXXXXXXXXXX";
    }
}

void a0_parseEvents::thread_glPLSlices_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1)))) {
        glPLSlices_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        glPLSlices_ce0 = grp_copyToPS_fu_150_glPLSlices_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_ce0 = grp_resetCurrentSliceHW_fu_144_glPLSlices_ce0.read();
    } else {
        glPLSlices_ce0 = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_glPLSlices_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_ce1 = grp_resetCurrentSliceHW_fu_144_glPLSlices_ce1.read();
    } else {
        glPLSlices_ce1 = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_glPLSlices_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1))) {
        glPLSlices_d0 = tmp_3_i_fu_326_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_d0 = grp_resetCurrentSliceHW_fu_144_glPLSlices_d0.read();
    } else {
        glPLSlices_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void a0_parseEvents::thread_glPLSlices_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_9_reg_354.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1))) {
        glPLSlices_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_we0 = grp_resetCurrentSliceHW_fu_144_glPLSlices_we0.read();
    } else {
        glPLSlices_we0 = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_glPLSlices_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        glPLSlices_we1 = grp_resetCurrentSliceHW_fu_144_glPLSlices_we1.read();
    } else {
        glPLSlices_we1 = ap_const_logic_0;
    }
}

void a0_parseEvents::thread_grp_copyToPS_fu_150_ap_start() {
    grp_copyToPS_fu_150_ap_start = grp_copyToPS_fu_150_ap_start_reg.read();
}

void a0_parseEvents::thread_grp_resetCurrentSliceHW_fu_144_ap_start() {
    grp_resetCurrentSliceHW_fu_144_ap_start = grp_resetCurrentSliceHW_fu_144_ap_start_reg.read();
}

void a0_parseEvents::thread_i_2_fu_256_p2() {
    i_2_fu_256_p2 = (!i_reg_132.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<32>(): (sc_biguint<32>(i_reg_132.read()) + sc_biguint<32>(ap_const_lv32_2));
}

void a0_parseEvents::thread_p_lshr_fu_193_p4() {
    p_lshr_fu_193_p4 = p_neg_fu_187_p2.read().range(31, 1);
}

void a0_parseEvents::thread_p_neg_fu_187_p2() {
    p_neg_fu_187_p2 = (tmp_fu_159_p2.read() ^ ap_const_lv32_FFFFFFFF);
}

void a0_parseEvents::thread_p_neg_t_fu_203_p2() {
    p_neg_t_fu_203_p2 = (!ap_const_lv31_0.is_01() || !p_lshr_fu_193_p4.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_0) - sc_biguint<31>(p_lshr_fu_193_p4.read()));
}

void a0_parseEvents::thread_p_shl3_cast_fu_301_p3() {
    p_shl3_cast_fu_301_p3 = esl_concat<14,4>(tmp_12_fu_292_p4.read(), ap_const_lv4_0);
}

void a0_parseEvents::thread_p_shl_cast_fu_284_p3() {
    p_shl_cast_fu_284_p3 = esl_concat<10,8>(tmp_11_fu_275_p4.read(), ap_const_lv8_0);
}

void a0_parseEvents::thread_tmp_10_fu_262_p4() {
    tmp_10_fu_262_p4 = data_read_reg_347.read().range(31, 17);
}

void a0_parseEvents::thread_tmp_11_fu_275_p4() {
    tmp_11_fu_275_p4 = data_read_reg_347.read().range(11, 2);
}

void a0_parseEvents::thread_tmp_12_fu_292_p4() {
    tmp_12_fu_292_p4 = data_read_reg_347.read().range(15, 2);
}

void a0_parseEvents::thread_tmp_1_fu_165_p3() {
    tmp_1_fu_165_p3 = eventsArraySize.read().range(30, 30);
}

void a0_parseEvents::thread_tmp_242_fu_315_p2() {
    tmp_242_fu_315_p2 = (!tmp_i1_cast_fu_271_p1.read().is_01() || !tmp_s_fu_309_p2.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_i1_cast_fu_271_p1.read()) + sc_biguint<18>(tmp_s_fu_309_p2.read()));
}

void a0_parseEvents::thread_tmp_250_cast_fu_321_p1() {
    tmp_250_cast_fu_321_p1 = esl_sext<32,18>(tmp_242_fu_315_p2.read());
}

void a0_parseEvents::thread_tmp_3_fu_179_p3() {
    tmp_3_fu_179_p3 = tmp_op_op9_fu_173_p2.read().range(31, 31);
}

void a0_parseEvents::thread_tmp_3_i_fu_326_p2() {
    tmp_3_i_fu_326_p2 = (!glPLSlices_q0.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(glPLSlices_q0.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void a0_parseEvents::thread_tmp_4_fu_209_p4() {
    tmp_4_fu_209_p4 = tmp_op_op9_fu_173_p2.read().range(31, 1);
}

void a0_parseEvents::thread_tmp_5_fu_219_p3() {
    tmp_5_fu_219_p3 = (!tmp_3_fu_179_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_3_fu_179_p3.read()[0].to_bool())? p_neg_t_fu_203_p2.read(): tmp_4_fu_209_p4.read());
}

void a0_parseEvents::thread_tmp_6_fu_227_p3() {
    tmp_6_fu_227_p3 = (!tmp_1_fu_165_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_1_fu_165_p3.read()[0].to_bool())? ap_const_lv31_0: tmp_5_fu_219_p3.read());
}

void a0_parseEvents::thread_tmp_7_fu_235_p3() {
    tmp_7_fu_235_p3 = esl_concat<31,1>(tmp_6_fu_227_p3.read(), ap_const_lv1_0);
}

void a0_parseEvents::thread_tmp_8_fu_243_p2() {
    tmp_8_fu_243_p2 = (!ap_phi_mux_i_phi_fu_136_p4.read().is_01() || !tmp_7_reg_338.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_136_p4.read() == tmp_7_reg_338.read());
}

void a0_parseEvents::thread_tmp_fu_159_p2() {
    tmp_fu_159_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): eventsArraySize.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void a0_parseEvents::thread_tmp_i1_cast_fu_271_p1() {
    tmp_i1_cast_fu_271_p1 = esl_zext<18,15>(tmp_10_fu_262_p4.read());
}

void a0_parseEvents::thread_tmp_op_op9_fu_173_p2() {
    tmp_op_op9_fu_173_p2 = (tmp_fu_159_p2.read() | ap_const_lv32_1);
}

void a0_parseEvents::thread_tmp_s_fu_309_p2() {
    tmp_s_fu_309_p2 = (!p_shl_cast_fu_284_p3.read().is_01() || !p_shl3_cast_fu_301_p3.read().is_01())? sc_lv<18>(): (sc_biguint<18>(p_shl_cast_fu_284_p3.read()) - sc_biguint<18>(p_shl3_cast_fu_301_p3.read()));
}

void a0_parseEvents::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(grp_resetCurrentSliceHW_fu_144_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(tmp_8_fu_243_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(tmp_8_fu_243_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(grp_copyToPS_fu_150_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void a0_parseEvents::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWVALID\" :  \"" << m_axi_eventSlice_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_AWREADY\" :  \"" << m_axi_eventSlice_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWADDR\" :  \"" << m_axi_eventSlice_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWID\" :  \"" << m_axi_eventSlice_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWLEN\" :  \"" << m_axi_eventSlice_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWSIZE\" :  \"" << m_axi_eventSlice_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWBURST\" :  \"" << m_axi_eventSlice_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWLOCK\" :  \"" << m_axi_eventSlice_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWCACHE\" :  \"" << m_axi_eventSlice_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWPROT\" :  \"" << m_axi_eventSlice_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWQOS\" :  \"" << m_axi_eventSlice_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWREGION\" :  \"" << m_axi_eventSlice_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_AWUSER\" :  \"" << m_axi_eventSlice_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_WVALID\" :  \"" << m_axi_eventSlice_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_WREADY\" :  \"" << m_axi_eventSlice_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_WDATA\" :  \"" << m_axi_eventSlice_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_WSTRB\" :  \"" << m_axi_eventSlice_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_WLAST\" :  \"" << m_axi_eventSlice_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_WID\" :  \"" << m_axi_eventSlice_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_WUSER\" :  \"" << m_axi_eventSlice_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARVALID\" :  \"" << m_axi_eventSlice_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_ARREADY\" :  \"" << m_axi_eventSlice_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARADDR\" :  \"" << m_axi_eventSlice_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARID\" :  \"" << m_axi_eventSlice_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARLEN\" :  \"" << m_axi_eventSlice_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARSIZE\" :  \"" << m_axi_eventSlice_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARBURST\" :  \"" << m_axi_eventSlice_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARLOCK\" :  \"" << m_axi_eventSlice_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARCACHE\" :  \"" << m_axi_eventSlice_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARPROT\" :  \"" << m_axi_eventSlice_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARQOS\" :  \"" << m_axi_eventSlice_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARREGION\" :  \"" << m_axi_eventSlice_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_ARUSER\" :  \"" << m_axi_eventSlice_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_RVALID\" :  \"" << m_axi_eventSlice_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_RREADY\" :  \"" << m_axi_eventSlice_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_RDATA\" :  \"" << m_axi_eventSlice_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_RLAST\" :  \"" << m_axi_eventSlice_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_RID\" :  \"" << m_axi_eventSlice_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_RUSER\" :  \"" << m_axi_eventSlice_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_RRESP\" :  \"" << m_axi_eventSlice_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_BVALID\" :  \"" << m_axi_eventSlice_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_eventSlice_BREADY\" :  \"" << m_axi_eventSlice_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_BRESP\" :  \"" << m_axi_eventSlice_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_BID\" :  \"" << m_axi_eventSlice_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_eventSlice_BUSER\" :  \"" << m_axi_eventSlice_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_dout\" :  \"" << data_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_empty_n\" :  \"" << data_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_read\" :  \"" << data_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eventsArraySize\" :  \"" << eventsArraySize.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eventSlice_offset\" :  \"" << eventSlice_offset.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

